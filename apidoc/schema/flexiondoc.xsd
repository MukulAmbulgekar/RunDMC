<?xml version="1.0" encoding="utf-8"?><xsd:schema targetNamespace="http://www.outsideinsdk.com/xmlns/flexiondoc5_2" elementFormDefault="qualified" xml:lang="en" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.outsideinsdk.com/xmlns/flexiondoc5_2">
	<xsd:annotation>
		<xsd:documentation>
      FlexionDoc Schema

 Copyright (c) 2008, Oracle. All rights reserved.  

      This work is protected by United States and international copyright
      laws and contains certain trade secret information. All use of this
      work is governed by the terms of agreements between Oracle Corporation
      and its licensees or potential licensees. Disclosure of the contents
      is prohibited.
    </xsd:documentation>
		<xsd:appinfo>
		</xsd:appinfo>
	</xsd:annotation>
	<xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd">
		<xsd:annotation>
			<xsd:documentation>
				Get access to the xml: attribute groups for xml:lang
			</xsd:documentation>
		</xsd:annotation>
	</xsd:import>
	<xsd:simpleType name="EAngularUnits">
		<xsd:annotation>
			<xsd:documentation>
				Indicates a method of measuring angles. Used by the {@link Angle} data type.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="deg">
				<xsd:annotation>
					<xsd:documentation>
						Degrees, 0-360
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="rad">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Radians, 0-2&pi;
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="grad">
				<xsd:annotation>
					<xsd:documentation>
						Grads, 0-400
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EAnnotationType">
		<xsd:annotation>
			<xsd:documentation>
				Indicates an annotation type for revised text.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="added">
				<xsd:annotation>
					<xsd:documentation>
						The indicated text or data was added.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="deleted">
				<xsd:annotation>
					<xsd:documentation>
						The indicated text or data was deleted, and should not be displayed.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="comment">
				<xsd:annotation>
					<xsd:documentation>
						A comment was attached to the text.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EArcClosureType">
		<xsd:annotation>
			<xsd:documentation>
				Determines how an arc drawing object is closed
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="open">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Do not close the arc.<br/>
							<img src="arc_open.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="pie">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Close the arc with a pie drawn from the arc start point to the center to the end point.<br/>
							<img src="arc_pie.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="chord">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Close the arc with a chord between the arc start point and end point.<br/>
							<img src="arc_chord.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EAxisTickType">
		<xsd:annotation>
			<xsd:documentation>
				Specifies how to draw the ticks on a chart axis.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="none">
				<xsd:annotation>
					<xsd:documentation>
						Do not draw ticks.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="inside">
				<xsd:annotation>
					<xsd:documentation>
						Draw the ticks on the inside of the axis
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="outside">
				<xsd:annotation>
					<xsd:documentation>
						Draw the ticks on the outside of the axis.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="across">
				<xsd:annotation>
					<xsd:documentation>
						Draw the ticks across the axis (inside and outside).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EAxisType">
		<xsd:annotation>
			<xsd:documentation>
				Specifies a type for a chart axis.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="category-primary">
				<xsd:annotation>
					<xsd:documentation>
						The primary category axis
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="category-secondary">
				<xsd:annotation>
					<xsd:documentation>
						The secondary category axis
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="value-primary">
				<xsd:annotation>
					<xsd:documentation>
						The primary value axis
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="value-secondary">
				<xsd:annotation>
					<xsd:documentation>
						The secondary value axis
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="series-primary">
				<xsd:annotation>
					<xsd:documentation>
						The primary series axis
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="series-secondary">
				<xsd:annotation>
					<xsd:documentation>
						The secondary series axis
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EBreakType">
		<xsd:annotation>
			<xsd:documentation>
				Determines the behavior of the {@link tx.text_break} element.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="soft-page">
				<xsd:annotation>
					<xsd:documentation>
						Soft page break - suggestion for starting a new page.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hard-page">
				<xsd:annotation>
					<xsd:documentation>
						Hard page break - start a new page. Only applicable to word processing documents.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="soft-column">
				<xsd:annotation>
					<xsd:documentation>
						Soft column break - suggestion for starting a new word processing column (or a new 
						column group if currently in the rightmost column).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hard-column">
				<xsd:annotation>
					<xsd:documentation>
						Hard column break - start a new word processing column (or a new column group if currently
						in the rightmost column). 
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hard-line">
				<xsd:annotation>
					<xsd:documentation>
						Starts a new line without starting a new paragraph.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ECharacterSet">
		<xsd:annotation>
			<xsd:documentation>
				ECharacterSet describes mappings of characters to code points. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="unicode">
				<xsd:annotation>
					<xsd:documentation><![CDATA[ 
							Unicode
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ms-office-private">
				<xsd:annotation>
					<xsd:documentation><![CDATA[ 
							A private character set used by Microsoft Office
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="win-webdings">
				<xsd:annotation>
					<xsd:documentation><![CDATA[ 
							The Webdings font
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="win-wingdings">
				<xsd:annotation>
					<xsd:documentation><![CDATA[ 
							The Wingdings font
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="win-wingdings2">
				<xsd:annotation>
					<xsd:documentation><![CDATA[ 
							The Wingdings 2 font
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="win-wingdings3">
				<xsd:annotation>
					<xsd:documentation><![CDATA[ 
							The Wingdings 3 font
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EColumnType">
		<xsd:annotation>
			<xsd:documentation>
				ColumnType determines how text flows in a set of columns and whether or not the columns are balanced.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="newspaper">
				<xsd:annotation>
					<xsd:documentation><![CDATA[ 
							Unbalanced newspaper columns. Text flows down a column to the bottom of a page or column 
							break, then continues at the top of the next column to the right.<br/>
							<img src="columns_newspaper.gif"/> 
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="balanced">
				<xsd:annotation>
					<xsd:documentation><![CDATA[ 
							Vertically balanced newspaper columns. Adjusts newspaper columns so that columns are of equal length.<br/>
							<img src="columns_balanced.gif"/> 
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="parallel">
				<xsd:annotation>
					<xsd:documentation><![CDATA[ 
							Parallel columns. Column groups are arranged in rows where each row is located below the longest 
							column in the previous row. Each column continues, even across pages, until a column break is encountered. 
							Parallel columns are useful for scripts, charts, or lists, but have been superseded by tables in most
							modern applications.<br/>
							<img src="columns_parallel.gif"/> 
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="protect">
				<xsd:annotation>
					<xsd:documentation><![CDATA[ 
							Parallel columns with protect. Similar to parallel, but keeps individual column group rows from being 
							split across pages.<br/>
							<img src="columns_protect.gif"/> 
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="section-balanced">
				<xsd:annotation>
					<xsd:documentation><![CDATA[ 
							Section balanced columns. Similar to balanced, but columns are only balanced if the columns are terminated
							by a section break.<br/>
							<img src="columns_balanced.gif"/> 
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ECompression">
		<xsd:annotation>
			<xsd:documentation>
				Specifies a data compression method.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="none">
				<xsd:annotation>
					<xsd:documentation>
						Data is not compressed
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="deflate">
				<xsd:annotation>
					<xsd:documentation>
						Data is compressed using the LZ77 derivative described in {@reference RFC1950}
						and {@reference RFC1951}.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lzss">
				<xsd:annotation>
					<xsd:documentation>
						Data is compressed using the LZSS data compression specification.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="pk-implode">
				<xsd:annotation>
					<xsd:documentation>
						Data is compressed using the PK Implode data compression specification.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ECounterType">
		<xsd:annotation>
			<xsd:documentation>
				Specifies the repeating object that causes a counter to be incremented.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="equation-frame">
				<xsd:annotation>
					<xsd:documentation>
						Incremented with each equation frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="figure-frame">
				<xsd:annotation>
					<xsd:documentation>
						Incremented with each figure frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="table-frame">
				<xsd:annotation>
					<xsd:documentation>
						Incremented with each table frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="text-frame">
				<xsd:annotation>
					<xsd:documentation>
						Incremented with each text frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="user-frame">
				<xsd:annotation>
					<xsd:documentation>
						Incremented with each user frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="page">
				<xsd:annotation>
					<xsd:documentation>
						Incremented with each page in the current section. Reset to zero when a new section is started.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="footnote">
				<xsd:annotation>
					<xsd:documentation>
						Incremented with each footnote.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="annotation">
				<xsd:annotation>
					<xsd:documentation>
						Incremented with each annotation.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="note">
				<xsd:annotation>
					<xsd:documentation>
						Incremented with each note.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="paragraph">
				<xsd:annotation>
					<xsd:documentation>
						Incremented with each paragraph.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="line">
				<xsd:annotation>
					<xsd:documentation>
						Incremented with each line.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="section">
				<xsd:annotation>
					<xsd:documentation>
						Incremented with each section.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="absolute-page">
				<xsd:annotation>
					<xsd:documentation>
						Incremented with each page in the document. Not affected when a new section is started.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="endnote">
				<xsd:annotation>
					<xsd:documentation>
						Incremented with each endnote.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="user-defined">
				<xsd:annotation>
					<xsd:documentation>
						A user defined counter which is not automatically incremented.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EDataType">
		<xsd:annotation>
			<xsd:documentation>
				Identifies the simple data type for an attribute or element value.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="string">
				<xsd:annotation>
					<xsd:documentation>
						A string value.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="boolean">
				<xsd:annotation>
					<xsd:documentation>
						A boolean value (true/false or yes/no).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="date">
				<xsd:annotation>
					<xsd:documentation>
						A date value.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="time">
				<xsd:annotation>
					<xsd:documentation>
						A time value.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="float">
				<xsd:annotation>
					<xsd:documentation>
						A floating point value.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EDocumentPropertyName">
		<xsd:annotation>
			<xsd:documentation>
				Indicates a predefined document property name.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="abstract">
			</xsd:enumeration>
			<xsd:enumeration value="account">
			</xsd:enumeration>
			<xsd:enumeration value="address">
			</xsd:enumeration>
			<xsd:enumeration value="app_version">
			</xsd:enumeration>
			<xsd:enumeration value="attachments">
			</xsd:enumeration>
			<xsd:enumeration value="authorization">
			</xsd:enumeration>
			<xsd:enumeration value="backup_date">
			</xsd:enumeration>
			<xsd:enumeration value="backup_time">
			</xsd:enumeration>
			<xsd:enumeration value="base_file_location">
			</xsd:enumeration>
			<xsd:enumeration value="bill_to">
			</xsd:enumeration>
			<xsd:enumeration value="blind_copy">
			</xsd:enumeration>
			<xsd:enumeration value="carbon_copy">
			</xsd:enumeration>
			<xsd:enumeration value="category">
			</xsd:enumeration>
			<xsd:enumeration value="character_count">
			</xsd:enumeration>
			<xsd:enumeration value="checked_by">
			</xsd:enumeration>
			<xsd:enumeration value="client">
			</xsd:enumeration>
			<xsd:enumeration value="comment">
			</xsd:enumeration>
			<xsd:enumeration value="company">
			</xsd:enumeration>
			<xsd:enumeration value="completed_date">
			</xsd:enumeration>
			<xsd:enumeration value="count_bytes">
			</xsd:enumeration>
			<xsd:enumeration value="count_chars_with_spaces">
			</xsd:enumeration>
			<xsd:enumeration value="count_lines">
			</xsd:enumeration>
			<xsd:enumeration value="count_mm_clips">
			</xsd:enumeration>
			<xsd:enumeration value="count_notes">
			</xsd:enumeration>
			<xsd:enumeration value="count_paras">
			</xsd:enumeration>
			<xsd:enumeration value="count_slides">
			</xsd:enumeration>
			<xsd:enumeration value="countslideshidden">
			</xsd:enumeration>
			<xsd:enumeration value="completed_time">
			</xsd:enumeration>
			<xsd:enumeration value="creation_date">
			</xsd:enumeration>
			<xsd:enumeration value="creation_time">
			</xsd:enumeration>
			<xsd:enumeration value="department">
			</xsd:enumeration>
			<xsd:enumeration value="destination">
			</xsd:enumeration>
			<xsd:enumeration value="disposition">
			</xsd:enumeration>
			<xsd:enumeration value="division">
			</xsd:enumeration>
			<xsd:enumeration value="doc_number">
			</xsd:enumeration>
			<xsd:enumeration value="doc_type">
			</xsd:enumeration>
			<xsd:enumeration value="edit_minutes">
			</xsd:enumeration>
			<xsd:enumeration value="editor">
			</xsd:enumeration>
			<xsd:enumeration value="forward_to">
			</xsd:enumeration>
			<xsd:enumeration value="group">
			</xsd:enumeration>
			<xsd:enumeration value="heading_pairs">
			</xsd:enumeration>
			<xsd:enumeration value="keywords">
			</xsd:enumeration>
			<xsd:enumeration value="language">
			</xsd:enumeration>
			<xsd:enumeration value="last_print_date">
			</xsd:enumeration>
			<xsd:enumeration value="last_print_time">
			</xsd:enumeration>
			<xsd:enumeration value="last_save_date">
			</xsd:enumeration>
			<xsd:enumeration value="last_save_time">
			</xsd:enumeration>
			<xsd:enumeration value="last_saved_by">
			</xsd:enumeration>
			<xsd:enumeration value="links_dirty">
			</xsd:enumeration>
			<xsd:enumeration value="mail_stop">
			</xsd:enumeration>
			<xsd:enumeration value="manager">
			</xsd:enumeration>
			<xsd:enumeration value="matter">
			</xsd:enumeration>
			<xsd:enumeration value="object_angle">
			</xsd:enumeration>
			<xsd:enumeration value="object_height">
			</xsd:enumeration>
			<xsd:enumeration value="object_id">
			</xsd:enumeration>
			<xsd:enumeration value="object_master">
			</xsd:enumeration>
			<xsd:enumeration value="object_name">
			</xsd:enumeration>
			<xsd:enumeration value="object_type">
			</xsd:enumeration>
			<xsd:enumeration value="object_width">
			</xsd:enumeration>
			<xsd:enumeration value="office">
			</xsd:enumeration>
			<xsd:enumeration value="operator">
			</xsd:enumeration>
			<xsd:enumeration value="owner">
			</xsd:enumeration>
			<xsd:enumeration value="page_count">
			</xsd:enumeration>
			<xsd:enumeration value="presentation_format">
			</xsd:enumeration>
			<xsd:enumeration value="primary_author">
			</xsd:enumeration>
			<xsd:enumeration value="project">
			</xsd:enumeration>
			<xsd:enumeration value="publisher">
			</xsd:enumeration>
			<xsd:enumeration value="purpose">
			</xsd:enumeration>
			<xsd:enumeration value="received_from">
			</xsd:enumeration>
			<xsd:enumeration value="recorded_by">
			</xsd:enumeration>
			<xsd:enumeration value="recorded_date">
			</xsd:enumeration>
			<xsd:enumeration value="recorded_time">
			</xsd:enumeration>
			<xsd:enumeration value="reference">
			</xsd:enumeration>
			<xsd:enumeration value="revision_date">
			</xsd:enumeration>
			<xsd:enumeration value="revision_notes">
			</xsd:enumeration>
			<xsd:enumeration value="revision_number">
			</xsd:enumeration>
			<xsd:enumeration value="revision_time">
			</xsd:enumeration>
			<xsd:enumeration value="scale_crop">
			</xsd:enumeration>
			<xsd:enumeration value="secondary_author">
			</xsd:enumeration>
			<xsd:enumeration value="section">
			</xsd:enumeration>
			<xsd:enumeration value="security">
			</xsd:enumeration>
			<xsd:enumeration value="source">
			</xsd:enumeration>
			<xsd:enumeration value="status">
			</xsd:enumeration>
			<xsd:enumeration value="subject">
			</xsd:enumeration>
			<xsd:enumeration value="title">
			</xsd:enumeration>
			<xsd:enumeration value="title_of_parts">
			</xsd:enumeration>
			<xsd:enumeration value="typist">
			</xsd:enumeration>
			<xsd:enumeration value="version_date">
			</xsd:enumeration>
			<xsd:enumeration value="version_notes">
			</xsd:enumeration>
			<xsd:enumeration value="version_number">
			</xsd:enumeration>
			<xsd:enumeration value="version_time">
			</xsd:enumeration>
			<xsd:enumeration value="word_count">
			</xsd:enumeration>
			<xsd:enumeration value="audio_encryption">
			</xsd:enumeration>
			<xsd:enumeration value="audio_seek_point_index">
			</xsd:enumeration>
			<xsd:enumeration value="commercial_frame">
			</xsd:enumeration>
			<xsd:enumeration value="encryption_method_registration">
			</xsd:enumeration>
			<xsd:enumeration value="equalization_2">
			</xsd:enumeration>
			<xsd:enumeration value="equalization">
			</xsd:enumeration>
			<xsd:enumeration value="event_timing_codes">
			</xsd:enumeration>
			<xsd:enumeration value="general_encapsulated_object">
			</xsd:enumeration>
			<xsd:enumeration value="group_identification_registration">
			</xsd:enumeration>
			<xsd:enumeration value="involved_people_list">
			</xsd:enumeration>
			<xsd:enumeration value="linked_information">
			</xsd:enumeration>
			<xsd:enumeration value="music_cd_identifier">
			</xsd:enumeration>
			<xsd:enumeration value="mpeg_location_lookup_table">
			</xsd:enumeration>
			<xsd:enumeration value="ownership_frame">
			</xsd:enumeration>
			<xsd:enumeration value="play_counter">
			</xsd:enumeration>
			<xsd:enumeration value="popularimeter">
			</xsd:enumeration>
			<xsd:enumeration value="position_synchronisation_frame">
			</xsd:enumeration>
			<xsd:enumeration value="private_frame">
			</xsd:enumeration>
			<xsd:enumeration value="recommended_buffer_size">
			</xsd:enumeration>
			<xsd:enumeration value="relative_volume_adjustment_2">
			</xsd:enumeration>
			<xsd:enumeration value="relative_volume_adjustment">
			</xsd:enumeration>
			<xsd:enumeration value="reverb">
			</xsd:enumeration>
			<xsd:enumeration value="seek">
			</xsd:enumeration>
			<xsd:enumeration value="signature">
			</xsd:enumeration>
			<xsd:enumeration value="synchronized_lyrics">
			</xsd:enumeration>
			<xsd:enumeration value="synchronized_tempo_codes">
			</xsd:enumeration>
			<xsd:enumeration value="album_title">
			</xsd:enumeration>
			<xsd:enumeration value="bpm">
			</xsd:enumeration>
			<xsd:enumeration value="composer">
			</xsd:enumeration>
			<xsd:enumeration value="content_type">
			</xsd:enumeration>
			<xsd:enumeration value="copyright_message">
			</xsd:enumeration>
			<xsd:enumeration value="date">
			</xsd:enumeration>
			<xsd:enumeration value="playlist_delay">
			</xsd:enumeration>
			<xsd:enumeration value="encoded_by">
			</xsd:enumeration>
			<xsd:enumeration value="lyricist">
			</xsd:enumeration>
			<xsd:enumeration value="file_type">
			</xsd:enumeration>
			<xsd:enumeration value="time">
			</xsd:enumeration>
			<xsd:enumeration value="involved_people_list_2">
			</xsd:enumeration>
			<xsd:enumeration value="content_group_description">
			</xsd:enumeration>
			<xsd:enumeration value="subtitle">
			</xsd:enumeration>
			<xsd:enumeration value="initial_key">
			</xsd:enumeration>
			<xsd:enumeration value="length">
			</xsd:enumeration>
			<xsd:enumeration value="musician_credits_list">
			</xsd:enumeration>
			<xsd:enumeration value="media_type">
			</xsd:enumeration>
			<xsd:enumeration value="mood">
			</xsd:enumeration>
			<xsd:enumeration value="original_title">
			</xsd:enumeration>
			<xsd:enumeration value="original_filename">
			</xsd:enumeration>
			<xsd:enumeration value="original_lyricist">
			</xsd:enumeration>
			<xsd:enumeration value="original_artist">
			</xsd:enumeration>
			<xsd:enumeration value="original_release_year">
			</xsd:enumeration>
			<xsd:enumeration value="file_owner">
			</xsd:enumeration>
			<xsd:enumeration value="lead_performer">
			</xsd:enumeration>
			<xsd:enumeration value="orchestra">
			</xsd:enumeration>
			<xsd:enumeration value="conductor">
			</xsd:enumeration>
			<xsd:enumeration value="interpreted_by">
			</xsd:enumeration>
			<xsd:enumeration value="part_of_a_set">
			</xsd:enumeration>
			<xsd:enumeration value="produced_notice">
			</xsd:enumeration>
			<xsd:enumeration value="track_number">
			</xsd:enumeration>
			<xsd:enumeration value="recording_dates">
			</xsd:enumeration>
			<xsd:enumeration value="internet_radio_station_name">
			</xsd:enumeration>
			<xsd:enumeration value="internet_radio_station_owner">
			</xsd:enumeration>
			<xsd:enumeration value="size">
			</xsd:enumeration>
			<xsd:enumeration value="album_sort_order">
			</xsd:enumeration>
			<xsd:enumeration value="title_sort_order">
			</xsd:enumeration>
			<xsd:enumeration value="performer_sort_order">
			</xsd:enumeration>
			<xsd:enumeration value="isrc">
			</xsd:enumeration>
			<xsd:enumeration value="settings">
			</xsd:enumeration>
			<xsd:enumeration value="set_subtitle">
			</xsd:enumeration>
			<xsd:enumeration value="year">
			</xsd:enumeration>
			<xsd:enumeration value="unique_file_identifier">
			</xsd:enumeration>
			<xsd:enumeration value="terms_of_use">
			</xsd:enumeration>
			<xsd:enumeration value="unsynchronized_lyrics">
			</xsd:enumeration>
			<xsd:enumeration value="commercial_information">
			</xsd:enumeration>
			<xsd:enumeration value="copyright">
			</xsd:enumeration>
			<xsd:enumeration value="official_audio_file_webpage">
			</xsd:enumeration>
			<xsd:enumeration value="official_artist_webpage">
			</xsd:enumeration>
			<xsd:enumeration value="official_audio_source_webpage">
			</xsd:enumeration>
			<xsd:enumeration value="official_internet_radio_station_webpage">
			</xsd:enumeration>
			<xsd:enumeration value="payment">
			</xsd:enumeration>
			<xsd:enumeration value="publisher_webpage">
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EEncoding">
		<xsd:annotation>
			<xsd:documentation>
				Indicates an encoding for arbitrary data. Encodings are used when the unencoded data contains characters that may not be legal Unicode characters.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="none">
				<xsd:annotation>
					<xsd:documentation>
						Indicates the data is not encoded. 
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="base-64">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Base 64 encoding, as described in {@reference RFC1421}, Section 4.3.2.4, <i>Step 4: Printable Encoding</i>.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hex">
				<xsd:annotation>
					<xsd:documentation>
						Hex encoding. Each byte of data is encoded as two hexadecimal digits. Hexadecimal digits 0 through 9 are
						represented as characters '0' through '9', and hexadecimal digits A through F are represented as either
						characters 'A' through 'F' or as characters 'a' through 'f'. Each pair of digits may or may not be 
						separated by whitespace.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EEvenOdd">
		<xsd:annotation>
			<xsd:documentation>
				Indicates even or odd.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="even"/>
			<xsd:enumeration value="odd"/>
			<xsd:enumeration value="first"/>
			<xsd:enumeration value="all"/>
			<xsd:enumeration value="none"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EFontGroupEntryType">
		<xsd:annotation>
			<xsd:documentation>
				Associates a type with a font group entry. This may be used to automatically select the approprate font from the set based on the glyph to be displayed.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="unknown"/>
			<xsd:enumeration value="default"/>
			<xsd:enumeration value="roman"/>
			<xsd:enumeration value="numeric"/>
			<xsd:enumeration value="symbol"/>
			<xsd:enumeration value="far-east"/>
			<xsd:enumeration value="non-far-east"/>
			<xsd:enumeration value="low-range"/>
			<xsd:enumeration value="bidi"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EFontHorzOrigin">
		<xsd:annotation>
			<xsd:documentation>
				Indicates a horizontal origin for positioning text. The origin is relative to the text being positioned
				(e.g. &quot;center&quot; indicates the horizontal center of the text).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="left">
				<xsd:annotation>
					<xsd:documentation>
						Left edge of the text
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="center">
				<xsd:annotation>
					<xsd:documentation>
						Horizontal center of the text
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="right">
				<xsd:annotation>
					<xsd:documentation>
						Right edge of the text
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EFontStretch">
		<xsd:annotation>
			<xsd:documentation>
				Specifies how much the individual characters of the text should 
				be stretched or condensed. These values are equivalent to those described
				for the 'font-stretch' attribute in {@reference CSS}.				
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="ultra-condensed"/>
			<xsd:enumeration value="extra-condensed"/>
			<xsd:enumeration value="condensed"/>
			<xsd:enumeration value="semi-condensed"/>
			<xsd:enumeration value="normal"/>
			<xsd:enumeration value="semi-expanded"/>
			<xsd:enumeration value="expanded"/>
			<xsd:enumeration value="extra-expanded"/>
			<xsd:enumeration value="ultra-expanded"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EFontStyle">
		<xsd:annotation>
			<xsd:documentation>
				The font style specifies whether the text is to be rendered using a normal, italic, or oblique face.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="normal">
				<xsd:annotation>
					<xsd:documentation>
						The normal face.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="italic">
				<xsd:annotation>
					<xsd:documentation>
						A more cursive companion face to the normal face, but not so cursive as to make it a script face.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="oblique">
				<xsd:annotation>
					<xsd:documentation>
						A slanted form of the normal face.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EFontVertOrigin">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Indicates a vertical origin for positioning text. The origin is relative to the text being positioned
				(e.g. "middle" indicates the vertical center of the text).
				<img src="ascentdescent.gif"/>
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="top">
				<xsd:annotation>
					<xsd:documentation>
						The top of the text string (baseline - ascent)
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="middle">
				<xsd:annotation>
					<xsd:documentation>
						The middle of the string (baseline - (ascent/2))
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="baseline">
				<xsd:annotation>
					<xsd:documentation>
						The baseline of the text string
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bottom">
				<xsd:annotation>
					<xsd:documentation>
						The bottom of the text string (baseline + descent)
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EFontWeight">
		<xsd:annotation>
			<xsd:documentation>
				Indicates the boldness of the text.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="normal">
				<xsd:annotation>
					<xsd:documentation>
						Display the text non-bold.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bold">
				<xsd:annotation>
					<xsd:documentation>
						Display the text in bold
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EFormatConditionType">
		<xsd:annotation>
			<xsd:documentation>
				Indicates the situation under which an {@link ss.value_format_condition} should be applied.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="true">
				<xsd:annotation>
					<xsd:documentation>
						The condition evaluates to true if the cell evaluates to a true, nonzero, 
						or nonempty value. Otherwise it evaluates to false.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="false">
				<xsd:annotation>
					<xsd:documentation>
						The condition evaluates to true if the cell evaluates to a false, zero, or 
						empty value. Otherwise it evaluates to false.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="error">
				<xsd:annotation>
					<xsd:documentation>
						The condition evaluates to true if the cell has an error. Otherwise it evaluates to false. 
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="empty">
				<xsd:annotation>
					<xsd:documentation>
						The condition evaluates to true if the cell is empty. Otherwise it evaluates to false.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EFrameAnchor">
		<xsd:annotation>
			<xsd:documentation>
				Defines the text element that a frame is anchored to. When a document is edited, the frame 
				will move with it's anchor element.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="character">
				<xsd:annotation>
					<xsd:documentation>
						Frame is anchored to the character immediately preceeding the wp.frame element.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="paragraph">
				<xsd:annotation>
					<xsd:documentation>
						Frame is anchored to the paragraph containing the wp.frame element.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="page">
				<xsd:annotation>
					<xsd:documentation>
						Frame is anchored to the page. It will not move with the text.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EFrameWrapSide">
		<xsd:annotation>
			<xsd:documentation>
				Used when text is wrapped around a frame. Indicates which side(s) of the frame the text will be displayed on.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="none">
				<xsd:annotation>
					<xsd:documentation>
						Text is not wrapped around the frame. It stops above the frame and continues below the frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="both">
				<xsd:annotation>
					<xsd:documentation>
						Text is wrapped along both sides of the frame. Each text line is broken in the middle by the frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="left">
				<xsd:annotation>
					<xsd:documentation>
						Text is wrapped only along the left side of the frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="right">
				<xsd:annotation>
					<xsd:documentation>
						Text is wrapped only along the right side of the frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="largest">
				<xsd:annotation>
					<xsd:documentation>
						Text is wrapped along either the left side or the right side, whichever has more
						room horizontally. Preference is given to the left side if the left and right have the 
						same amount of space.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EFrameWrapStyle">
		<xsd:annotation>
			<xsd:documentation>
				Indicates the general wrapping behavior of text around a frame.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="box">
				<xsd:annotation>
					<xsd:documentation>
						Text is wrapped around an imaginary box surrounding the frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="contour">
				<xsd:annotation>
					<xsd:documentation>
						Text is wrapped around an imaginary contour around the contents of the frame. 
						If contour wrapping is not supported, this value should be interpreted the same as box.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="behind">
				<xsd:annotation>
					<xsd:documentation>
						Text is not wrapped around the frame, but rather is displayed continuously on a plane behind the frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="in-front">
				<xsd:annotation>
					<xsd:documentation>
						Text is not wrapped around the frame, but rather is displayed continuously on a plane in front of the frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EGraphType">
		<xsd:annotation>
			<xsd:documentation>
				Specifies a graph type.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="column">
				<xsd:annotation>
					<xsd:documentation>
						Column graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bar">
				<xsd:annotation>
					<xsd:documentation>
						Bar graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="line">
				<xsd:annotation>
					<xsd:documentation>
						Line graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="pie">
				<xsd:annotation>
					<xsd:documentation>
						Pie graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="xy">
				<xsd:annotation>
					<xsd:documentation>
						X-Y (scatter) graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="area">
				<xsd:annotation>
					<xsd:documentation>
						Area graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="doughnut">
				<xsd:annotation>
					<xsd:documentation>
						Doughnut graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="radar">
				<xsd:annotation>
					<xsd:documentation>
						Radar graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="surface">
				<xsd:annotation>
					<xsd:documentation>
						Surface graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bubble">
				<xsd:annotation>
					<xsd:documentation>
						Bubble graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hilo">
				<xsd:annotation>
					<xsd:documentation>
						High-low-open-close-volume graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mixed">
				<xsd:annotation>
					<xsd:documentation>
						Graph composed of multiple types
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EHeaderFooterMode">
		<xsd:annotation>
			<xsd:documentation>
				Indicates whether a header or footer should be enabled or disabled.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="disable-page">
				<xsd:annotation>
					<xsd:documentation>
						Suppress on the current page only
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="disable">
				<xsd:annotation>
					<xsd:documentation>
						Suppress for the remainder of the document, including the current page. The 
						header or footer will not display for the remainder of the document, unless
						it is reenabled.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="enable">
				<xsd:annotation>
					<xsd:documentation>
						Turn on the header or footer
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EHorizontalAlignment">
		<xsd:annotation>
			<xsd:documentation>
				Specifies a horizontal alignment.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="default">
				<xsd:annotation>
					<xsd:documentation>
						Specifies that the default justification (usually left) is to be used.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="left">
				<xsd:annotation>
					<xsd:documentation>
						Specifies that text is to be horizontally aligned to the left.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="center">
				<xsd:annotation>
					<xsd:documentation>
						Specifies that text is to be horizontally aligned in the center.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="right">
				<xsd:annotation>
					<xsd:documentation>
						Specifies that text is to be horizontally aligned to the right.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="word-justify">
				<xsd:annotation>
					<xsd:documentation>
						Specifies that the text is to be justified by adding extra spacing between words.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="all-justify">
				<xsd:annotation>
					<xsd:documentation>
						Specifies that the text is to be justified by adding extra spacing between words and characters.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="fill">
				<xsd:annotation>
					<xsd:documentation>
						Specifies that the text is to be repeated until it fills the horizontal space.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="general">
				<xsd:annotation>
					<xsd:documentation>
						Specifies that text is to be left-aligned and numbers are to be right-aligned. 
						Only used by spreadsheets.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="distribute-letter">
				<xsd:annotation>
					<xsd:documentation>
						Used for ruby text. If the width of the ruby text is smaller than that of the base, then the 
						ruby text contents are evenly distributed across the width of the base, with the first and last 
						ruby text characters lining up with the corresponding first and last base characters. If the width 
						of the ruby text is at least the width of the base, then the letters of the base are evenly 
						distributed across the width of the ruby text.
	
						References: [ILCSS] [RUBY]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="distribute-space">
				<xsd:annotation>
					<xsd:documentation>
						Used for ruby text. If the width of the ruby text is smaller than that of the base, then the ruby 
						text contents are evenly distributed across the width of the base, with a certain amount of whitespace 
						preceding the first and following the last character in the ruby text. That amount of whitespace is normally 
						equal to half the amount of inter-character space of the ruby text. If the width of the ruby text is at least 
						the width of the base, then the same type of space distribution applies to the base. In other words, if the 
						base is shorter than the ruby text, the base is distribute-space aligned. This type of alignment is sometimes 
						referred to as the &quot;1:2:1&quot; alignment.
	
						References: [ILCSS] [RUBY]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="line-edge">
				<xsd:annotation>
					<xsd:documentation>
						Used for ruby text. If the ruby text is not adjacent to a line edge, it is aligned as in 'GENERAL'. If it is 
						adjacent to a line edge, then it is still aligned as in auto, but the side of the ruby text that touches the 
						end of the line is lined up with the corresponding edge of the base. This type of alignment is relevant only 
						to the scenario where the ruby text is longer than the ruby base. In the other scenarios, this is just 'auto'. 
	
						References: [ILCSS] [RUBY]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EHorizontalOrigin">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Specifies a relative horizontal origin in a word processing document.
					<img src="pagelayout.gif"/>
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="page-left">
				<xsd:annotation>
					<xsd:documentation>
						The left edge of the page.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="page-center">
				<xsd:annotation>
					<xsd:documentation>
						The horizontal center of the page.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="page-right">
				<xsd:annotation>
					<xsd:documentation>
						The right edge of the page.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="left-gutter">
				<xsd:annotation>
					<xsd:documentation>
						The left gutter (or the left edge of the page if the page has no left gutter).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="right-gutter">
				<xsd:annotation>
					<xsd:documentation>
						The right gutter (or the right edge of the page if the page has no right gutter).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="left-margin">
				<xsd:annotation>
					<xsd:documentation>
						The left margin.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="margin-center">
				<xsd:annotation>
					<xsd:documentation>
						Horizontally centered between the left and right margins.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="right-margin">
				<xsd:annotation>
					<xsd:documentation>
						The right margin.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="frame-left">
				<xsd:annotation>
					<xsd:documentation>
						The left edge of the frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="frame-center">
				<xsd:annotation>
					<xsd:documentation>
						The horizontal center of the frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="frame-right">
				<xsd:annotation>
					<xsd:documentation>
						The right edge of the frame.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="paragraph-left">
				<xsd:annotation>
					<xsd:documentation>
						The left edge of the paragraph.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="paragraph-center">
				<xsd:annotation>
					<xsd:documentation>
						The horizontal center of the paragraph.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="paragraph-right">
				<xsd:annotation>
					<xsd:documentation>
						The right edge of the paragraph.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="character">
				<xsd:annotation>
					<xsd:documentation>
						The left edge of the current character.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="current">
				<xsd:annotation>
					<xsd:documentation>
						The current position
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="auto">
				<xsd:annotation>
					<xsd:documentation>
						The origin should be determined by the consumer.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EHyperlinkTargetWindow">
		<xsd:annotation>
			<xsd:documentation>
				Indicates which frame or window the target of the hyperlink will be displayed in. 

				Note that within the documentation for this enumeration, the term &quot;frame&quot; refers to a frame as defined by HTML, not to a FlexionDoc frame element.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="blank">
				<xsd:annotation>
					<xsd:documentation>
						The user agent should load the designated document in a new, unnamed window. If this 
						feature is not supported, &quot;blank&quot; should be treated as &quot;top&quot;.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="self">
				<xsd:annotation>
					<xsd:documentation>
						The user agent should load the document in the same HTML frame as the element that refers to this 
						target. If HTML frames are not supported, this value should be treated as &quot;top&quot;.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="parent">
				<xsd:annotation>
					<xsd:documentation>
						The user agent should load the document into the immediate parent of the current HTML frame. This 
						value is equivalent to &quot;self&quot; if the current HTML frame has no parent. If HTML frames 
						are not supported, this value should be treated as &quot;top&quot;.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="top">
				<xsd:annotation>
					<xsd:documentation>
						The user agent should load the document into the full, original window (thus cancelling 
						all other HTML frames). This value is equivalent to &quot;self&quot; if the current frame has no parent.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ELanguage">
		<xsd:annotation>
			<xsd:documentation>
				Indicates the {@reference RFC1766} language code for the affected text.
				These values are used by the xml:lang attribute on certain elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="aa">
				<xsd:annotation>
					<xsd:documentation>
						Afar
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ab">
				<xsd:annotation>
					<xsd:documentation>
						Abkhazian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="af">
				<xsd:annotation>
					<xsd:documentation>
						Afrikaans
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="am">
				<xsd:annotation>
					<xsd:documentation>
						Amharic
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ar">
				<xsd:annotation>
					<xsd:documentation>
						Arabic
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="as">
				<xsd:annotation>
					<xsd:documentation>
						Assamese
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ay">
				<xsd:annotation>
					<xsd:documentation>
						Aymara
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="az">
				<xsd:annotation>
					<xsd:documentation>
						Azerbaijani
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ba">
				<xsd:annotation>
					<xsd:documentation>
						Bashkir
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="be">
				<xsd:annotation>
					<xsd:documentation>
						Byelourussian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bg">
				<xsd:annotation>
					<xsd:documentation>
						Bulgarian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bh">
				<xsd:annotation>
					<xsd:documentation>
						Bihari
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bi">
				<xsd:annotation>
					<xsd:documentation>
						Bislama
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bn">
				<xsd:annotation>
					<xsd:documentation>
						Bengali
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bo">
				<xsd:annotation>
					<xsd:documentation>
						Tibetan
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="br">
				<xsd:annotation>
					<xsd:documentation>
						Breton
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ca">
				<xsd:annotation>
					<xsd:documentation>
						Catalan
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="co">
				<xsd:annotation>
					<xsd:documentation>
						Corsican
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="cs">
				<xsd:annotation>
					<xsd:documentation>
						Czech
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="cy">
				<xsd:annotation>
					<xsd:documentation>
						Welsh
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="da">
				<xsd:annotation>
					<xsd:documentation>
						Danish
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="de">
				<xsd:annotation>
					<xsd:documentation>
						German
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dz">
				<xsd:annotation>
					<xsd:documentation>
						Bhutani
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="el">
				<xsd:annotation>
					<xsd:documentation>
						Greek
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="en">
				<xsd:annotation>
					<xsd:documentation>
						English
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="eo">
				<xsd:annotation>
					<xsd:documentation>
						Esperanto
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="es">
				<xsd:annotation>
					<xsd:documentation>
						Spanish
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="et">
				<xsd:annotation>
					<xsd:documentation>
						Estonian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="eu">
				<xsd:annotation>
					<xsd:documentation>
						Basque
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="fa">
				<xsd:annotation>
					<xsd:documentation>
						Persian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="fi">
				<xsd:annotation>
					<xsd:documentation>
						Finnish
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="fj">
				<xsd:annotation>
					<xsd:documentation>
						Fiji
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="fo">
				<xsd:annotation>
					<xsd:documentation>
						Faeroese
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="fr">
				<xsd:annotation>
					<xsd:documentation>
						French
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="fy">
				<xsd:annotation>
					<xsd:documentation>
						Frisian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ga">
				<xsd:annotation>
					<xsd:documentation>
						Irish
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="gd">
				<xsd:annotation>
					<xsd:documentation>
						Scots Gaelic
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="gl">
				<xsd:annotation>
					<xsd:documentation>
						Galician
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="gn">
				<xsd:annotation>
					<xsd:documentation>
						Guarani
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="gu">
				<xsd:annotation>
					<xsd:documentation>
						Gujarati
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ha">
				<xsd:annotation>
					<xsd:documentation>
						Hausa
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hi">
				<xsd:annotation>
					<xsd:documentation>
						Hindi
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hr">
				<xsd:annotation>
					<xsd:documentation>
						Croatian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hu">
				<xsd:annotation>
					<xsd:documentation>
						Hungarian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hy">
				<xsd:annotation>
					<xsd:documentation>
						Armenian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ia">
				<xsd:annotation>
					<xsd:documentation>
						Interlingua
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ie">
				<xsd:annotation>
					<xsd:documentation>
						Interlingue
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ik">
				<xsd:annotation>
					<xsd:documentation>
						Inupiak
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="in">
				<xsd:annotation>
					<xsd:documentation>
						Indonesian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="is">
				<xsd:annotation>
					<xsd:documentation>
						Icelandic
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="it">
				<xsd:annotation>
					<xsd:documentation>
						Italian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="iw">
				<xsd:annotation>
					<xsd:documentation>
						Hebrew
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ja">
				<xsd:annotation>
					<xsd:documentation>
						Japanese
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ji">
				<xsd:annotation>
					<xsd:documentation>
						Yiddish
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="jw">
				<xsd:annotation>
					<xsd:documentation>
						Javanese
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ka">
				<xsd:annotation>
					<xsd:documentation>
						Georgian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="kk">
				<xsd:annotation>
					<xsd:documentation>
						Kazakh
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="kl">
				<xsd:annotation>
					<xsd:documentation>
						Greenlandic
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="km">
				<xsd:annotation>
					<xsd:documentation>
						Cambodian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="kn">
				<xsd:annotation>
					<xsd:documentation>
						Kannada
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ko">
				<xsd:annotation>
					<xsd:documentation>
						Korean
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ks">
				<xsd:annotation>
					<xsd:documentation>
						Kashmiri
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ku">
				<xsd:annotation>
					<xsd:documentation>
						Kurdish
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ky">
				<xsd:annotation>
					<xsd:documentation>
						Kirghiz
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="la">
				<xsd:annotation>
					<xsd:documentation>
						Latin
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ln">
				<xsd:annotation>
					<xsd:documentation>
						Lingala
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lo">
				<xsd:annotation>
					<xsd:documentation>
						Laothian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lt">
				<xsd:annotation>
					<xsd:documentation>
						Lithuanian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lv">
				<xsd:annotation>
					<xsd:documentation>
						Latvian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mg">
				<xsd:annotation>
					<xsd:documentation>
						Malagasy
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mi">
				<xsd:annotation>
					<xsd:documentation>
						Maori
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mk">
				<xsd:annotation>
					<xsd:documentation>
						Macedonian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ml">
				<xsd:annotation>
					<xsd:documentation>
						Malayalam
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mn">
				<xsd:annotation>
					<xsd:documentation>
						Mongolian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mo">
				<xsd:annotation>
					<xsd:documentation>
						Moldavian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mr">
				<xsd:annotation>
					<xsd:documentation>
						Marathi
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ms">
				<xsd:annotation>
					<xsd:documentation>
						Malay
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mt">
				<xsd:annotation>
					<xsd:documentation>
						Maltese
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="my">
				<xsd:annotation>
					<xsd:documentation>
						Burmese
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="na">
				<xsd:annotation>
					<xsd:documentation>
						Nauru
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ne">
				<xsd:annotation>
					<xsd:documentation>
						Nepali
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="nl">
				<xsd:annotation>
					<xsd:documentation>
						Dutch
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="no">
				<xsd:annotation>
					<xsd:documentation>
						Norwegian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="oc">
				<xsd:annotation>
					<xsd:documentation>
						Occitan
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="om">
				<xsd:annotation>
					<xsd:documentation>
						Oromo
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="or">
				<xsd:annotation>
					<xsd:documentation>
						Oriya
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="pa">
				<xsd:annotation>
					<xsd:documentation>
						Punjabi
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="pl">
				<xsd:annotation>
					<xsd:documentation>
						Polish
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ps">
				<xsd:annotation>
					<xsd:documentation>
						Pashto
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="pt">
				<xsd:annotation>
					<xsd:documentation>
						Portuguese
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="qu">
				<xsd:annotation>
					<xsd:documentation>
						Quechua
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="rm">
				<xsd:annotation>
					<xsd:documentation>
						Rhaeto-romance
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="rn">
				<xsd:annotation>
					<xsd:documentation>
						Kirundi
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ro">
				<xsd:annotation>
					<xsd:documentation>
						Romanian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ru">
				<xsd:annotation>
					<xsd:documentation>
						Russian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="rw">
				<xsd:annotation>
					<xsd:documentation>
						Kinyarwanda
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="sa">
				<xsd:annotation>
					<xsd:documentation>
						Sanskrit
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="sd">
				<xsd:annotation>
					<xsd:documentation>
						Sindhi
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="sg">
				<xsd:annotation>
					<xsd:documentation>
						Sangro
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="sh">
				<xsd:annotation>
					<xsd:documentation>
						Serbo-Croatian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="si">
				<xsd:annotation>
					<xsd:documentation>
						Singhalese
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="sk">
				<xsd:annotation>
					<xsd:documentation>
						Slovak
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="sl">
				<xsd:annotation>
					<xsd:documentation>
						Slovenian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="sm">
				<xsd:annotation>
					<xsd:documentation>
						Samoan
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="sn">
				<xsd:annotation>
					<xsd:documentation>
						Shona
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="so">
				<xsd:annotation>
					<xsd:documentation>
						Somali
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="sq">
				<xsd:annotation>
					<xsd:documentation>
						Albanian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="sr">
				<xsd:annotation>
					<xsd:documentation>
						Serbian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ss">
				<xsd:annotation>
					<xsd:documentation>
						Siswati
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="st">
				<xsd:annotation>
					<xsd:documentation>
						Sesotho
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="su">
				<xsd:annotation>
					<xsd:documentation>
						Sundanese
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="sv">
				<xsd:annotation>
					<xsd:documentation>
						Swedish
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="sw">
				<xsd:annotation>
					<xsd:documentation>
						Swahili
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ta">
				<xsd:annotation>
					<xsd:documentation>
						Tamil
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="te">
				<xsd:annotation>
					<xsd:documentation>
						Tegulu
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="tg">
				<xsd:annotation>
					<xsd:documentation>
						Tajik
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="th">
				<xsd:annotation>
					<xsd:documentation>
						Thai
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ti">
				<xsd:annotation>
					<xsd:documentation>
						Tigrinya
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="tk">
				<xsd:annotation>
					<xsd:documentation>
						Turkmen
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="tl">
				<xsd:annotation>
					<xsd:documentation>
						Tagalog
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="tn">
				<xsd:annotation>
					<xsd:documentation>
						Setswana
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="to">
				<xsd:annotation>
					<xsd:documentation>
						Tonga
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="tr">
				<xsd:annotation>
					<xsd:documentation>
						Turkish
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ts">
				<xsd:annotation>
					<xsd:documentation>
						Tsonga
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="tt">
				<xsd:annotation>
					<xsd:documentation>
						Tatar
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="tw">
				<xsd:annotation>
					<xsd:documentation>
						Twi
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="uk">
				<xsd:annotation>
					<xsd:documentation>
						Ukrainian
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ur">
				<xsd:annotation>
					<xsd:documentation>
						Urdu
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="uz">
				<xsd:annotation>
					<xsd:documentation>
						Uzbek
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="vi">
				<xsd:annotation>
					<xsd:documentation>
						Vietnamese
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="vo">
				<xsd:annotation>
					<xsd:documentation>
						Volapuk
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="wo">
				<xsd:annotation>
					<xsd:documentation>
						Wolof
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="xh">
				<xsd:annotation>
					<xsd:documentation>
						Xhosa
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="yo">
				<xsd:annotation>
					<xsd:documentation>
						Yoruba
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="zh">
				<xsd:annotation>
					<xsd:documentation>
						Chinese
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="zu">
				<xsd:annotation>
					<xsd:documentation>
						Zulu
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ELegendDirection">
		<xsd:annotation>
			<xsd:documentation>
				Specifies how a chart legend is oriented.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="default">
				<xsd:annotation>
					<xsd:documentation>
						Display in the default configuration.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="down">
				<xsd:annotation>
					<xsd:documentation>
						Orient the legend from top to bottom.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="right">
				<xsd:annotation>
					<xsd:documentation>
						Orient the legend from left to right.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ELinearUnits">
		<xsd:annotation>
			<xsd:documentation>
				Specifies units for a {@link PhysicalLength}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="pt">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						A unit of measure used primarily in typesetting to design type sizes. <br/>
						72 points <img src="aequal.gif"/> 1 inch<br/>
						12 points = 1 pica
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="pc">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						A unit of measurement used primarily in typesetting.<br/>
						6 picas <img src="aequal.gif"/> 1 inch<br/>
						1 pica = 12 points
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="in">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Specifies the unit of measurement as inches
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="cm">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Specifies the unit of measurement as centimeters<br/>
						2.54 centimeters <img src="aequal.gif"/> 1 inch
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mm">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Specifies the unit of measurement as millimeters<br/>
						25.4 millimeters <img src="aequal.gif"/> 1 inch<br/>
						10 millimeters = 1 centimeter
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="em">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						A unit of measurement used in typesetting that is exactly as wide as the point size being used.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="en">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						A typesetting unit of measure equal to half the width of an em. An em unit is exactly as wide 
						as the point size being used, so an en unit is half as wide as the point size being used.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="px">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						A unit of measurement equal to the width of one pixel on the output device.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="co">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						A unit of measurement eqivalent to 12 didots. <br/>
						5.63 ciceros <img src="aequal.gif"/> 1 inch
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dd">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						A unit of measurement equivalent to 1.07 U.S. points<br/>
						1 didot <img src="aequal.gif"/> 1.07 U.S. points<br/>
						67.567 didots <img src="aequal.gif"/> 1 inch
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mi">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Specifies the unit of measurement as miiles<br/>
						1 mile = 5280 feet <br/>
						1 mile = 63,360 inches
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ft">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Specifies the unit of measurement as feet<br/>
						1 foot = 12 inches
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="yd">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Specifies the unit of measurement as yards<br/>
						1 yard = 36 inches
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="m">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Specifies the unit of measurement as meters<br/>
						1 meter <img src="aequal.gif"/> 39.4 inches
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="km">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Specifies the unit of measurement as kilometers<br/>
						1 kilometer = 1000 meters<br/>
						1 kilometer <img src="aequal.gif"/> 39,370 inches
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="tp">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						A unit of measure equal to 1/20 of a point<br/>
						20 Twips = 1 point<br/>
						1440 Twips <img src="aequal.gif"/> 1 inch
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ch">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						A unit of measure equal to the average character width in the current font
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lu">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						A unit of measure equal to one logical unit. Only valid when used from within a dr.drawing.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ELineSpacingType">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Indicates how line spacing is applied to the paragraph.

					<img src="ascentdescent.gif">
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="baseline-above">
				<xsd:annotation>
					<xsd:documentation>
						Line spacing is specified as the vertical distance between adjacent baselines. Extra 
						space is placed between the bottom of the previous line and the top of the current line.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="baseline-below">
				<xsd:annotation>
					<xsd:documentation>
						Line spacing is specified as the vertical distance between adjacent baselines. Extra space 
						is placed between the bottom of the current line and the top of the next.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="baseline-to-top">
				<xsd:annotation>
					<xsd:documentation>
						Line spacing is specified as the vertical distance between the baseline of one line 
						and the top of the next. 
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bottom-to-top">
				<xsd:annotation>
					<xsd:documentation>
						Line spacing is specified as the vertical distance between the bottom of one line 
						and the top of the next. This value is often referred to as the leading.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ELocatorType">
		<xsd:annotation>
			<xsd:documentation>
				Indicates what type of object a {@link locator} references.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="object">
				<xsd:annotation>
					<xsd:documentation>
						The locator specifies the original location of the object
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="image">
				<xsd:annotation>
					<xsd:documentation>
						The locator specifies the location of an image representing the object.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="extracted">
				<xsd:annotation>
					<xsd:documentation>
						The locator specifies an object extracted from the original location
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="converted">
				<xsd:annotation>
					<xsd:documentation>
						The locator specifies an object extracted form the original location, then converted to a common format.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ENotePosition">
		<xsd:annotation>
			<xsd:documentation>
				Indicates the location in the document where the notes in a given slot are placed. 
				This is typically &quot;end-of-page&quot; for footnotes and &quot;end-of-document&quot; for endnotes.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="end-of-text">
				<xsd:annotation>
					<xsd:documentation>
						The note should be printed below the end of the body text on the current page.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="end-of-page">
				<xsd:annotation>
					<xsd:documentation>
						The note should be printed at the bottom of the current page
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="end-of-section">
				<xsd:annotation>
					<xsd:documentation>
						The note should be printed after the end of the current section
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="end-of-document">
				<xsd:annotation>
					<xsd:documentation>
						The note should be printed at the end of the document
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="window">
				<xsd:annotation>
					<xsd:documentation>
						The note should be printed in a separate window.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="inline">
				<xsd:annotation>
					<xsd:documentation>
						The note should be printed inline with the body text.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ENumberingStyle">
		<xsd:annotation>
			<xsd:documentation>
				Indicates what type of numbers are used in a numbered list.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="none">
				<xsd:annotation>
					<xsd:documentation>
						No numbers or bullets.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="decimal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Decimal numbers, beginning with 1.<br/>
						1, 2, 3, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="decimal-leading-zero">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Decimal numbers padded by initial zeros.<br/>
						01, 02, 03, ..., 98, 99
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lower-roman">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Lowercase roman numerals.<br/>
						i, ii, iii, iv, v, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="upper-roman">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Uppercase roman numerals.<br/>
						I, II, III, IV, V, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hebrew">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Traditional Hebrew numbering.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="georgian">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Traditional Georgian numbering.<br/>
						an, ban, gan, ..., he, tan, in, in-an, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="armenian">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Traditional Armenian numbering.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="cjk-ideographic">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Plain ideographic numbers.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hiragana">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Hiragana numbering.<br/>
						a, i, u, e, o, ka, ki, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="katakana">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Katakana numbering.<br/>
						A, I, U, E, O, KA, KI, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hiragana-iroha">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Hiragana-Iroha numbering.<br/>
						i, ro, ha, ni, ho, he, to, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="katakana-iroha">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Katakana-Iroha numbering.<br/>
						I, RO, HA, NI, HO, HE, TO, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lower-alpha">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Lowercase ascii letters.<br/>
						a, b, c, ..., z, aa, ab, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="upper-alpha">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Uppercase ascii letters.<br/>
						A, B, C, ..., Z, AA, AB, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lower-greek">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Lowercase classical greek.<br/>
						&amp;alpha;, &amp;beta;, &amp;gamma;, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="decimal-in-circle">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Decimal numbers, beginning with 1, enclosed within a circle.<br/>
						1, 2, 3, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="decimal-ordinal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Ordinal decimal numbers.<br/>
						1st, 2nd, 3rd, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="named-ordinal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Ordinal numbers with first letter capitalized.<br/>
						First, Second, Third, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lower-named-ordinal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Lowercase ordinal numbers.<br/>
						first, second, third, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="upper-named-ordinal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Uppercase ordinal numbers.<br/>
						FIRST, SECOND, THIRD, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="named-number">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Named numbers with first letter capitalized.<br/>
						One, Two, Three, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lower-named-number">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Lowercase named numbers.<br/>
						one, two, three, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="upper-named-number">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Uppercase named numbers.<br/>
						ONE, TWO, THREE, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="chicago-manual">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Use bullets according to the Chicago Manual of Style
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bullet">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Use circular filled bullets.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lower-hexadecimal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Lowercase hexadecimal numbers, beginning with 1.<br/>
						1, 2, 3, ..., 9, a, ..., f, 10, 11, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="upper-hexadecimal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Uppercase hexadecimal numbers, beginning with 1.<br/>
						1, 2, 3, ..., 9, A, ..., F, 10, 11, ...
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EOrientation">
		<xsd:annotation>
			<xsd:documentation>
				Indicates a general object orientation.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="horizontal">
				<xsd:annotation>
					<xsd:documentation>
						Horizontal orientation
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="vertical">
				<xsd:annotation>
					<xsd:documentation>
						Vertical orientation
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="both">
				<xsd:annotation>
					<xsd:documentation>
						Both horizontal and vertical
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="none">
				<xsd:annotation>
					<xsd:documentation>
						Neither horizontal nor vertical
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EPageOrientation">
		<xsd:annotation>
			<xsd:documentation>
				Indicates the orientation for a page.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="landscape">
				<xsd:annotation>
					<xsd:documentation>
						Orients the page so the larger dimension is horizontal.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="portrait">
				<xsd:annotation>
					<xsd:documentation>
						Orients the page so the larger dimension is vertical.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="auto">
				<xsd:annotation>
					<xsd:documentation>
						Uses the size and orientation specified by the page size attribute.
				</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EPageSelector">
		<xsd:annotation>
			<xsd:documentation>
				Similar to EEvenOdd, but allows additional modes.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="even">
				<xsd:annotation>
					<xsd:documentation>
						Even pages only, excluding the first page
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="odd">
				<xsd:annotation>
					<xsd:documentation>
						Odd pages only, excluding the first page
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="first">
				<xsd:annotation>
					<xsd:documentation>
						First page only 
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="all">
				<xsd:annotation>
					<xsd:documentation>
						Even pages and odd pages, including the first page
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="none">
				<xsd:annotation>
					<xsd:documentation>
						No pages
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="alternate">
				<xsd:annotation>
					<xsd:documentation>
						Alternate pages, starting on the page where the reference appears
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="current">
				<xsd:annotation>
					<xsd:documentation>
						Only the page where the reference appears
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EPolyFillMode">
		<xsd:annotation>
			<xsd:documentation>
				Indicates how the areas defined by a polygon are filled.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="alternate">
				<xsd:annotation>
					<xsd:documentation>
						Fills an area of the polygon if a line drawn through the polygon from left to right crosses an odd number of polygon 
						segments before entering the area. 
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="winding">
				<xsd:annotation>
					<xsd:documentation>
						Fills an area of the polygon if a pen used to draw the polygon would go completely around the region at least once.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EPredefinedHatchPattern">
		<xsd:annotation>
			<xsd:documentation>
				A set of generic hatch patterns. A hatch pattern consists of a 
				foreground component and a background component. In the example 
				images below, the foreground component is rendered as black and 
				the background component as white.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="solid">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Solid fill (no hatch). The area is filled entirely with the foreground color.
							<br/><img src="hatch_solid.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lt-horizontal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thin horizontal lines
							<br/><img src="hatch_lt_horizontal.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lt-vertical">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thin vertical lines
							<br/><img src="hatch_lt_vertical.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lt-down-diagonal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thin diagonal lines from upper left to lower right
							<br/><img src="hatch_lt_down_diagonal.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lt-up-diagonal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thin diagonal lines from lower left to upper right
							<br/><img src="hatch_lt_up_diagonal.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lt-grid">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thin horizontal and vertical lines forming a grid
							<br/><img src="hatch_lt_grid.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lt-trellis">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thin crossed diagonal lines forming a trellis
							<br/><img src="hatch_lt_trellis.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lt-cross">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thin horizontal and vertical dashed lines forming a a grid of "+" symbols
							<br/><img src="hatch_lt_cross.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lt-diag-cross">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thin diagonal dashed lines forming a a grid of "x" symbols
							<br/><img src="hatch_lt_diag_cross.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dk-horizontal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thick horizontal lines
							<br/><img src="hatch_dk_horizontal.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dk-vertical">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thick vertical lines
							<br/><img src="hatch_dk_vertical.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dk-down-diagonal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thick diagonal lines from upper left to lower right
							<br/><img src="hatch_dk_down_diagonal.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dk-up-diagonal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thick diagonal lines from lower left to upper right
							<br/><img src="hatch_dk_up_diagonal.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dk-grid">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thick horizontal and vertical lines forming a grid
							<br/><img src="hatch_dk_grid.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dk-trellis">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thick crossed diagonal lines forming a trellis
							<br/><img src="hatch_dk_trellis.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dk-cross">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thick horizontal and vertical dashed lines forming a a grid of "+" symbols
							<br/><img src="hatch_dk_cross.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dk-diag-cross">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Thick diagonal dashed lines forming a a grid of "x" symbols
							<br/><img src="hatch_dk_diag_cross.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EPredefinedLineType">
		<xsd:annotation>
			<xsd:documentation>
				A set of generic line types.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="solid">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_solid.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="none">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_none.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dotted">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_dotted.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dashed">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_dashed.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dash-dot">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_dash_dot.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dash-dot2">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_dash_dot2.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dash-dash">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_dash_dash.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dash-dash2">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_dash_dash2.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dash2-dot">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_dash2_dot.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="shadow">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_shadow.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="double">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_double.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="groove">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_groove.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ridge">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_ridge.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="inset">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_inset.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="outset">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="linetype_outset.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EPredefinedMarker">
		<xsd:annotation>
			<xsd:documentation>
				A set of predefined markers. Each of the available marker types is
				shown below along with it's boxed, circled, and filled variants.				
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="none">
				<xsd:annotation>
					<xsd:documentation>
						Do not display a marker
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="box">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_box.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="diamond">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_diamond.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="cross">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_cross.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="circle">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_circle.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="diag_cross">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_diag_cross.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="triangle">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_triangle.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="star">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_star.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="asterisk">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_asterisk.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="y">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_y.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="vtick">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_vtick.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="vtick-up">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_vtick_up.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="vtick-down">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_vtick_down.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="htick">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_htick.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="htick-left">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_htick_left.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="htick-right">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_htick_right.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dot">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="marker_dot.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EPredefinedStyle">
		<xsd:annotation>
			<xsd:documentation>
				Specifies a predefined type for a style. This type may imply some additional behavior for the style. 
				For instance, &quot;heading-x&quot; styles may be used to automatically generate a table of contents.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="default">
				<xsd:annotation>
					<xsd:documentation>
						Default style
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="default-indent">
				<xsd:annotation>
					<xsd:documentation>
						Indented default style
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="heading-1">
				<xsd:annotation>
					<xsd:documentation>
						First level heading
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="heading-2">
				<xsd:annotation>
					<xsd:documentation>
						Second level heading
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="heading-3">
				<xsd:annotation>
					<xsd:documentation>
						Third level heading
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="heading-4">
				<xsd:annotation>
					<xsd:documentation>
						Fourth level heading
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="heading-5">
				<xsd:annotation>
					<xsd:documentation>
						Fifth level heading
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="heading-6">
				<xsd:annotation>
					<xsd:documentation>
						Sixth level heading
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="heading-7">
				<xsd:annotation>
					<xsd:documentation>
						Seventh level heading
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="heading-8">
				<xsd:annotation>
					<xsd:documentation>
						Eigth level heading
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="heading-9">
				<xsd:annotation>
					<xsd:documentation>
						Ninth level heading
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="footnote-text">
				<xsd:annotation>
					<xsd:documentation>
						Text in a footnote
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="footnote-ref">
				<xsd:annotation>
					<xsd:documentation>
						Footnote reference
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="header">
				<xsd:annotation>
					<xsd:documentation>
						Page header
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="footer">
				<xsd:annotation>
					<xsd:documentation>
						Page footer
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="index-heading">
				<xsd:annotation>
					<xsd:documentation>
						Index heading
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="style-line-number">
				<xsd:annotation>
					<xsd:documentation>
						Line number style
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="index-1">
				<xsd:annotation>
					<xsd:documentation>
						First level index entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="index-2">
				<xsd:annotation>
					<xsd:documentation>
						Second level index entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="index-3">
				<xsd:annotation>
					<xsd:documentation>
						Third level index entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="index-4">
				<xsd:annotation>
					<xsd:documentation>
						Fourth level index entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="index-5">
				<xsd:annotation>
					<xsd:documentation>
						Fifth level index entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="index-6">
				<xsd:annotation>
					<xsd:documentation>
						Sixth level index entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="index-7">
				<xsd:annotation>
					<xsd:documentation>
						Seventh level index entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="toc-1">
				<xsd:annotation>
					<xsd:documentation>
						First level table of contents entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="toc-2">
				<xsd:annotation>
					<xsd:documentation>
						Second level table of contents entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="toc-3">
				<xsd:annotation>
					<xsd:documentation>
						Third level table of contents entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="toc-4">
				<xsd:annotation>
					<xsd:documentation>
						Fourth level table of contents entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="toc-5">
				<xsd:annotation>
					<xsd:documentation>
						Fifth level table of contents entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="toc-6">
				<xsd:annotation>
					<xsd:documentation>
						Sixth level table of contents entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="toc-7">
				<xsd:annotation>
					<xsd:documentation>
						Seventh level table of contents entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="toc-8">
				<xsd:annotation>
					<xsd:documentation>
						Eigth level table of contents entry
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="annotation-text">
				<xsd:annotation>
					<xsd:documentation>
						Text in an annotation
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="annotation-ref">
				<xsd:annotation>
					<xsd:documentation>
						Annotation reference
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="endnote-text">
				<xsd:annotation>
					<xsd:documentation>
						Text in an endnote
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="endnote-ref">
				<xsd:annotation>
					<xsd:documentation>
						Endnote reference
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EPredefinedUnderline">
		<xsd:annotation>
			<xsd:documentation>
				A set of predefined underline types
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="none">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="underline_none.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="single">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="underline_single.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="double">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="underline_double.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dot">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="underline_dot.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hidden">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="underline_hidden.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="thick">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="underline_thick.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dash">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="underline_dash.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dotdash">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="underline_dotdash.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dotdotdash">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="underline_dotdotdash.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="wave">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							<img src="underline_wave.gif"/>
						]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ERasterOperator">
		<xsd:annotation>
			<xsd:documentation>
				Specifies a method for combining raster elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="black">
				<xsd:annotation>
					<xsd:documentation>
						Destination is changed to black
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="white">
				<xsd:annotation>
					<xsd:documentation>
						Destination is changed to white
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="nop">
				<xsd:annotation>
					<xsd:documentation>
						Destination is not affected
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="not">
				<xsd:annotation>
					<xsd:documentation>
						Destination is inversed
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="copy-src">
				<xsd:annotation>
					<xsd:documentation>
						Source is copied to destination 
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="not-copy-src">
				<xsd:annotation>
					<xsd:documentation>
						Inverse of source is copied to destination 
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="merge-src">
				<xsd:annotation>
					<xsd:documentation>
						Source is combined with destination 
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="merge-not-src">
				<xsd:annotation>
					<xsd:documentation>
						Inverse of source is combined with destination
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="merge-src-not">
				<xsd:annotation>
					<xsd:documentation>
						Source is combined with inverse of destination
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="not-merge-src">
				<xsd:annotation>
					<xsd:documentation>
						Source is combined with destination, and the results are inversed
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mask-src">
				<xsd:annotation>
					<xsd:documentation>
						Destination is set to a combination of the colors common to both source and destination
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mask-src-not">
				<xsd:annotation>
					<xsd:documentation>
						Destination is set to a combination of the colors common to both the source and the inverse of the destination
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mask-not-src">
				<xsd:annotation>
					<xsd:documentation>
						Destination is set to a combination of the colors common to both the destination and the inverse of the source
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="not-mask-src">
				<xsd:annotation>
					<xsd:documentation>
						Destination is set to the inverse of a combination of the colors common to both source and destination
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="xor-src">
				<xsd:annotation>
					<xsd:documentation>
						Destination is set to a combination of the colors in either the source or the destination, but not both
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="not-xor-src">
				<xsd:annotation>
					<xsd:documentation>
						Destination is set to the inverse of the xor-src results
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ERectangleEdge">
		<xsd:annotation>
			<xsd:documentation>
				Indicates an edge of a rectangle.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="none"/>
			<xsd:enumeration value="default"/>
			<xsd:enumeration value="top"/>
			<xsd:enumeration value="bottom"/>
			<xsd:enumeration value="left"/>
			<xsd:enumeration value="right"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ERelationalOperator">
		<xsd:annotation>
			<xsd:documentation>
				An operator for performing comparisons between two or three values.
				In the descriptions below, x is the primary value and A and B are
				the values being compared against.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="between">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						A <img src="lequal.gif"/> x <img src="lequal.gif"/> B
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="not-between">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						x &lt; A or x > B
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="equal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						x = A
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="not-equal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						x <img src="nequal.gif"/> A
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="greater">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						x > A
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="less">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						x &lt; A
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="greater-equal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						x <img src="gequal.gif"/> A
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="less-equal">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						x <img src="lequal.gif"/> A
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EScaleType">
		<xsd:annotation>
			<xsd:documentation>
				Specifies a scale type for a chart axis.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="normal">
				<xsd:annotation>
					<xsd:documentation>
						Linear scale.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="log">
				<xsd:annotation>
					<xsd:documentation>
						Logarithmic scale.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="percent">
				<xsd:annotation>
					<xsd:documentation>
						Linear scale, labelled as percentages.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ESectionBreakType">
		<xsd:annotation>
			<xsd:documentation>
				Specifies the separation between a section and the section following it.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="even">
				<xsd:annotation>
					<xsd:documentation>
						Next section starts at the top of the next even numbered page in the document. This may force a blank page to be generated.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="odd">
				<xsd:annotation>
					<xsd:documentation>
						Next section starts at the top of the next odd numbered page in the document. This may force a blank page to be generated.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="next">
				<xsd:annotation>
					<xsd:documentation>
						Next section starts at the top of the next page.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="continuous">
				<xsd:annotation>
					<xsd:documentation>
						Next section starts immediately below the current section, on the same page if space is available.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ESeriesLabelType">
		<xsd:annotation>
			<xsd:documentation>
				Specifies how a series is labelled
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="none">
				<xsd:annotation>
					<xsd:documentation/>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="value">
				<xsd:annotation>
					<xsd:documentation/>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="percent">
				<xsd:annotation>
					<xsd:documentation/>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="cat-name">
				<xsd:annotation>
					<xsd:documentation/>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="explicit">
				<xsd:annotation>
					<xsd:documentation/>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ESeriesType">
		<xsd:annotation>
			<xsd:documentation>
				Specifies the type for a chart series.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="column">
				<xsd:annotation>
					<xsd:documentation>
						Display series as a column graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bar">
				<xsd:annotation>
					<xsd:documentation>
						Display series as a bar graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="line">
				<xsd:annotation>
					<xsd:documentation>
						Display series as a line 
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="pie">
				<xsd:annotation>
					<xsd:documentation>
						Display series as a pie graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="xy">
				<xsd:annotation>
					<xsd:documentation>
						Display series as an x-y plot
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="area">
				<xsd:annotation>
					<xsd:documentation>
						Display series as an area plot
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="doughnut">
				<xsd:annotation>
					<xsd:documentation>
						Display series as a doughnut graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="radar">
				<xsd:annotation>
					<xsd:documentation>
						Display series as a radar plot
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="surface">
				<xsd:annotation>
					<xsd:documentation>
						Display series as a surface plot
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bubble">
				<xsd:annotation>
					<xsd:documentation>
						Display series as a bubble graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hilo-high">
				<xsd:annotation>
					<xsd:documentation>
						High series in a high-low-open-close-volume graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hilo-low">
				<xsd:annotation>
					<xsd:documentation>
						Low series in a high-low-open-close-volume graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hilo-open">
				<xsd:annotation>
					<xsd:documentation>
						Open series in a high-low-open-close-volume graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hilo-close">
				<xsd:annotation>
					<xsd:documentation>
						Close series in a high-low-open-close-volume graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hilo-volume">
				<xsd:annotation>
					<xsd:documentation>
						Volume series in a high-low-open-close-volume graph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EShapeType">
		<xsd:annotation>
			<xsd:documentation>
				Defines the shape type for a {@link dr.shape}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="action_beginning"/>
			<xsd:enumeration value="action_blank"/>
			<xsd:enumeration value="action_document"/>
			<xsd:enumeration value="action_end"/>
			<xsd:enumeration value="action_help"/>
			<xsd:enumeration value="action_home"/>
			<xsd:enumeration value="action_information"/>
			<xsd:enumeration value="action_movie"/>
			<xsd:enumeration value="action_next"/>
			<xsd:enumeration value="action_previous"/>
			<xsd:enumeration value="action_return"/>
			<xsd:enumeration value="action_sound"/>
			<xsd:enumeration value="arrow_circular"/>
			<xsd:enumeration value="arrow_down"/>
			<xsd:enumeration value="arrow_down_curved"/>
			<xsd:enumeration value="arrow_left"/>
			<xsd:enumeration value="arrow_left_curved"/>
			<xsd:enumeration value="arrow_lr">
				<xsd:annotation>
					<xsd:documentation>left-right arrow</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="arrow_lru">
				<xsd:annotation>
					<xsd:documentation>left-right-up arrow</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="arrow_lrud">
				<xsd:annotation>
					<xsd:documentation>left-right-up-down arrow</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="arrow_lu">
				<xsd:annotation>
					<xsd:documentation>left-up arrow </xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="arrow_r_notched">
				<xsd:annotation>
					<xsd:documentation>notched right arrow</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="arrow_r_striped">
				<xsd:annotation>
					<xsd:documentation>striped right arrow</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="arrow_right"/>
			<xsd:enumeration value="arrow_right_curved"/>
			<xsd:enumeration value="arrow_u_bent">
				<xsd:annotation>
					<xsd:documentation>bent up arrow</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="arrow_u_turn"/>
			<xsd:enumeration value="arrow_ud">
				<xsd:annotation>
					<xsd:documentation>up-down arrow</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="arrow_up"/>
			<xsd:enumeration value="arrow_up_curved"/>
			<xsd:enumeration value="bent_arrow"/>
			<xsd:enumeration value="bent_connector_2"/>
			<xsd:enumeration value="bent_connector_3"/>
			<xsd:enumeration value="bent_connector_4"/>
			<xsd:enumeration value="bent_connector_5"/>
			<xsd:enumeration value="bevel"/>
			<xsd:enumeration value="block_arc"/>
			<xsd:enumeration value="brace_pair"/>
			<xsd:enumeration value="bracket_pair"/>
			<xsd:enumeration value="callout_arrow_down"/>
			<xsd:enumeration value="callout_arrow_left"/>
			<xsd:enumeration value="callout_arrow_lr"/>
			<xsd:enumeration value="callout_arrow_lrud"/>
			<xsd:enumeration value="callout_arrow_right"/>
			<xsd:enumeration value="callout_arrow_up"/>
			<xsd:enumeration value="callout_cloud"/>
			<xsd:enumeration value="callout_line_1">
				<xsd:annotation>
					<xsd:documentation>no border</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="callout_line_1a">
				<xsd:annotation>
					<xsd:documentation>accent</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="callout_line_1ab">
				<xsd:annotation>
					<xsd:documentation>accent and border</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="callout_line_1b">
				<xsd:annotation>
					<xsd:documentation>border</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="callout_line_2">
				<xsd:annotation>
					<xsd:documentation>no border</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="callout_line_2a">
				<xsd:annotation>
					<xsd:documentation>accent</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="callout_line_2ab">
				<xsd:annotation>
					<xsd:documentation>accent and border</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="callout_line_2b">
				<xsd:annotation>
					<xsd:documentation>border</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="callout_line_3">
				<xsd:annotation>
					<xsd:documentation>no border</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="callout_line_3a">
				<xsd:annotation>
					<xsd:documentation>accent</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="callout_line_3ab">
				<xsd:annotation>
					<xsd:documentation>accent and border</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="callout_line_3b">
				<xsd:annotation>
					<xsd:documentation>border</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="callout_wedge_ellipse"/>
			<xsd:enumeration value="callout_wedge_rect"/>
			<xsd:enumeration value="callout_wedge_roundrect"/>
			<xsd:enumeration value="can"/>
			<xsd:enumeration value="chevron"/>
			<xsd:enumeration value="chord_autoshape"/>
			<xsd:enumeration value="cloud"/>
			<xsd:enumeration value="corner"/>
			<xsd:enumeration value="cube"/>
			<xsd:enumeration value="curved_connector_2"/>
			<xsd:enumeration value="curved_connector_3"/>
			<xsd:enumeration value="curved_connector_4"/>
			<xsd:enumeration value="curved_connector_5"/>
			<xsd:enumeration value="curved_ribbon_down"/>
			<xsd:enumeration value="curved_ribbon_up"/>
			<xsd:enumeration value="decagon"/>
			<xsd:enumeration value="diagonal_stripe"/>
			<xsd:enumeration value="diamond"/>
			<xsd:enumeration value="dodecagon"/>
			<xsd:enumeration value="donut"/>
			<xsd:enumeration value="double_wave"/>
			<xsd:enumeration value="explosion_1"/>
			<xsd:enumeration value="explosion_2"/>
			<xsd:enumeration value="flowchart_alternate_process"/>
			<xsd:enumeration value="flowchart_collate"/>
			<xsd:enumeration value="flowchart_connector"/>
			<xsd:enumeration value="flowchart_decision"/>
			<xsd:enumeration value="flowchart_delay"/>
			<xsd:enumeration value="flowchart_display"/>
			<xsd:enumeration value="flowchart_document"/>
			<xsd:enumeration value="flowchart_extract"/>
			<xsd:enumeration value="flowchart_input_output"/>
			<xsd:enumeration value="flowchart_internal_storage"/>
			<xsd:enumeration value="flowchart_magnetic_disk"/>
			<xsd:enumeration value="flowchart_magnetic_drum"/>
			<xsd:enumeration value="flowchart_magnetic_tape"/>
			<xsd:enumeration value="flowchart_manual_input"/>
			<xsd:enumeration value="flowchart_manual_operation"/>
			<xsd:enumeration value="flowchart_merge"/>
			<xsd:enumeration value="flowchart_multi_document"/>
			<xsd:enumeration value="flowchart_off_page_connector"/>
			<xsd:enumeration value="flowchart_offline_storage"/>
			<xsd:enumeration value="flowchart_online_storage"/>
			<xsd:enumeration value="flowchart_or"/>
			<xsd:enumeration value="flowchart_predefined_process"/>
			<xsd:enumeration value="flowchart_preparation"/>
			<xsd:enumeration value="flowchart_process"/>
			<xsd:enumeration value="flowchart_punched_card"/>
			<xsd:enumeration value="flowchart_punched_tape"/>
			<xsd:enumeration value="flowchart_sort"/>
			<xsd:enumeration value="flowchart_summing_junction"/>
			<xsd:enumeration value="flowchart_terminator"/>
			<xsd:enumeration value="folded_corner"/>
			<xsd:enumeration value="half_frame"/>
			<xsd:enumeration value="heart"/>
			<xsd:enumeration value="heptagon"/>
			<xsd:enumeration value="hexagon"/>
			<xsd:enumeration value="homeplate"/>
			<xsd:enumeration value="left_brace"/>
			<xsd:enumeration value="left_bracket"/>
			<xsd:enumeration value="lightning_1"/>
			<xsd:enumeration value="math_divide"/>
			<xsd:enumeration value="math_equal"/>
			<xsd:enumeration value="math_minus"/>
			<xsd:enumeration value="math_multiply"/>
			<xsd:enumeration value="math_not_equal"/>
			<xsd:enumeration value="math_plus"/>
			<xsd:enumeration value="moon"/>
			<xsd:enumeration value="no_symbol"/>
			<xsd:enumeration value="octagon"/>
			<xsd:enumeration value="parallelogram"/>
			<xsd:enumeration value="pentagon"/>
			<xsd:enumeration value="pie_autoshape"/>
			<xsd:enumeration value="plaque"/>
			<xsd:enumeration value="plus"/>
			<xsd:enumeration value="ribbon_down"/>
			<xsd:enumeration value="ribbon_up"/>
			<xsd:enumeration value="right_brace"/>
			<xsd:enumeration value="right_bracket"/>
			<xsd:enumeration value="right_triangle"/>
			<xsd:enumeration value="round_1_rect">
				<xsd:annotation>
					<xsd:documentation>round single corner rectangle</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="round_2_diag_rect">
				<xsd:annotation>
					<xsd:documentation>round diagonal corner rectangle</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="round_2_same_rect">
				<xsd:annotation>
					<xsd:documentation>round same side corner rectangle</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="scroll_h"/>
			<xsd:enumeration value="scroll_v"/>
			<xsd:enumeration value="shape_frame"/>
			<xsd:enumeration value="smiley_face"/>
			<xsd:enumeration value="snip_1_rect">
				<xsd:annotation>
					<xsd:documentation>snip single corner rectangle</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="snip_2_diag_rect">
				<xsd:annotation>
					<xsd:documentation>snip diagonal corner rectangle</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="snip_2_same_rect">
				<xsd:annotation>
					<xsd:documentation>snip same side corner rectangle</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="snip_round_rect">
				<xsd:annotation>
					<xsd:documentation>snip and round single corner rectangle</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="star_10">
				<xsd:annotation>
					<xsd:documentation>10-point star</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="star_12">
				<xsd:annotation>
					<xsd:documentation>12-point star</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="star_16">
				<xsd:annotation>
					<xsd:documentation>16-point star</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="star_24">
				<xsd:annotation>
					<xsd:documentation>24-point star</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="star_32">
				<xsd:annotation>
					<xsd:documentation>32-point star</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="star_4">
				<xsd:annotation>
					<xsd:documentation>4-point star</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="star_5">
				<xsd:annotation>
					<xsd:documentation>5-point star</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="star_6">
				<xsd:annotation>
					<xsd:documentation>6-point star</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="star_7">
				<xsd:annotation>
					<xsd:documentation>7-point star</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="star_8">
				<xsd:annotation>
					<xsd:documentation>8-point star</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="sun"/>
			<xsd:enumeration value="tear_drop"/>
			<xsd:enumeration value="trapezoid"/>
			<xsd:enumeration value="triangle"/>
			<xsd:enumeration value="wave"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ESpecialChar">
		<xsd:annotation>
			<xsd:documentation>
				Determines the appearance of a {@link tx.schar}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="unknown">
				<xsd:annotation>
					<xsd:documentation>
						An unknown character.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="soft-space">
				<xsd:annotation>
					<xsd:documentation>
						Equivalent of a Unicode 0x0020.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hard-space">
				<xsd:annotation>
					<xsd:documentation>
						A hard space holds two words together on one line (names, dates, etc). Referred to in HTML as a &quot;non breaking space'.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="soft-hyphen">
				<xsd:annotation>
					<xsd:documentation>
						A soft hyphen divides a word and displays a hyphen character when the word falls near the end of a 
						line. If the word does not need to be broken, the soft hyphen code remains in the document, but is not displayed.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hard-hyphen">
				<xsd:annotation>
					<xsd:documentation>
						Hyphen code [-] which will appear whether the word falls at the end of the line or not.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="invisible-hyphen">
				<xsd:annotation>
					<xsd:documentation>
						Indicates that a word can be broken at this point, but a hyphen won't be visible in the 
						document. It is used for text like &quot;Fonts/Styles/Graphics&quot;, where the text could 
						be broken after a &quot;/&quot; but there is no need for a hyphen to be displayed.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hard-tab">
				<xsd:annotation>
					<xsd:documentation>
						A hard tab character
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="back-tab">
				<xsd:annotation>
					<xsd:documentation>
						A hard backtab character
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="delimiter">
				<xsd:annotation>
					<xsd:documentation>
						A generic text delimiter 
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="word-delimiter">
				<xsd:annotation>
					<xsd:documentation>
						A text delimiter for separating words
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ETabAlignment">
		<xsd:annotation>
			<xsd:documentation>
				Indicates the alignment of the text at a tab stop, relative to the tab stop.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="left">
				<xsd:annotation>
					<xsd:documentation>
						Specifies that the text is to be left-aligned to the tab stop
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="center">
				<xsd:annotation>
					<xsd:documentation>
						Specifies that the text is to be center-aligned to the tab stop
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="right">
				<xsd:annotation>
					<xsd:documentation>
						Specifies that the text is to be right-aligned to the tab stop
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="align-on">
				<xsd:annotation>
					<xsd:documentation>
						Specifies that the text is to be aligned on a specified character for the tab stop
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bar">
				<xsd:annotation>
					<xsd:documentation>
						Specifies that a vertical bar should be drawn at the tab stop and the text should be left aligned to the right of the bar.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ETextCase">
		<xsd:annotation>
			<xsd:documentation>
				Special capitalization to be applied to text when it is displayed.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="sentence-case">
				<xsd:annotation>
					<xsd:documentation>
						Capitalize the first letter of the first word of each sentance.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="uppercase">
				<xsd:annotation>
					<xsd:documentation>
						Capitalize all the letters in every word.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="lowercase">
				<xsd:annotation>
					<xsd:documentation>
						Puts all characters of each word in lowercase.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="capitalize">
				<xsd:annotation>
					<xsd:documentation>
						Capitalize the first letter of each word.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="small-caps">
				<xsd:annotation>
					<xsd:documentation>
						Specifies that all characters are to be small capped
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="normal">
				<xsd:annotation>
					<xsd:documentation>
						Specifies no change to the casing of characters
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ETextDirection">
		<xsd:annotation>
			<xsd:documentation>
				Specifies the direction of text flow.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="ltr">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Text runs left-to-right:<br/>
						<img src="textdir_ltr.gif"/>
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="rtl">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Text runs right-to-left:<br/>
						<img src="textdir_rtl.gif"/>
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="btt">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Text runs bottom-to-top:<br/>
						<img src="textdir_btt.gif"/>
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ttb">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						Text runs top-to-bottom:<br/>
						<img src="textdir_ttb.gif"/>
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ETextEffect">
		<xsd:annotation>
			<xsd:documentation>
				Effects to be applied to text when it is displayed.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="outline">
				<xsd:annotation>
					<xsd:documentation>
						specifies that the text is to be outlined
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="emboss">
				<xsd:annotation>
					<xsd:documentation>
						specifies that the text is to be embossed
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="engrave">
				<xsd:annotation>
					<xsd:documentation>
						specifies that the text is to be engraved
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="normal">
				<xsd:annotation>
					<xsd:documentation>
						specifies that the text is to be rendered without any effect
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ETextFitMode">
		<xsd:annotation>
			<xsd:documentation>
				Determines how text is forced to fit within a text box.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="none">
				<xsd:annotation>
					<xsd:documentation>
						Text is not fitted to the text box (the text box is only used for locating the text).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="clip">
				<xsd:annotation>
					<xsd:documentation>
						Text is displayed full size and clipped to the text box.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="fit">
				<xsd:annotation>
					<xsd:documentation>
						Text is reduced in size to fit within the text box.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="stretch">
				<xsd:annotation>
					<xsd:documentation>
						Text is reduced in size or increased in size to exactly the size of the text box.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ETextPosition">
		<xsd:annotation>
			<xsd:documentation>
				Position above or below the baseline for text when it is displayed. May also imply a reduced size for the text.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="normal">
				<xsd:annotation>
					<xsd:documentation>
						specifies that text is to be positioned at the baseline
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="superscript">
				<xsd:annotation>
					<xsd:documentation>
						specifies that text is to be positioned at the superscript position (exact position is determined by the paragraph properties)
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="subscript">
				<xsd:annotation>
					<xsd:documentation>
						specifies that text is to be positioned at the subscript position (exact position is determined by the paragraph properties)
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="superior">
				<xsd:annotation>
					<xsd:documentation>
						specifies that text is to be positioned at the superior position (where the top of the text is aligned)
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ETextStrikethrough">
		<xsd:annotation>
			<xsd:documentation>
				Strikethrough to be applied to the text when it is displayed.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="none">
				<xsd:annotation>
					<xsd:documentation>
						No strikethrough
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="single">
				<xsd:annotation>
					<xsd:documentation>
						Use a single strikethrough
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="double">
				<xsd:annotation>
					<xsd:documentation>
						Use a double strikethrough
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EValueRestriction">
		<xsd:annotation>
			<xsd:documentation>
				Restriction on a range of possible values.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="exactly">
				<xsd:annotation>
					<xsd:documentation>
						Exactly the specified value
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="at-least">
				<xsd:annotation>
					<xsd:documentation>
						Greater than or equal to the specified value.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="at-most">
				<xsd:annotation>
					<xsd:documentation>
						Less than or equal to the specified value.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EVerticalAlignment">
		<xsd:annotation>
			<xsd:documentation>
				Specifies a vertical alignment.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="default">
				<xsd:annotation>
					<xsd:documentation>
						Default vertical alignment; generally top
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="top">
				<xsd:annotation>
					<xsd:documentation>
						Align the content with the top of the available area
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="middle">
				<xsd:annotation>
					<xsd:documentation>
						Vertically center the content in the available area
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bottom">
				<xsd:annotation>
					<xsd:documentation>
						Align the content with the bottom of the available area
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="justified">
				<xsd:annotation>
					<xsd:documentation>
						Expand the contents as necessary to fill the available vertical area, or vertically center in the available area
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EVerticalOrigin">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Specifies a relative vertical origin in a word processing document.

					<img src="pagelayout.gif"><br>
					<img src="ascentdescent.gif">
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="page-top">
				<xsd:annotation>
					<xsd:documentation>
						The top edge of the page
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="page-center">
				<xsd:annotation>
					<xsd:documentation>
						The vertical center of the page
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="page-bottom">
				<xsd:annotation>
					<xsd:documentation>
						The bottom edge of the page
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="top-gutter">
				<xsd:annotation>
					<xsd:documentation>
						The top gutter (or from the top edge of the page if there is no top gutter).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bottom-gutter">
				<xsd:annotation>
					<xsd:documentation>
						The bottom gutter (or from the bottom edge of the page if there is no bottom gutter)
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="top-margin">
				<xsd:annotation>
					<xsd:documentation>
						The top margin
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="margin-center">
				<xsd:annotation>
					<xsd:documentation>
						Vertically centered between the top and bottom margins
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bottom-margin">
				<xsd:annotation>
					<xsd:documentation>
						The bottom margin
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="frame-top">
				<xsd:annotation>
					<xsd:documentation>
						The top of the frame
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="frame-center">
				<xsd:annotation>
					<xsd:documentation>
						The vertical center of the frame
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="frame-bottom">
				<xsd:annotation>
					<xsd:documentation>
						The bottom of the frame
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="paragraph-top">
				<xsd:annotation>
					<xsd:documentation>
						The top of the paragraph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="paragraph-center">
				<xsd:annotation>
					<xsd:documentation>
						The vertical center of the paragraph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="paragraph-bottom">
				<xsd:annotation>
					<xsd:documentation>
						The bottom of the paragraph
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="line-top">
				<xsd:annotation>
					<xsd:documentation>
						The top of the line (baseline - ascent)
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="line-center">
				<xsd:annotation>
					<xsd:documentation>
						The vertical center of the line
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="line-bottom">
				<xsd:annotation>
					<xsd:documentation>
						The bottom of the line (baseline + descent)
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="baseline">
				<xsd:annotation>
					<xsd:documentation>
						The baseline of the current line
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="current">
				<xsd:annotation>
					<xsd:documentation>
						The current position
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="auto">
				<xsd:annotation>
					<xsd:documentation>
						The origin should be determined by the consumer.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EVolumeDisplayType">
		<xsd:annotation>
			<xsd:documentation>
				Specifies how the volume values are displayed in a high-low-open-close-volume graph.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="none">
				<xsd:annotation>
					<xsd:documentation>
						Do not display the volume.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="bar">
				<xsd:annotation>
					<xsd:documentation>
						Display the volume as a bar.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="line">
				<xsd:annotation>
					<xsd:documentation>
						Display the volume as a line.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="marker">
				<xsd:annotation>
					<xsd:documentation>
						Display the volume as a marker.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Charset">
		<xsd:annotation>
			<xsd:documentation>
				Specifies how the characters of a block of text are encoded into byte values. 

				<![CDATA[
				<H3 class="subheadtext">Syntax</H3>
				<pre class="noborder"><i>Charset</i> ::= <i>{@link xsd:string}</i></pre>
				<H3 class="subheadtext">Example</H3>
				The ANSI 0 character set: 
				<pre class="noborder">"ANSI-0"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="default"/>
			<xsd:enumeration value="PCUnknown"/>
			<xsd:enumeration value="MacUnknown"/>
			<xsd:enumeration value="ANSIUnknown"/>
			<xsd:enumeration value="Windows"/>
			<xsd:enumeration value="DBCSUnknown"/>
			<xsd:enumeration value="WPF5"/>
			<xsd:enumeration value="WPF6"/>
			<xsd:enumeration value="ISO_8859"/>
			<xsd:enumeration value="Lotus-MBCS"/>
			<xsd:enumeration value="HTML-SBCS"/>
			<xsd:enumeration value="HTML-DBCS"/>
			<xsd:enumeration value="OldHebrew"/>
			<xsd:enumeration value="JIS"/>
			<xsd:enumeration value="EUC-JP"/>
			<xsd:enumeration value="CNS-11643-1"/>
			<xsd:enumeration value="EUC-CNS-1"/>
			<xsd:enumeration value="CNS-11643-2"/>
			<xsd:enumeration value="EUC-CNS-2"/>
			<xsd:enumeration value="KSC-1987"/>
			<xsd:enumeration value="GB2312"/>
			<xsd:enumeration value="ANSI-0"/>
			<xsd:enumeration value="ANSI-437"/>
			<xsd:enumeration value="ANSI-708"/>
			<xsd:enumeration value="ANSI-709"/>
			<xsd:enumeration value="ANSI-710"/>
			<xsd:enumeration value="ANSI-720"/>
			<xsd:enumeration value="ANSI-737"/>
			<xsd:enumeration value="ANSI-775"/>
			<xsd:enumeration value="ANSI-850"/>
			<xsd:enumeration value="ANSI-852"/>
			<xsd:enumeration value="ANSI-855"/>
			<xsd:enumeration value="ANSI-857"/>
			<xsd:enumeration value="ANSI-860"/>
			<xsd:enumeration value="ANSI-861"/>
			<xsd:enumeration value="ANSI-862"/>
			<xsd:enumeration value="ANSI-863"/>
			<xsd:enumeration value="ANSI-864"/>
			<xsd:enumeration value="ANSI-865"/>
			<xsd:enumeration value="ANSI-866"/>
			<xsd:enumeration value="ANSI-869"/>
			<xsd:enumeration value="ANSI-874"/>
			<xsd:enumeration value="ANSI-932"/>
			<xsd:enumeration value="ANSI-936"/>
			<xsd:enumeration value="ANSI-942"/>
			<xsd:enumeration value="ANSI-944"/>
			<xsd:enumeration value="ANSI-948"/>
			<xsd:enumeration value="ANSI-949"/>
			<xsd:enumeration value="ANSI-950"/>
			<xsd:enumeration value="ANSI-1040"/>
			<xsd:enumeration value="ANSI-1041"/>
			<xsd:enumeration value="ANSI-1043"/>
			<xsd:enumeration value="ANSI-1200"/>
			<xsd:enumeration value="ANSI-1250"/>
			<xsd:enumeration value="ANSI-1251"/>
			<xsd:enumeration value="ANSI-1252"/>
			<xsd:enumeration value="ANSI-1253"/>
			<xsd:enumeration value="ANSI-1254"/>
			<xsd:enumeration value="ANSI-1255"/>
			<xsd:enumeration value="ANSI-1256"/>
			<xsd:enumeration value="ANSI-1257"/>
			<xsd:enumeration value="ANSI-1361"/>
			<xsd:enumeration value="ISO_8859-1"/>
			<xsd:enumeration value="ISO_8859-2"/>
			<xsd:enumeration value="ISO_8859-3"/>
			<xsd:enumeration value="ISO_8859-4"/>
			<xsd:enumeration value="ISO_8859-5"/>
			<xsd:enumeration value="ISO_8859-6"/>
			<xsd:enumeration value="ISO_8859-7"/>
			<xsd:enumeration value="ISO_8859-8"/>
			<xsd:enumeration value="ISO_8859-9"/>
			<xsd:enumeration value="MacRoman"/>
			<xsd:enumeration value="MacCroatian"/>
			<xsd:enumeration value="MacRomania"/>
			<xsd:enumeration value="MacTurkish"/>
			<xsd:enumeration value="MacIceland"/>
			<xsd:enumeration value="MacCyrillic"/>
			<xsd:enumeration value="MacGreek"/>
			<xsd:enumeration value="MacLatin2"/>
			<xsd:enumeration value="MacGreek2"/>
			<xsd:enumeration value="MacHebrew"/>
			<xsd:enumeration value="MacArabic"/>
			<xsd:enumeration value="MacJIS"/>
			<xsd:enumeration value="WinSymbol"/>
			<xsd:enumeration value="MacSymbol"/>
			<xsd:enumeration value="WinWingdings"/>
			<xsd:enumeration value="MSLineDraw"/>
			<xsd:enumeration value="ZapfDingbats"/>
			<xsd:enumeration value="WPFArabic"/>
			<xsd:enumeration value="WPFArabicScript"/>
			<xsd:enumeration value="WPFBoxDrawing"/>
			<xsd:enumeration value="WPFCyrillicA"/>
			<xsd:enumeration value="WPFCyrillicB"/>
			<xsd:enumeration value="WPFGreek"/>
			<xsd:enumeration value="WPFHebrewDavid"/>
			<xsd:enumeration value="WPFIconicSymbolsA"/>
			<xsd:enumeration value="WPFIconicSymbolsB"/>
			<xsd:enumeration value="WPFJapanese"/>
			<xsd:enumeration value="WPFMathA"/>
			<xsd:enumeration value="WPFMathB"/>
			<xsd:enumeration value="WPFExtendedMathA"/>
			<xsd:enumeration value="WPFExtendedMathB"/>
			<xsd:enumeration value="WPFMultinationalA"/>
			<xsd:enumeration value="WPFMultinationalB"/>
			<xsd:enumeration value="WPFOverflowSet"/>
			<xsd:enumeration value="WPFPhonetic"/>
			<xsd:enumeration value="WPFTypographic"/>
			<xsd:enumeration value="MTExtra"/>
			<xsd:enumeration value="BookshelfSymbol3"/>
			<xsd:enumeration value="HP_Roman8"/>
			<xsd:enumeration value="BIDI-OldCode"/>
			<xsd:enumeration value="BIDI-PC8"/>
			<xsd:enumeration value="BIDI-E0"/>
			<xsd:enumeration value="HTML-KOI8"/>
			<xsd:enumeration value="JISRoman"/>
			<xsd:enumeration value="ISO_646"/>
			<xsd:enumeration value="CNS-11643-3"/>
			<xsd:enumeration value="CNS-11643-4"/>
			<xsd:enumeration value="CNS-11643-5"/>
			<xsd:enumeration value="CNS-11643-6"/>
			<xsd:enumeration value="CNS-11643-7"/>
			<xsd:enumeration value="UTF-8"/>
			<xsd:enumeration value="IBM1026"/>
			<xsd:enumeration value="IBM273"/>
			<xsd:enumeration value="IBM274"/>
			<xsd:enumeration value="IBM277"/>
			<xsd:enumeration value="IBM278"/>
			<xsd:enumeration value="IBM280"/>
			<xsd:enumeration value="IBM282"/>
			<xsd:enumeration value="IBM284"/>
			<xsd:enumeration value="IBM285"/>
			<xsd:enumeration value="IBM297"/>
			<xsd:enumeration value="IBM037"/>
			<xsd:enumeration value="IBM500"/>
			<xsd:enumeration value="IBM870"/>
			<xsd:enumeration value="IBM871"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="FlexionDateTime">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Stores a date and time with a resolution of seconds. The date and time are
					encoded according to the <i>Extended Calendar Date and Local Time of the Day</i> 
					format specified in {@reference ISO 8601}.
					<p/>
					<code>CCYY</code> is the four digit year number, 0001-9999<br/>
					<code>MM  </code> is the two digit month number, 01..12<br/>
					<code>DD  </code> is the two digit day number, 01..31<br/>
					<code>hh  </code> is the two digit hour number, 00..23<br/>
					<code>mm  </code> is the two digit minute number, 00..59<br/>
					<code>ss  </code> is the two digit second number, 00..59<br/>
										
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>FlexionDateTime</i> ::= <i>CCYY</i> "<b>-</b>" <i>MM</i> "<b>-</b>" <i>DD</i> "<b>T</b>" <i>hh</i> "<b>:</b>" <i>mm</i> "<b>:</b>" <i>ss</i>
<i>CCYY</i>     ::= <i>{@link xsd:int}</i>
<i>MM</i>       ::= <i>{@link xsd:int}</i>
<i>DD</i>       ::= <i>{@link xsd:int}</i>
<i>hh</i>       ::= <i>{@link xsd:int}</i>
<i>mm</i>       ::= <i>{@link xsd:int}</i>
<i>ss</i>       ::= <i>{@link xsd:int}</i></pre>
					
					<H3 class="subheadtext">Example</H3>
					5:00 PM, January 1, 2001:
					<pre class="noborder">2001-01-01T17:00:00</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:dateTime"/>
	</xsd:simpleType>
	<xsd:simpleType name="IntegerList">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					A list of {@link xsd:int} values. 

					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>IntegerList</i> ::= <i>{@link xsd:int}</i> ( S <i>{@link xsd:int}</i> )*
<i>S</i>           ::= (#x20 | #x9 | #xD | #xA)+</pre>

					<H3 class="subheadtext">Example</H3>
					<pre class="noborder">"4"
"4 17 36"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:list itemType="xsd:int"/>
	</xsd:simpleType>
	<xsd:simpleType name="Percent">
		<xsd:annotation>
			<xsd:documentation>
				A percentage value, expressed as a decimal number.

				<![CDATA[
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>Percent</i> ::= <i>{@link xsd:float}</i> "<b>%</b>"</pre>
					<H3 class="subheadtext">Example</H3>
					34.5 percent:
					<pre class="noborder">"34.5%"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="(\+|-)?\d*(.\d*)?%"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="VariantValue">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					VariantValue is used to specify a value of one of the following types:
					<ul>
						<li>integer</li>
						<li>floating point</li>
						<li>text</li>
						<li>boolean</li>
						<li>date</li>
					</ul>
					A VariantValue is prefixed by a tag character that indicates the value type.
	
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>VariantValue</i> ::= <i>intvalue</i> | <i>floatvalue</i> | <i>textvalue</i> | <i>booleanvalue</i> | <i>datetimevalue</i>
<i>intvalue</i>      ::= "<b>%</b>" <i>{@link xsd:int}</i>
<i>floatvalue</i>    ::= "<b>#</b>" <i>{@link xsd:float}</i>
<i>textvalue</i>     ::= "<b>$</b>" <i>{@link xsd:string}</i>
<i>booleanvalue</i>  ::= "<b>!</b>" <i>{@link xsd:boolean}</i>
<i>datetimevalue</i> ::= "<b>&amp;</b>" <i>{@link FlexionDateTime}</i></pre>

					<H3 class="subheadtext">Example</H3>
					The integer value 10:
					<pre class="noborder">"%10"</pre>
					The floating point value 13.5:
					<pre class="noborder">"#13.5"</pre>
					The string value 'MyString':
					<pre class="noborder">"$MyString"</pre>
					The boolean value 'true':
					<pre class="noborder">"!true"</pre>
					September 10, 1999, 1:00 pm:
					<pre class="noborder">"&amp;1999-09-10T13:00:00"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:union>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="%(\+|-)?\d*"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="#(\+|-)?\d*(.\d*)?"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="$\w"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="!(true|false)"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="&amp;\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(.\d*)?"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:union>
	</xsd:simpleType>
	<xsd:simpleType name="char">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Represents a single unicode character
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>char</i> ::= #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE00-#xFFFD]</pre>
					
					<H3 class="subheadtext">Example</H3>
					<pre class="noborder">"A"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:length value="1"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="unsignedByte">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Represents an unsigned 8-bit integer, with a value range of 0..255.
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:short">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="SpreadsheetCellOrValue">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				SpreadsheetCellOrValue allows specification of either a constant value or a 
				spreadsheet cell value as input to an operation.
				
				<H3 class="subheadtext">Syntax</H3>
				<pre class="noborder"><i>SpreadsheetCellOrValue</i> ::= ( <i>{@link SpreadsheetCellReference}</i> | <i>{@link VariantValue}</i> )</pre>
				
				<H3 class="subheadtext">Example</H3>
				The cell in the second column of row 27 on the current sheet:
				<pre class="noborder">"B27"</pre>
				The cell in the second column of row 27 on a sheet named "Sheet A":
				<pre class="noborder">"'Sheet A'!B27"</pre>
				The integer value 10:
				<pre class="noborder">"%10"</pre>
				The floating point value 13.5:
				<pre class="noborder">"#13.5"</pre>
				The string value 'MyString':
				<pre class="noborder">"$MyString"</pre>
				The boolean value 'true':
				<pre class="noborder">"!true"</pre>
				September 10, 1999, 1:00 pm:
				<pre class="noborder">"&amp;1999-09-10T13:00:00"</pre>
			]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:union memberTypes="SpreadsheetCellReference VariantValue"/>
	</xsd:simpleType>
	<xsd:simpleType name="SpreadsheetCellReference">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				<p>
					Represents a reference to a spreadsheet cell using the common referencing scheme:<br/>
					[Sheetname]![Column][Row]. 
				</p>
				<p>
					The column in a SpreadsheetCellReference is encoded using alphabetic characters. Column 1 (the leftmost column)
					is represented as "A" and column 26 as "Z". For columns greater than 26, additional characters are
					used. Column 27 is represented as "AA", column 28 as "AB", and so on.
				</p>
				<p>
					The sheet name must always be quoted with single quote characters (') or double quote characters(").
				</p>					
				<p>
					When the column and/or row is preceeded with a '$', this indicates an absolute reference to the 
					column or row, instead of a relative reference.
				</p>					
				<H3 class="subheadtext">Syntax</H3>
				<pre class="noborder"><i>SpreadsheetCellReference</i> ::= ( ( ( "<b>'</b>" <i>sheetname</i> "<b>'</b>" ) | ( "<b>"</b>" <i>sheetname</i> "<b>"</b>" ) ) "<b>!</b>" )? <i>column</i> <i>row</i>
<i>sheetname</i> ::= <i>{@link xsd:string}</i>
<i>column        ::= ( <i>absolute</i> )? ( <i>alphachar</i> )+</i>
<i>row           ::= ( <i>absolute</i> )? <i>{@link xsd:int}</i></i>
<i>absolute</i>  ::= "$"
<i>char</i>      ::= #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE00-#xFFFD]
<i>alphachar</i> ::= [#x41-#x5A] | [#x61-#x7A]</pre>

				<H3 class="subheadtext">Example</H3>
				
				<pre class="noborder">"B27"</pre>
				The cell in the second column of row 27 on a sheet named "Sheet A":
				<pre class="noborder">"'Sheet A'!B27"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:string"/>
	</xsd:simpleType>
	<xsd:simpleType name="SpreadsheetCompoundRange">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Defines a range of spreadsheet cells as the union of multiple {@link SpreadsheetRange} objects. 
					
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>SpreadsheetCompoundRange</i> ::= <i>{@link SpreadsheetRange}</i> ( <i>S</i> <i>{@link SpreadsheetRange}</i> )*
<i>S</i> ::= (#x20 | #x9 | #xD | #xA)+</pre>

					<H3 class="subheadtext">Example</H3>
					A range including all of the cells in the range C1:D8 and all of the cells in the range C11:D18:
					<pre class="noborder">"C1:D8 C11:D18"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:list itemType="SpreadsheetRange"/>
	</xsd:simpleType>
	<xsd:simpleType name="SpreadsheetRange">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					SpreadsheetRange represents a single rectangular range in a spreadsheet workbook. The range includes
					all of the cells in the rectangular area defined by the two referenced cells. If the cells are not
					on the same sheet, the range includes the three dimensional area bound by the two cells, including
					the areas on all intervening worksheets.
					
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>SpreadsheetRange</i> ::= <i>{@link SpreadsheetCellReference}</i> "<b>:</b>" <i>{@link SpreadsheetCellReference}</i></pre>
					
					<H3 class="subheadtext">Example</H3>
					All of the cells in the rectangle bounded by cells A1 and F10:
					<pre class="noborder">"A1:F10"</pre>
					All of the cells in the three-dimensional range bounded by cell B5 on the sheet named 'SheetA' and cell L15 on the sheet
					named 'SheetD':
					<pre class="noborder">"'SheetA'!B5:'SheetD'!L15"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="(\p{Pi}\c\p{Pf}!)?\p{L}*\p{Nd}*:(\p{Pi}\c\p{Pf}!)?\p{L}*\p{Nd}*"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Angle">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				An angle in any of a predefined set of angular units. The sign on an Angle
				depends on the orientation of the x and y axes and whether the angle is clockwise
				or counterclockwise. Angles will always be positive in the direction from the positive x-axis
				to the positive y-axis, and negative in the opposite direction. 
				<img src="axes.gif"/>

				<H3 class="subheadtext">Syntax</H3>
				<pre class="noborder"><i>Angle</i> ::= <i>{@link xsd:float}</i> <i>{@link EAngularUnits}</i></pre>
				<H3 class="subheadtext">Example</H3>
					An angle of 37.2 degrees:
				<pre class="noborder">"37.2deg"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="(\+|-)?\d*(.\d*)?(deg|grad|rad)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="HorizontalOffset">
		<xsd:annotation>
			<xsd:documentation>
				A horizontal offset relative to a position on the page or in the text. An 
				offset to the right of the position is specified as a positive value, and an 
				offset to the left of the position is specified as a negative value.

				<![CDATA[
				<H3 class="subheadtext">Syntax</H3>
				<pre class="noborder"><i>HorizontalOffset</i> ::= <i>origin</i> <i>S</i> <i>offset</i>
<i>origin</i> ::= <i>{@link EHorizontalOrigin}</i>
<i>offset</i> ::= <i>{@link PhysicalLength}</i>
<i>S</i>      ::= (#x20 | #x9 | #xD | #xA)+</pre>
				<H3 class="subheadtext">Example</H3>
				5 em units to the right of the left margin: 
				<pre class="noborder">"left-margin 5em"</pre>
				10 pixels to the left of the center of the page: 
				<pre class="noborder">"page-center -10.0px"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:string"/>
	</xsd:simpleType>
	<xsd:simpleType name="PhysicalCoordinate">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				An x or y coordinate value in physical space

				<H3 class="subheadtext">Syntax</H3>
				<pre class="noborder"><i>PhysicalCoordinate</i> ::= <i>{@link xsd:float}</i> <i>{@link ELinearUnits}</i></pre>

				<H3 class="subheadtext">Example</H3>
				+0.3 inches:
				<pre class="noborder">"0.3in"</pre>
				-10 points:
				<pre class="noborder">"-10pt"</pre>
			]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="PhysicalLength"/>
	</xsd:simpleType>
	<xsd:simpleType name="PhysicalLength">
		<xsd:annotation>
			<xsd:documentation>
				A dimension in any of a predefined set of linear units. 

				<![CDATA[
				<H3 class="subheadtext">Syntax</H3>
				<pre class="noborder"><i>PhysicalLength</i> ::= <i>{@link xsd:float}</i> <i>{@link ELinearUnits}</i></pre>

				<H3 class="subheadtext">Example</H3>
				0.3 inches:
				<pre class="noborder">"0.3in"</pre>
				10 points:
				<pre class="noborder">"10pt"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:string"/>
	</xsd:simpleType>
	<xsd:simpleType name="RelativeLength">
		<xsd:annotation>
			<xsd:documentation>
				Specifies a relative dimension in physical space. The dimension may be stored as an absolute measurement 
				(as in {@link PhysicalLength}), a relative measurement (e.g. table cell width as a percentage 
				of table row width), or a multiple (e.g. line spacing as a multiple of normal line spacing). 

				<![CDATA[
				<H3 class="subheadtext">Syntax</H3>
				<pre class="noborder"><i>RelativeLength</i> ::= ( <i>absolute</i> | <i>relative</i> | <i>multiple</i> )
<i>absolute</i> ::= <i>{@link PhysicalLength}</i>
<i>relative</i> ::= <i>{@link Percent}</i>
<i>multiple</i> ::= <i>{@link xsd:float}</i>
<i>S</i>        ::= (#x20 | #x9 | #xD | #xA)+</pre>
				<H3 class="subheadtext">Example</H3>
				0.3 inches:
				<pre class="noborder">"0.3in"</pre>
				150 percent of default:
				<pre class="noborder">"150%"</pre>
				2 times default:
				<pre class="noborder">"2"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:string"/>
	</xsd:simpleType>
	<xsd:simpleType name="Margin">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Represents top, left, right, and bottom margin widths. Margin may be used in any situation where 
				a set measurements for the four edges of a rectangle is required; for instance page margins or cell padding.
				<p/>
				The Margin type uses the padding shorthand defined in {@reference CSS}. Specifically, between one and four 
				PhysicalLength values may be specified:
				<ul> 
				<li>If one value is specified, it applies to all four sides.</li>
				<li>If two values are specified, the first is used for the top and bottom margins 
				    and the second is used for the left and right margins. </li>
				<li>If three values are specified, the first is used for the top margin, the second 
				    for the left and right margins, and the third for the bottom margin. </li>
				<li>If four values are specified, they are used for the top, right, bottom and left margins, respectively. </li>
				</ul>

				<H3 class="subheadtext">Syntax</H3>
				<pre class="noborder"><i>Margin</i> ::= <i>{@link PhysicalLength}</i> ( <i>S</i> <i>{@link PhysicalLength}</i> ){0,3}
<i>S</i>      ::= (#x20 | #x9 | #xD | #xA)+</pre>
				<H3 class="subheadtext">Example</H3>
				A margin of 10 pixels all around:
				<pre class="noborder">"10px"</pre>
				A margin of 10 pixels at the top and bottom and 12 pixels at left and right:
				<pre class="noborder">"10px 12px"</pre>
				A margin of 10 pixels at the top, 12 pixels at left and right, and 15 pixels at bottom:
				<pre class="noborder">"10px 12px 15px"</pre>
				A margin of 10 pixels at the top, 10 pixels at the right, 15 pixels at the bottom, and 12 pixels at the left:
				<pre class="noborder">"10px 10px 15px 12px"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction>
			<xsd:simpleType>
				<xsd:list itemType="PhysicalLength"/>
			</xsd:simpleType>
			<xsd:minLength value="1"/>
			<xsd:maxLength value="4"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="PhysicalRectangle">
		<xsd:annotation>
			<xsd:documentation>
				A rectangle in physical space (left, top, right, bottom)

				<![CDATA[
				<H3 class="subheadtext">Syntax</H3>
				<pre class="noborder"><i>PhysicalRectangle</i> ::= <i>left S top S right S bottom</i>
<i>left</i>   ::= <i>{@link PhysicalCoordinate}</i>
<i>top</i>    ::= <i>{@link PhysicalCoordinate}</i>
<i>right</i>  ::= <i>{@link PhysicalCoordinate}</i>
<i>bottom</i> ::= <i>{@link PhysicalCoordinate}</i>
<i>S</i>      ::= (#x20 | #x9 | #xD | #xA)+</pre>
				<H3 class="subheadtext">Example</H3>
				A rectangle with left at 10 pixels, top at 12 pixels, right at 15 pixels, and bottom at 11 pixels:
				<pre class="noborder">"10px 12px 15px 11px"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction>
			<xsd:simpleType>
				<xsd:list itemType="PhysicalCoordinate"/>
			</xsd:simpleType>
			<xsd:length value="4"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="VerticalOffset">
		<xsd:annotation>
			<xsd:documentation>
				A vertical offset relative to a position on the page or in the text. Offsets 
				below the position are specified as positive, and offsets above the position are 
				specified as negative.
				
				<![CDATA[
				<H3 class="subheadtext">Syntax</H3>
				<pre class="noborder"><i>VerticalOffset</i> ::= <i>origin</i> <i>S</i> <i>offset</i>
<i>origin</i> ::= <i>{@link EVerticalOrigin}</i>
<i>offset</i> ::= <i>{@link PhysicalLength}</i>
<i>S</i>      ::= (#x20 | #x9 | #xD | #xA)+</pre>
				<H3 class="subheadtext">Example</H3>
				10 points above the baseline:
				<pre class="noborder">"baseline -10pt"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:string"/>
	</xsd:simpleType>
	<xsd:simpleType name="LogicalCoordinate">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					An x or y coordinate value in logical space
					
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>LogicalCoordinate</i> ::= <i>{@link xsd:float}</i></pre>

					<H3 class="subheadtext">Example</H3>
					15 logical units from the axis:
					<pre class="noborder">"15"</pre>
					-37.2 logical units from the axis:
					<pre class="noborder">"-37.2"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:float"/>
	</xsd:simpleType>
	<xsd:simpleType name="LogicalLength">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					A length in logical space
					
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>LogicalLength</i> ::= <i>{@link xsd:float}</i></pre>

					<H3 class="subheadtext">Example</H3>
					13 logical units in length:
					<pre class="noborder">"13"</pre>
					15.9 logical units in length:
					<pre class="noborder">"15.9"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:float"/>
	</xsd:simpleType>
	<xsd:simpleType name="LogicalRectangle">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					A rectangle in logical space (left, top, right, bottom)
					
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>LogicalRectangle</i> ::= <i>left S top S right S bottom</i>
<i>left</i>   ::= <i>{@link LogicalCoordinate}</i>
<i>top</i>    ::= <i>{@link LogicalCoordinate}</i>
<i>right</i>  ::= <i>{@link LogicalCoordinate}</i>
<i>bottom</i> ::= <i>{@link LogicalCoordinate}</i>
<i>S</i>      ::= (#x20 | #x9 | #xD | #xA)+</pre>
					
					<H3 class="subheadtext">Example</H3>
					A rectangle with it's left edge at 10, top edge at 18.2, right edge at 20, and bottom edge at 8.2:
					<pre class="noborder">"10 18.2 20 8.2"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction>
			<xsd:simpleType>
				<xsd:list itemType="LogicalCoordinate"/>
			</xsd:simpleType>
			<xsd:length value="4"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="LogicalSize">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					A size in logical space (width, height)
					
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>LogicalSize</i> ::= <i>width</i> <i>S</i> <i>height</i>
<i>width</i>  ::= <i>{@link LogicalLength}</i>
<i>height</i> ::= <i>{@link LogicalLength}</i>
<i>S</i>      ::= (#x20 | #x9 | #xD | #xA)+</pre>
					
					<H3 class="subheadtext">Example</H3>
					15 logical units wide by 10.5 logical units high:
					<pre class="noborder">"15.0 10.5"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction>
			<xsd:simpleType>
				<xsd:list itemType="LogicalLength"/>
			</xsd:simpleType>
			<xsd:length value="2"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="LogicalPoint">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					A point in logical space. 

					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>LogicalPoint</i> ::= <i>x</i> <i>S</i> <i>y</i>
<i>x</i> ::= <i>{@link LogicalCoordinate}</i>
<i>y</i> ::= <i>{@link LogicalCoordinate}</i>
<i>S</i> ::= (#x20 | #x9 | #xD | #xA)+</pre>

					<H3 class="subheadtext">Example</H3>
					The point at x=37, y=-50.2:
					<pre class="noborder">"37 -50.2"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction>
			<xsd:simpleType>
				<xsd:list itemType="LogicalCoordinate"/>
			</xsd:simpleType>
			<xsd:length value="2"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="LogicalPointList">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					A series of points in logical space.
					
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>LogicalPointList</i> ::= <i>{@link LogicalPoint}</i> ( <i>S</i> <i>{@link LogicalPoint}</i> )*
<i>S</i> ::= (#x20 | #x9 | #xD | #xA)+</pre>

					<H3 class="subheadtext">Example</H3>
					The point series (10,10) (15,15) (15,10), (10,10):
					<pre class="noborder">"10 10 15 15 15 10 10 10"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:list itemType="LogicalCoordinate"/>
	</xsd:simpleType>
	<xsd:simpleType name="AlphaValue">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Stores an alpha (opacity) value as an integer, where 0 is completely transparent and 255 is completely opaque.
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>AlphaValue</i> ::= <i>{@link unsignedByte}</i></pre>
					<H3 class="subheadtext">Example</H3>
					Alpha 127 (50% transparent):
					<pre class="noborder">"127"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="unsignedByte"/>
	</xsd:simpleType>
	<xsd:simpleType name="ColorValue">
		<xsd:annotation>
			<xsd:documentation>
				ColorValue is the abstract base class for a group of classes that each represent a color in a particular color space.
			</xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:string"/>
	</xsd:simpleType>
	<xsd:simpleType name="ConcreteColorValue">
		<xsd:annotation>
			<xsd:documentation>
				ConcreteColorValue is a subtype of ColorValue for &quot;concrete&quot; colors (i.e. not palette or auto colors).
			</xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="ColorValue"/>
	</xsd:simpleType>
	<xsd:simpleType name="PaletteColor">
		<xsd:annotation>
			<xsd:documentation>
				Represents a color as a zero-based index into the currently selected {@link palette}. 

				<![CDATA[
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>PaletteColor</i> ::= "<b>pal(</b>" <i>index</i> "<b>)</b>"
<i>index</i>  ::= <i>{@link unsignedByte}</i></pre>

					<H3 class="subheadtext">Example</H3>
					The color at palette index 56:
					<pre class="noborder">"pal(56)"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="ColorValue"/>
	</xsd:simpleType>
	<xsd:simpleType name="RGBColor24">
		<xsd:annotation>
			<xsd:documentation>
				Represents a color as a combination of three additive components: red, green and blue. Each 
				component is expressed as an integer value between 0 (minimum brightness) and 255 (maximum brightness). 

				<![CDATA[
				<H3 class="subheadtext">Syntax</H3>
				<pre class="noborder"><i>RGBColor24</i> ::= "<b>rgb(</b>" <i>red</i> "<b>,</b>" <i>green</i> "<b>,</b>" <i>blue</i> "<b>)</b>"
<i>red</i>    ::= <i>{@link unsignedByte}</i>
<i>green</i>  ::= <i>{@link unsignedByte}</i>
<i>blue</i>   ::= <i>{@link unsignedByte}</i></pre>
				<H3 class="subheadtext">Example</H3>
				Bright green:
				<pre class="noborder">"rgb(0,255,0)"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="ConcreteColorValue"/>
	</xsd:simpleType>
	<xsd:simpleType name="AutoColor">
		<xsd:annotation>
			<xsd:documentation>
				Represents an automatic color. It is the responsibility of the Flexiondoc consumer to select the actual color
				value to use. For instance, auto color text would be black on a white background and white on a black background.

				<![CDATA[
				<H3 class="subheadtext">Syntax</H3>
				<pre class="noborder"><i>AutoColor</i> ::= "<b>auto</b>"
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="ColorValue"/>
	</xsd:simpleType>
	<xsd:simpleType name="GrayscaleSampleModel">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					A bitmap sample model for grayscale (luminance) channels. Specifies how the pixels in a grayscale
					{@link dr.channel} are encoded. 
					
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>GrayscaleSampleModel</i> ::= "<b>lum(</b>" <i>pixelsample</i> ( "<b>,</b>" <i>pixelsample</i> )* "<b>)</b>"
<i>pixelsample</i>     ::= <i>bitcount</i> ( <i>channel</i> )? ( <i>modifier</i> )?
<i>bitcount</i>        ::= <i>{@link unsignedByte}</i>
<i>channel</i>         ::= ( "<b>l</b>" )
<i>modifier</i>        ::= ( <i>alphamodifier</i> | <i>paddingmodifier</i> )
<i>alphamodifier</i>   ::= "<b>A</b>"
<i>paddingmodifier</i> ::= "<b>P</b>"</pre>
					
					<H3 class="subheadtext">Example</H3>
					Grayscale, 4 bits per pixel:
					<pre class="noborder">"lum(4l)"</pre>
					Grayscale, 8 bits per pixel with 8 bit alpha:
					<pre class="noborder">"lum(8l,8A)"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="PixelSampleModel"/>
	</xsd:simpleType>
	<xsd:simpleType name="IndexedSampleModel">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					A bitmap sample model for indexed (palettized) channels. Specifies how the pixels in a 
					palettized {@link dr.channel} are encoded. 
					
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>IndexedSampleModel</i> ::= "<b>pal(</b>" <i>pixelsample</i> ( "<b>,</b>" <i>pixelsample</i> )* "<b>)</b>"
<i>pixelsample</i>     ::= <i>bitcount</i> ( <i>channel</i> )? ( <i>modifier</i> )?
<i>bitcount</i>        ::= <i>{@link unsignedByte}</i>
<i>channel</i>         ::= ( "<b>p</b>" )
<i>modifier</i>        ::= ( <i>alphamodifier</i> | <i>paddingmodifier</i> )
<i>alphamodifier</i>   ::= "<b>A</b>"
<i>paddingmodifier</i> ::= "<b>P</b>"</pre>
					
					<H3 class="subheadtext">Example</H3>
					Indexed, 4 bits per pixel:
					<pre class="noborder">"pal(4p)"</pre>
					Palette, 7 bits per pixel with 1 bit padding:
					<pre class="noborder">"pal(7p,1P)"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="PixelSampleModel"/>
	</xsd:simpleType>
	<xsd:simpleType name="PixelSampleModel">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Specifies how the bits of an individual pixel encode a color. 
					
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>PixelSampleModel</i> ::= <i>colorspace</i> "(" <i>pixelsample</i> ( "<b>,</b>" <i>pixelsample</i> )* "<b>)</b>"
<i>colorspace</i>      ::= <i>{@link xsd:string}</i>
<i>pixelsample</i>     ::= <i>bitcount</i> ( <i>channel</i> )? ( <i>modifier</i> )?
<i>bitcount</i>        ::= <i>{@link unsignedByte}</i>
<i>channel</i>         ::= <i>{@link xsd:string}</i>
<i>modifier</i>        ::= ( <i>alphamodifier</i> | <i>paddingmodifier</i> )
<i>alphamodifier</i>   ::= "A"
<i>paddingmodifier</i> ::= "P"</pre>
					
					<H3 class="subheadtext">Example</H3>
					RGB, 24 bits per pixel with 8 bit alpha:
					<pre class="noborder">"rgb(8r,8g,8b,8A)"</pre>
					Grayscale, 3 bits per pixel:
					<pre class="noborder">"lum(3l)"</pre>
					RGB, 16 bits per pixel including one bit of padding:
					<pre class="noborder">"lab(5r,5g,5b,1P)</pre>
					RGB, 8 bits per pixel, red channel only:
					<pre class="noborder">"rgb(8r)"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="xsd:string"/>
	</xsd:simpleType>
	<xsd:simpleType name="RGBSampleModel">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					A bitmap sample model for RGB channels. Specifies how the pixels in an RGB 
					{@link dr.channel} are encoded. 
					
					<H3 class="subheadtext">Syntax</H3>
					<pre class="noborder"><i>RGBSampleModel</i> ::= "<b>rgb(</b>" <i>pixelsample</i> ( "<b>,</b>" <i>pixelsample</i> )* "<b>)</b>"
<i>pixelsample</i>     ::= <i>bitcount</i> ( <i>channel</i> )? ( <i>modifier</i> )?
<i>bitcount</i>        ::= <i>{@link unsignedByte}</i>
<i>channel</i>         ::= ( "r" | "g" | "b" )
<i>modifier</i>        ::= ( <i>alphamodifier</i> | <i>paddingmodifier</i> )
<i>alphamodifier</i>   ::= "A"
<i>paddingmodifier</i> ::= "P"</pre>
					
					<H3 class="subheadtext">Example</H3>
					RGB, 32 bits per pixel (8 bits per channel) including 8 bit alpha:
					<pre class="noborder">"rgb(8r,8g,8b,8A)"</pre>
					RGB, 16 bits per pixel (5 bits per channel) including one bit of padding:
					<pre class="noborder">"rgb(5r,5g,5b,1P)</pre>
					RGB, 48 bits per pixel (8 bits per channel) including 8 bits of alpha for each channel:
					<pre class="noborder">"rgb(8r,8g,8b,8rA,8gA,8bA)"</pre>
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:restriction base="PixelSampleModel"/>
	</xsd:simpleType>
	<xsd:complexType abstract="true" name="abstract_brush">
		<xsd:complexContent>
			<xsd:extension base="abstract_resource">
				<xsd:attribute name="operator" type="ERasterOperator" default="copy-src">
					<xsd:annotation>
						<xsd:documentation>
							The raster operator to apply when using this brush. For the purposes of applying a raster
							operator to a brush, the source is considered to be the brush pattern and the destination 
							is considered to be the area being filled by the brush. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="abstract_document">
		<xsd:complexContent>
			<xsd:extension base="abstract_object"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="abstract_element">
		<xsd:attribute name="id" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					A unique identifier for the element. An element may be referenced as an attribute 
					from any other element in the document through this identifier. An element is only
					required to have an ID if it is referenced by another element.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="abstract_text_element">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="id" type="xsd:ID" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							A unique identifier for the element. An element may be referenced as an attribute 
							from any other element in the document through this identifier. An element is only
							required to have an ID if it is referenced by another element.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="abstract_frame">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="rotation" type="Angle" default="0.0deg">
					<xsd:annotation>
						<xsd:documentation>
							The rotation angle for the entire frame, including contents.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="z_order" type="xsd:int" default="1">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
								The z order of the frame relative to other frames on the page. This value affects how frames wrap around each 
								other and which frames are drawn first. Frames with higher z_order values are considered to be "in front of"
								frames with lower z_order values, and will wrap around the lower z_order frames.
								<p/>
								The body, headers, footers, and notes in a word processing document are considered to have a Z-order of zero for the 
								purposes of layering. Thus, any frames with a Z-order less than zero will be drawn behind the body, and 
								any with a Z-order greater than zero will be drawn in front of the body. However, the body text will always 
								wrap around the frames, regardless of the Z-order (the frame text will never wrap around the body). 
								<p/>
								Likewise, the canvases of a drawing or presentation are considered to have a z_order of zero.
							]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="corner_radius" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The radius of the frame corners. Frames with a nonzero value for this attribute will draw as 
							round rectangles instead of rectangles.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="back_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The brush to fill the frame background with. If no background brush is specified, content 
							behind the frame will show through. For the purposes of rendering a frame, the area of the frame should first
							be filled with the background brush (taking into account the transparency of the background brush), then
							the frame contents should be layered on top of the results, taking into account the transparency specified
							by the frame's alpha attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="vertical_alignment" type="EVerticalAlignment" default="top">
					<xsd:annotation>
						<xsd:documentation>
							The vertical alignment of the contents of the frame within the interior of the frame.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="horizontal_alignment" type="EHorizontalAlignment" default="left">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal alignment of the contents of the frame within the interior of the frame.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="border" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the border that should be drawn around the edge of the frame. If a value
							is not specified for the border attribute, the frame will have no border. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="abstract_gradient">
		<xsd:complexContent>
			<xsd:extension base="abstract_resource">
				<xsd:sequence>
					<xsd:element name="gradient_stop" type="gradient_stop" minOccurs="2" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="step_count" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The number of steps in the gradient. This determines the maximum number of unique colors
							the gradient will contain. If a value isn't specified for this attribute, the renderer 
							must determine the number of steps to use.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="abstract_locator_segment">
		<xsd:complexContent>
			<xsd:extension base="abstract_element"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="abstract_named_resource">
		<xsd:complexContent>
			<xsd:extension base="abstract_resource">
				<xsd:attribute name="name" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							A name for this object.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="abstract_object">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="name" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							A name for this object.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="hidden" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the object is hidden from the user. Hidden objects may be referenced from
							other objects in the document, but should not be directly exposed to the user.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="locked" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the object is locked. Users may not make changes to locked objects.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="abstract_overlay">
		<xsd:complexContent>
			<xsd:extension base="abstract_object"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="abstract_resource">
		<xsd:complexContent>
			<xsd:extension base="abstract_element"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="abstract_sheet">
		<xsd:complexContent>
			<xsd:extension base="abstract_object"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="abstract_style">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="name" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The name of the style.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="alt">
		<xsd:annotation>
			<xsd:documentation>
				Contains two or more alternate representations of an object. The flexiondoc consumer should choose only one
				of the representations to display.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.text" type="tx.text"/>
					<xsd:element name="tx.utext" type="tx.utext"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="border">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Defines a border for the four edges of an object. Each edge may have a different border. 
					<img src="border.gif"/>
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_resource">
				<xsd:attribute name="left_priority" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Should be true if this border edge has priority over other border edges, false otherwise. 
							If two border edges overlap, only the border edge with priority will be drawn. If both 
							border edges have priority, or if neither have priority, the behavior is undefined.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="left_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use when drawing the border edge.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="top_priority" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Should be true if this border edge has priority over other border edges, false otherwise. 
							If two border edges overlap, only the border edge with priority will be drawn. If both 
							border edges have priority, or if neither have priority, the behavior is undefined.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="top_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use when drawing the border edge.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="right_priority" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Should be true if this border edge has priority over other border edges, false otherwise. 
							If two border edges overlap, only the border edge with priority will be drawn. If both 
							border edges have priority, or if neither have priority, the behavior is undefined.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="right_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use when drawing the border edge.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="bottom_priority" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Should be true if this border edge has priority over other border edges, false otherwise. 
							If two border edges overlap, only the border edge with priority will be drawn. If both 
							border edges have priority, or if neither have priority, the behavior is undefined.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="bottom_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use when drawing the border edge.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="padding" type="Margin" use="optional" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the padding between the inside of the border and the contents.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="margin" type="Margin" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
						Specifies the margin between the outside of the border and any adjacent objects.
					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="border_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link border} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="border" type="border" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="brush">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Specifies a solid, hatched, or null brush. Brushes are used to fill areas with a color
				or pattern. 
				<p/>
				Brushes have a foreground component and a background component. When an area is filled with
				the brush, the foreground component is filled with the foreground color and the background
				component is filled with the background color. If a foreground color or background color
				is not specified by the brush, the corresponding component is treated as being transparent
				(it is not drawn).
				<p/>
				A brush may be defined with neither a foreground color nor a background color. In this case,
				both the foreground component and the background component are transparent, so filling an
				area with the brush has no effect. This is referred to as a {@term null brush}.
				<p/>
				A solid brush may be defined by using the "solid" hatch pattern. See {@link hatch} for more 
				details on hatch patterns.
				<p/>
				<i>See also:</i> {@link gradient_brush}, {@link pattern_brush}
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_brush">
				<xsd:attribute name="back_color" type="ColorValue" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The background color for the brush. If a value is not specified for this attribute,
							the background component of the hatch pattern will be transparent.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="fore_color" type="ColorValue" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The foreground color for the brush. If a value is not specified for this attribute,
							the foreground component of the hatch pattern will be transparent.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="hatch" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The hatch pattern to use when filling an area with the brush. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="brush_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link brush} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="brush" type="brush"/>
					<xsd:element name="gradient_brush" type="gradient_brush"/>
					<xsd:element name="pattern_brush" type="pattern_brush"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="content">
		<xsd:annotation>
			<xsd:documentation>
				The main {@term content element} of the document. Contains all of the {@term subdocument} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="ar.archive" type="ar.archive"/>
					<xsd:element name="db.database" type="db.database"/>
					<xsd:element name="dr.easel" type="dr.easel"/>
					<xsd:element name="pr.presentation" type="pr.presentation"/>
					<xsd:element name="ss.workbook" type="ss.workbook"/>
					<xsd:element name="wp.doc" type="wp.doc"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="cropped_object">
		<xsd:annotation>
			<xsd:documentation>
				A special &quot;wrapper&quot; object that applies cropping and scaling to another object. The object attribute
				specifies the object to crop and/or scale. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_object">
				<xsd:choice minOccurs="0" maxOccurs="1">
					<xsd:element name="linked_object" type="linked_object"/>
					<xsd:element name="tx.s" type="tx.s"/>
					<xsd:element name="dr.drawing" type="dr.drawing"/>
					<xsd:element name="dr.image" type="dr.image"/>
					<xsd:element name="ch.chart" type="ch.chart"/>
				</xsd:choice>
				<xsd:attribute name="final_width" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The maximum width of the object after cropping and scaling. The original object should first be cropped 
							based on the crop_rect attribute, then scaled to fit within the rectangle specified by the 
							final_width and final_height attributes. 
							<p/>
							If both the final_width and final_height attributes are specified, the scaling depends on the value of
							the maintain_aspect_ratio attribute. 
							<p/>
							If the final_height attribute is not specified, the object will be scaled to fit within the width specified 
							by this attribute, and the height will be scaled as necessary to maintain the aspect ratio. 
							]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="final_height" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The maximum height of the object after cropping and scaling. The original object should first be cropped 
							based on the crop_rect attribute, then scaled to fit within the rectangle specified by the 
							final_width and final_height attributes. 
							<p/>
							If both the final_width and final_height attributes are specified, the scaling depends on the value of
							the maintain_aspect_ratio attribute. 
							<p/>
							If the final_width attribute is not specified, the object will be scaled to fit within the height specified 
							by this attribute, and the width will be scaled as necessary to maintain the aspect ratio. 
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="preserve_aspect_ratio" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the aspect ratio of the object should be preserved during resizing to fit 
							the final_size rectangle. If the aspect ratio is preserved, the object will be resized to fit
							within the area defined by the final_width and final_height attributes, while preserving the
							ratio between the object width and height. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="crop_rect" type="PhysicalRectangle" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The cropping rectangle relative to the original object. The object is cropped to this rectangle 
							before being resized for the frame.
			
							This is an optional attribute; if unspecified, the object will not be cropped.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="doc_property">
		<xsd:annotation>
			<xsd:documentation>
				Contains a document property. A document property is a named value associated
				with the document, such as the author or the revision number. Document properties 
				may be inserted into the document content via a {@link tx.insert_doc_property} element.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_text_element">
				<xsd:attribute name="user_defined_name" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
								Specifies a name for a document property that does not fall into one of the preset categories 
								provided by the {@link EDocumentPropertyName} enumeration.
								<p/>
								If values are specified for both the name and the user_defined_name attributes, the value of the name 
								attribute should be ignored.
							]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute ref="xml:space"/>
				<xsd:attribute name="name" type="EDocumentPropertyName" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
								Specifies a name for a document property from a set of common predefined document property names
								provided by the {@link EDocumentPropertyName} enumeration.
								<p/>
								If values are specified for both the name and the user_defined_name attributes, the value of the name 
								attribute should be ignored.
							]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="type" type="EDataType" default="string">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
								Specifies the data type for this document property. 
							]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="doc_property_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link doc_property} elements for the document. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="doc_property" type="doc_property" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="gradient_brush">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Specifies a brush that fills an area with a gradient.
				<p/>
				<i>See also:</i> {@link brush}, {@link pattern_brush}
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_brush">
				<xsd:attribute name="gradient" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							References a gradient element that specifies how the gradient for the brush
							should appear. For any operation where a gradient brush is used, the gradient 
							should be sized to fit a rectangle containing the entire area of effect.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="gradient_stop">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Defines a specific color point along a gradient. The simplest gradient has two
					stops, one at 0% and the other at 100%, with a smooth color transition between
					the two. More complex gradients can have three or more stops, with color transitions
					between each pair of adjacent stops.<br/>
					<img src="gradient_stops.gif"/>
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="color" type="ColorValue" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The color for the gradient stop.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="offset" type="RelativeLength" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The offset of the gradient stop within the gradient. The physical location of
							the stop within the gradient depends on the gradient type. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="gradient_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link linear_gradient}, {@link radial_gradient}, and {@link radial_box_gradient}
				elements in the document. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="linear_gradient" type="linear_gradient"/>
					<xsd:element name="radial_box_gradient" type="radial_box_gradient"/>
					<xsd:element name="radial_gradient" type="radial_gradient"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="hatch">
		<xsd:annotation>
			<xsd:documentation>
				Defines a hatch pattern. A hatch pattern consists of a 
				foreground component and a background component. When a
				hatch pattern is used by a brush, the foreground component
				is drawn in the brush foreground color and the background
				component in the brush background color.				
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_named_resource">
				<xsd:attribute name="predefined" type="EPredefinedHatchPattern" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The predefined hatch pattern to use.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="hatch_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link hatch} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="hatch" type="hatch" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="line_type">
		<xsd:annotation>
			<xsd:documentation>
				Defines a line type, such as dashed or dotted.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_named_resource">
				<xsd:attribute name="predefined" type="EPredefinedLineType" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The predefined line type to use.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="line_type_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link line_type} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="line_type" type="line_type" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="linear_gradient">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Defines a gradient that displays along a straight line from one point to another. The gradient 
					should be applied within the smallest rectangle that completely contains the affected area.
					<p/>
					<img src="gradient_linear.gif"/>
					<p/>
					Although the area to which a gradient applies may be affected by a {@link dr.affine_transform}, the
					rotation angle and shape of the gradient itself is not affected.
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_gradient">
				<xsd:attribute name="x1" type="RelativeLength" default="0%">
					<xsd:annotation>
						<xsd:documentation>
							The relative offset of the starting point of the gradient within the affected area, where
							0% is the starting point of the gradient and 100% is the ending point of the gradient.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="x2" type="RelativeLength" default="100%">
					<xsd:annotation>
						<xsd:documentation>
							The relative offset of the ending point of the gradient within the affected area.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="rotation" type="Angle" default="0deg">
					<xsd:annotation>
						<xsd:documentation>
							The rotation of the gradient within the affected area. If the rotation angle
							is zero, the gradient will be drawn in the direction from the origin along the
							x-axis (typically left-to-right). A non-zero rotation angle rotates the gradient's 
							vector around the origin.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="linked_object">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				References a drawing, bitmap, or other type of object that may be located in another document.
				<p/>
				The w and h attributes define the smallest rectangle containing the entire object. If either or both
				attributes are not specified, the value of the missing attribute(s) must be derived from the object itself.
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_object">
				<xsd:sequence>
					<xsd:element name="locator" type="locator" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="w" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
						The width of the smallest rectangle containing the entire object. 
					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="h" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The height of the smallest rectangle containing the entire object. 
	    				</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="locator_bookmark">
		<xsd:annotation>
			<xsd:documentation>
				A {@term locator segment} that specifies a bookmark by name.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_locator_segment">
				<xsd:attribute name="bookmark_name" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The name of the referenced bookmark.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="locator_cell_reference">
		<xsd:annotation>
			<xsd:documentation>
				A {@term locator segment} that references a spreadsheet cell via a {@link SpreadsheetCellReference}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_locator_segment">
				<xsd:attribute name="cell" type="SpreadsheetCellReference" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The target of this locator segment.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="locator_file">
		<xsd:annotation>
			<xsd:documentation>
				A {@term locator segment} that references a file.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_locator_segment">
				<xsd:attribute name="path" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The name and path of the file. This may be an absolute
							path or a path relative to the location of the original document.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="locator">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					A resource locator that contains a list of {@term locator segment} elements which, when processed in order, 
					may be used to identify a unique resource.
					<p/>
					The object identified by a locator is identified by the child elements of the locator, collectively known 
					as {@term locator segment} elements. A locator may contain any number of locator segments, although their ordering
					is restricted (see the content model below for details).
					<p/>
					There are currently 6 locator segment types defined: 
					<ul>
						<li><b>{@link locator_file}</b>: Specifies the location of a file via a relative or absolute path</li>
						<li><b>{@link locator_url}</b>: Specifies the location of a file via a URL</li>
						<li><b>{@link locator_ole}</b>: Specifies a path within an OLE file</li>
						<li><b>{@link locator_range}</b>: Specifies a byte range within a file</li>
						<li><b>{@link locator_object}</b>: References an object in a FlexionDoc document</li>
						<li><b>{@link locator_bookmark}</b>: References a bookmarked section of text (generally used only by hyperlinks)</li>
						<li><b>{@link locator_cell_reference}</b>: References a spreadsheet cell (generally used only by hyperlinks)</li>
					</ul>
					Each locator segment in a locator defines a sublocation relative to the locator that preceed it. 
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:choice minOccurs="0">
						<xsd:element name="locator_file" type="locator_file"/>
						<xsd:element name="locator_url" type="locator_url"/>
					</xsd:choice>
					<xsd:choice minOccurs="0" maxOccurs="unbounded">
						<xsd:element name="locator_object" type="locator_object"/>
						<xsd:element name="locator_ole" type="locator_ole"/>
						<xsd:element name="locator_range" type="locator_range"/>
					</xsd:choice>
					<xsd:choice minOccurs="0" maxOccurs="1">
						<xsd:element name="locator_bookmark" type="locator_bookmark"/>
						<xsd:element name="locator_cell_reference" type="locator_cell_reference"/>
					</xsd:choice>
				</xsd:sequence>
				<xsd:attribute name="type" type="ELocatorType" default="object">
					<xsd:annotation>
						<xsd:documentation>
							The type of object referenced by the locator. This is useful when several locators point to 
							different representations of the same object, as in OLE2.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="object_id" type="xsd:nonNegativeInteger">
					<xsd:annotation>
						<xsd:documentation>
							A unique identifier for the object referenced by this locator. May be used as the
							subdocument id in a call to DAOpenSubdocument.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="locator_object">
		<xsd:annotation>
			<xsd:documentation>
				A {@term locator segment} that identifies an object in a FlexionDoc document. The 
				object may be in the current document (if the locator_object is not preceeded by a 
				{@link locator_file} or {@link locator_url}, or it may be in a separate document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_locator_segment">
				<xsd:attribute name="object" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The id of the object this locator refers to. This attribute is not necessarily a reference 
							to an object within the current document. The entire locator must be processed to
							correctly identify the object.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="locator_ole">
		<xsd:annotation>
			<xsd:documentation>
				A {@term locator segment} that contains an OLE path. The path will be relative to the locator segments that preceed 
				it. If it is not preceeded by any other locator segments, it will be relative to the file used to generate the document
				containing the locator_ole.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_locator_segment">
				<xsd:attribute name="path" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The OLE path for this locator segment.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="path_encoding" type="EEncoding" default="none">
					<xsd:annotation>
						<xsd:documentation>
							The encoding for the path attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="locator_range">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				A {@term locator segment} that specifies a range of bytes in a stream. If the locator_range
				is not preceeded by any other locator segments, it refers to a range of bytes within the 
				file used to generate the document containing the locator_range.
				<p/>
				The offset and length values are measured in 8-bit bytes. After the byte range is extracted,
				it must be decoded then decompressed according to the values of the encoding and compression
				attributes. Any locator segments following a locator_range apply to the decoded, decompressed
				byte range.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_locator_segment">
				<xsd:attribute name="offset" type="xsd:int" default="0">
					<xsd:annotation>
						<xsd:documentation>
							The offset, in 8 bit bytes, of the beginning of the range relative to the beginning of the file.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="length" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The size of the range in 8-bit bytes.
		
							This is an optional attribute; if unspecified, the range will extend to the end of the stream.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="compression" type="ECompression" default="none">
					<xsd:annotation>
						<xsd:documentation>
		  					The compression method used on the data within the range. Compression is applied prior
							to encoding, so the data must be decoded before it is decompressed.
  						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="encoding" type="EEncoding" default="none">
					<xsd:annotation>
						<xsd:documentation>
  							The compression method used on the data within the range. Encoding is applied after
							compression.
		  				</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="locator_url">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				A {@term locator segment} that specifies a URL. 
				<p/>
				A fragment identifier, such as an HTML anchor, should be encoded as 
				a {@link locator_bookmark}; it should not be included as part of the url. 
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_locator_segment">
				<xsd:attribute name="url" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the complete URL. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="protocol" type="xsd:string" default="http">
					<xsd:annotation>
						<xsd:documentation>
							Specifies which internet protocol should be used to access the file. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="host_name" type="xsd:string" default="localhost">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the name of the host which owns the file.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="port_number" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The port number to connect to on the host. If a value is not provided
							for this attribute, the default port number for the selected protocol
							will be used. For instance, the default port number for http is 80.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="file_name" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the name of the file. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="page_style">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Specifies size and layout information for the page.
					<p/>
					The binding location and double sided attribute specified by the active {@link print_settings} determines 
					how gutters are applied to the page. Gutters are only applied on the edge of the page that will be bound. 
					For example, if laying out a document to be double sided with left binding, the gutter will be applied 
					on the left for odd numbered pages and on the right for even numbered pages.
					<p/>
					<img src="pagelayout.gif">
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="page_width" type="PhysicalLength" default="8.5in">
					<xsd:annotation>
						<xsd:documentation>
		  					The width of the page. The orientation attribute may affect how this value is interpreted.
  						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="page_height" type="PhysicalLength" default="11.0in">
					<xsd:annotation>
						<xsd:documentation>
		  					The height of the page. The orientation attribute may affect how this value is interpreted.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="margin" type="Margin" default="1.0in">
					<xsd:annotation>
						<xsd:documentation>
							The margin around the inside of the page edge. This affects layout of text on the page.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="first_page_gutter" type="Margin" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The gutter on the first page of each section. If a value is not specified for this attribute,
							the gutter for the first page of the section will be equal to the even_page_gutter or the 
							odd_page_gutter, depending on whether the page is even or odd.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="odd_page_gutter" type="Margin" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The gutter for odd numbered pages in the section. The first_page_gutter (if specified) will 
							always be used for the first page of the section, regardless of whether the first page is even 
							or odd.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="even_page_gutter" type="Margin" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The gutter for odd numbered pages in the section. If a first_page_gutter (if specified) will
							always be used for the first page of the section, regardless of whether the first page is even 
							or odd.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="left_margin_adjust" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							An adjustment to the left margin. This value is added to the page margin to obtain an adjusted 
							left margin for the affected paragraph(s). 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="right_margin_adjust" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							An adjustment to the right margin. This value is added to the page margin to obtain an adjusted
							right margin for the affected paragraph(s).
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="vertical_alignment" type="EVerticalAlignment" default="top">
					<xsd:annotation>
						<xsd:documentation>
							The vertical alignment for the text on the page.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="border" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the border for the page. If a value is not specified for this attribute,
							the page will have no border.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="orientation" type="EPageOrientation" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The page orientation. Specifying an orientation for the page can change the interpretation of 
							the paper_size attribute; if the orientation is &quot;portrait&quot;, the lesser dimension is aligned 
							horizontally, and if the orientation is &quot;landscape&quot; the greater dimension is aligned horizontally. 
							If a value is not specified for this attribute, the paper_size will be used directly.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="page_style_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link page_style} elements for the document. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="page_style" type="page_style"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="palette">
		<xsd:annotation>
			<xsd:documentation>
				Defines a set of colors that may be addressed by index. Colors in a palette may be
				referenced by a {@link PaletteColor}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_named_resource">
				<xsd:sequence>
					<xsd:element name="palette_entry" type="palette_entry" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="palette_entry">
		<xsd:annotation>
			<xsd:documentation>
				Defines a single color within a {@link palette}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="color" type="ConcreteColorValue" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the color for this palette entry
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="alpha" type="AlphaValue" default="255">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the alpha (opacity) value for this palette entry, where 0 is 
							completely transparent and 255 is completely opaque.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="name" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
		  					A name for this palette entry.
  						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="palette_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link palette} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="palette" type="palette" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="pattern_brush">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Specifies a brush that uses an image to fill the affected area.
				<p/>
				<i>See also:</i> {@link brush}, {@link gradient_brush}
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_brush">
				<xsd:choice minOccurs="1" maxOccurs="1">
					<xsd:element name="cropped_object" type="cropped_object"/>
					<xsd:element name="linked_object" type="linked_object"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="pen">
		<xsd:annotation>
			<xsd:documentation>
				Defines the appearance of a pen for drawing lines.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_named_resource">
				<xsd:attribute name="width" type="PhysicalLength" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The total width of lines created using the pen. A width of 0 will cause the pen to draw as a 
							hairline pen - that is, lines using the pen will draw at one pixel wide regardless of scaling or zoom level.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="line_type" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The line type to use when drawing lines with the pen.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="brush" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The brush that will be used to fill the area defined by lines drawn by the pen. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="pen_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link pen} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="pen" type="pen" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="print_settings">
		<xsd:annotation>
			<xsd:documentation><![CDATA[				
				Contains settings relevant to printing a document.
				<p/>
				The binding_location attribute in combination with the double_sided attribute determines how gutters 
				are applied to the page (see {@link page_style}). Gutters are only applied on the edge of the page 
				that will be bound. 
				<p/>
				For example, if laying out a document to be double sided with left binding, the gutter will be applied on 
				the left for odd numbered pages and on the right for even numbered pages.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="double_sided" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the document should be printed on both sides of the paper.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="binding_location" type="ERectangleEdge" default="left">
					<xsd:annotation>
						<xsd:documentation>
							Specifies which edge of the page will be bound (and which edge gutters will be applied to).
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="print_settings_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link print_settings} elements for the document. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="print_settings" type="print_settings"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="radial_box_gradient">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Defines a gradient that displays outward from a focal point to a bounding rectangle.
					The gradient should be applied within the smallest rectangle that completely contains the affected area.
					<p/>
					<img src="gradient_radialbox.gif"/>
					<p/>
					Although the area to which a gradient applies may be affected by a {@link dr.affine_transform}, the
					rotation angle and shape of the gradient itself is not affected.
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_gradient">
				<xsd:attribute name="x1" type="RelativeLength" default="0%">
					<xsd:annotation>
						<xsd:documentation>
							The relative x-offset of the first point defining the gradient rectangle within the affected area.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y1" type="RelativeLength" default="0%">
					<xsd:annotation>
						<xsd:documentation>
							The relative y-offset of the first point defining the gradient rectangle within the affected area.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="x2" type="RelativeLength" default="100%">
					<xsd:annotation>
						<xsd:documentation>
							The relative x-offset of the second point defining the gradient rectangle within the affected area.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y2" type="RelativeLength" default="100%">
					<xsd:annotation>
						<xsd:documentation>
							The relative y-offset of the second point defining the gradient rectangle within the affected area.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="fx" type="RelativeLength" default="50%">
					<xsd:annotation>
						<xsd:documentation>
							The relative x-offset of the focal point of the gradient within the affected area.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="fy" type="RelativeLength" default="50%">
					<xsd:annotation>
						<xsd:documentation>
							The relative y-offset of the focal point of the gradient within the affected area.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="rotation" type="Angle" default="0deg">
					<xsd:annotation>
						<xsd:documentation>
							The rotation of the gradient within the affected area. If the rotation angle
							is zero, the gradient will be drawn in the direction from the origin along the
							x-axis (typically left-to-right). A non-zero rotation angle rotates the gradient's 
							vector around the origin.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="radial_gradient">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Defines a gradient that displays outward from a focal point to a bounding circle. The 
					cx, cy, fx, fy, and r attributes define a circle that forms the outer limits of the gradient.
					The gradient should be applied within the smallest rectangle that completely contains the affected area.
					<p/>
					<img src="gradient_radial.gif"/>
					<p/>
					Although the area to which a gradient applies may be affected by a {@link dr.affine_transform}, the
					rotation angle and shape of the gradient itself is not affected.
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_gradient">
				<xsd:attribute name="cx" type="RelativeLength" default="50%">
					<xsd:annotation>
						<xsd:documentation>
							The relative x-offset of the center of the gradient circle within the affected area. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="cy" type="RelativeLength" default="50%">
					<xsd:annotation>
						<xsd:documentation>
							The relative y-offset of the center of the gradient circle within the affected area.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="r" type="RelativeLength" default="50%">
					<xsd:annotation>
						<xsd:documentation>
							The relative radius of the gradient circle within the affected area. The radius will
							be calculated relative to the larger of the width or the height of the affected area.
							For instance, if the area is 10 units wide and 50 units high, a radius of 50% will 
							produce a gradient circle with a radius of 25 units (50% x 50 units). 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="fx" type="RelativeLength" default="50%">
					<xsd:annotation>
						<xsd:documentation>
							The x-offset of the focal point of the gradient.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="fy" type="RelativeLength" default="50%">
					<xsd:annotation>
						<xsd:documentation>
							The y-offset of the focal point of the gradient.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="referenced_object">
		<xsd:annotation>
			<xsd:documentation>
				An object that may appear anywhere in the document and be referenced by a tx.insert_object elsewhere in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_object">
				<xsd:choice minOccurs="0" maxOccurs="1">
					<xsd:element name="tx.s" type="tx.s"/>
					<xsd:element name="dr.drawing" type="dr.drawing"/>
					<xsd:element name="dr.image" type="dr.image"/>
					<xsd:element name="ch.chart" type="ch.chart"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="style_tables">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					The root of the document style tree. 
					<p/>
					The elements under cm.style_tables share the following traits:
					<OL>
						<LI>They are referenced as attributes by one or more elements in the document content and/or in the 
						style tables.</LI>
						<LI>The opportunity for duplicate elimination is good (for instance, many elements in the document 
						may use the same brush).</LI>
						<LI>The elements must not define content</LI>
						<LI>The element and it's subtree should be relatively small; large subtrees should not be located 
						under style_tables.</LI>
					</OL>
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="palette_table" type="palette_table" minOccurs="0"/>
					<xsd:element name="line_type_table" type="line_type_table" minOccurs="0"/>
					<xsd:element name="hatch_table" type="hatch_table" minOccurs="0"/>
					<xsd:element name="gradient_table" type="gradient_table" minOccurs="0"/>
					<xsd:element name="brush_table" type="brush_table" minOccurs="0"/>
					<xsd:element name="pen_table" type="pen_table" minOccurs="0"/>
					<xsd:element name="border_table" type="border_table" minOccurs="0"/>
					<xsd:element name="page_style_table" type="page_style_table" minOccurs="0"/>
					<xsd:element name="print_settings_table" type="print_settings_table" minOccurs="0"/>
					<xsd:element name="tx.underline_table" type="tx.underline_table" minOccurs="0"/>
					<xsd:element name="tx.font_table" type="tx.font_table" minOccurs="0"/>
					<xsd:element name="tx.font_group_table" type="tx.font_group_table" minOccurs="0"/>
					<xsd:element name="tx.tab_group_table" type="tx.tab_group_table" minOccurs="0"/>
					<xsd:element name="tx.char_style_table" type="tx.char_style_table" minOccurs="0"/>
					<xsd:element name="tx.counter_table" type="tx.counter_table" minOccurs="0"/>
					<xsd:element name="tx.counter_format_table" type="tx.counter_format_table" minOccurs="0"/>
					<xsd:element name="tx.counter_style_table" type="tx.counter_style_table" minOccurs="0"/>
					<xsd:element name="tx.para_style_table" type="tx.para_style_table" minOccurs="0"/>
					<xsd:element name="tx.row_style_table" type="tx.row_style_table" minOccurs="0"/>
					<xsd:element name="tx.cell_style_table" type="tx.cell_style_table" minOccurs="0"/>
					<xsd:element name="wp.column_style_table" type="wp.column_style_table" minOccurs="0"/>
					<xsd:element name="dr.transform_table" type="dr.transform_table" minOccurs="0"/>
					<xsd:element name="dr.marker_table" type="dr.marker_table" minOccurs="0"/>
					<xsd:element name="dr.draw_style_table" type="dr.draw_style_table" minOccurs="0"/>
					<xsd:element name="ss.format_spec_table" type="ss.format_spec_table" minOccurs="0"/>
					<xsd:element name="ss.cell_style_table" type="ss.cell_style_table" minOccurs="0"/>
					<xsd:element name="db.format_spec_table" type="db.format_spec_table" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="variant">
		<xsd:annotation>
			<xsd:documentation>
				Used to specify a value as one of the following types:
				integer 
				floating point 
				string
				boolean
				date
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ar.abstract_entry" abstract="true">
		<xsd:annotation>
			<xsd:documentation>
				Defines a single entry in a file archive. An entry may be a file or a folder.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="name" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The name of this archive entry.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="comment" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							A comment for this archive entry.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="last_modification" type="FlexionDateTime" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The last modification date and time for this archive entry.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="user" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The name of the user that owns the file associated with this archive entry.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="group" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The name of the group that owns the file associated with this archive entry.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="user_id" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The id of the user that owns the file associated with this archive entry.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="group_id" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The id of the group that owns the file associated with this archive entry.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ar.archive" final="#all">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				The {@term subdocument} for a file archive (a hierarchical collection of files).
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_document">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="ar.folder" type="ar.folder"/>
					<xsd:element name="ar.file" type="ar.file"/>
				</xsd:choice>
				<xsd:attribute name="object_id" type="xsd:nonNegativeInteger">
					<xsd:annotation>
						<xsd:documentation>
							A unique identifier for the archive file referenced by this ar.archive. May be used as the
							subdocument id in a call to DAOpenSubdocument.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ar.folder" final="#all">
		<xsd:annotation>
			<xsd:documentation>
				Defines a folder entry in a file archive. A folder entry may contain any
				number of file and folder entries. Folders may be nested to any depth.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ar.abstract_entry">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="ar.folder" type="ar.folder"/>
					<xsd:element name="ar.file" type="ar.file"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ar.file" final="#all">
		<xsd:annotation>
			<xsd:documentation>
				Defines a single file entry in a file archive.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ar.abstract_entry">
				<xsd:attribute name="length" type="xsd:nonNegativeInteger" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The uncompressed size of this file in bytes.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="record_id" type="xsd:unsignedInt" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the record id associated with this ar.file. The record id may be used to open the
							file using the DAOpenTreeRecord function.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.axis" final="#all">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ch.axis_scale_style" type="ch.axis_scale_style" minOccurs="0"/>
					<xsd:element name="ch.title" type="ch.title" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="ch.label" type="ch.label" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="minimum" type="SpreadsheetCellOrValue" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The minimum value for the axis.
		
							This is an optional attribute; if unspecified, the minimum value must be calculated by the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="maximum" type="SpreadsheetCellOrValue" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The maximum value for the axis.
		
							This is an optional attribute; if unspecified, the maximum value must be calculated by the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="minor_interval" type="SpreadsheetCellOrValue" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The spacing between minor intervals.
		
							This is an optional attribute; if unspecified, the value must be calculated by the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="major_interval" type="SpreadsheetCellOrValue" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The spacing between major intervals.
		
							This is an optional attribute; if unspecified, the value must be calculated by the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="major_intervals_per_tick" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The number of major intervals between each major tickmark.
		
							This is an optional attribute; if unspecified, the value must be calculated by the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="minor_intervals_per_tick" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The number of minor intervals between each minor tickmark.
		
							This is an optional attribute; if unspecified, the value must be calculated by the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="major_ticks_per_label" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The number of major ticks between major labels.
		
							This is an optional attribute; if unspecified, the value must be calculated by the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="minor_ticks_per_label" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The number of minor ticks between minor labels.
		
							This is an optional attribute; if unspecified, the value must be calculated by the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="reversed" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the range on the axis is reversed. 
		
							This is an optional attribute; if unspecified, the default value is false.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use for the axis line (but not the tickmarks).
		
							This is an optional attribute; if unspecified, the pen selection is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="major_tick_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use for major tickmarks. 
		
							This is an optional attribute; if unspecified, the pen selection is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="minor_tick_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use for minor tickmarks. 
		
							This is an optional attribute; if unspecified, the pen selection is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="major_gridline_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use for major gridlines 
		
							This is an optional attribute; if unspecified, the pen selection is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="minor_gridline_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use for minor gridlines.
		
							This is an optional attribute; if unspecified, the pen selection is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="scale_type" type="EScaleType" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The scale type for the axis, either NORMAL, LOG, or PERCENT.
		
							This is an optional attribute; if unspecified, the default value is NORMAL.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="format_spec" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The number format for axis value labels. 
		
							This is an optional attribute; if unspecified, the number format is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="major_tick_type" type="EAxisTickType" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The tick type to use for major ticks. 
		
							This is an optional attribute; if unspecified, the default value is NONE.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="axis_type" type="EAxisType" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The axis type, such as VALUE_PRIMARY or SERIES_SECONDARY.
		
							This is a required attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="minor_tick_type" type="EAxisTickType" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The tick type to use for minor ticks. 
		
							This is an optional attribute; if unspecified, the default value is NONE.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="position" type="ERectangleEdge" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates the position where the axis should be displayed.
		
							This is an optional attribute; if unspecified, the position is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="char_style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the character style and/or properties to use for axis value labels. 
		
							This is an optional attribute; if unspecified, the character style is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.axis_scale_style">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ch.label" type="ch.label" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="scale_factor" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The exponent of 10 to multiply by. For example, a value of 3 indicates that the labels on the axis are in thousands.
		
							This is an optional attribute; if unspecified, the default value is 0.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="text_visible" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the axis scale label, such as &quot;In Thousands&quot;, is visible.
		
							This is an optional attribute; if unspecified, the default value is FALSE.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="bbox" type="PhysicalRectangle" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The bounding box for the axis scale text.
		
							This is an optional attribute; if unspecified, the default is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="border" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the border for the axis scale label.
		
							This is an optional attribute; if unspecified, the axis scale label will not have a border.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The background brush for the axis scale label.
		
							This is an optional attribute; if unspecified, the axis scale label will be drawn transparently over the existing background.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.bar_graph_style">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="margin" type="Percent" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The percentage of the category width that is empty space
		
							This is an optional attribute; if unspecified, the default value is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="overlap" type="Percent" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The percentage of overlap between bars. 
		
							This is an optional attribute; if unspecified, the default value is 0%.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="compare_line_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use when drawing comparison lines in the bar graph.
		
							This is an optional attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="stacked" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the graph series will be stacked. 
		
							This is an optional attribute; if unspecified, the default value is FALSE.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="percent" type="xsd:boolean" use="optional"/>
				<xsd:attribute name="rotated" type="xsd:boolean" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.category">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ch.graph_value" type="ch.graph_value" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="ch.label" type="ch.label" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="char_style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the character style and/or properties to use for category labels. 
		
							This is an optional attribute; if unspecified, the character style is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.chart">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				A {@term sheet} that represents a chart in a spreadsheet file. 
				<p/>
				For this release of Outside In XML Export, this element is only a placeholder, and will not 
				include the contents of the chart. Chart contents will be available in a future 
				release.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_sheet">
				<xsd:sequence>
					<xsd:element name="dr.canvas" type="dr.canvas"/>
					<xsd:element name="locator" type="locator" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="object_id" type="xsd:nonNegativeInteger">
					<xsd:annotation>
						<xsd:documentation>
							A unique identifier for the chart referenced by this ch.chart. May be used as the
							subdocument id in a call to DAOpenSubdocument.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.graph">
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_primitive">
				<xsd:sequence>
					<xsd:choice minOccurs="0">
						<xsd:element name="ch.bar_graph_style" type="ch.bar_graph_style"/>
						<xsd:element name="ch.hilo_graph_style" type="ch.hilo_graph_style"/>
						<xsd:element name="ch.pie_graph_style" type="ch.pie_graph_style"/>
					</xsd:choice>
					<xsd:element name="ch.three_d_graph_style" type="ch.three_d_graph_style" minOccurs="0"/>
					<xsd:element name="ch.title" type="ch.title" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="ch.legend" type="ch.legend" minOccurs="0"/>
					<xsd:element name="ch.axis" type="ch.axis" minOccurs="0" maxOccurs="3"/>
					<xsd:element name="ch.series" type="ch.series" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="ch.category" type="ch.category" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="x" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal position of the graph.
		
							This is an optional attribute; if unspecified, the current point wil be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The vertical position of the graph.
		
							This is an optional attribute; if unspecified, the current point wil be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="w" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The width of the graph.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="h" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The height of the graph.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="type" type="EGraphType" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates the graph type, such as BAR or PIE.
		
							This is a required attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="back_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The brush to fill the graph background with. If no background brush is specified, content 
							behind the graph will show through. For the purposes of rendering a graph, the area of the graph should first
							be filled with the background brush (taking into account the transparency of the background brush), then
							the graph contents should be layered on top of the results.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="border" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the border that should be drawn around the edge of the graph. If a value
							is not specified for the border attribute, the graph will have no border. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.graph_value">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="ss.range" type="ss.range"/>
					<xsd:element name="variant" type="variant"/>
				</xsd:choice>
				<xsd:attribute name="explosion" type="SpreadsheetCellOrValue" use="optional"/>
				<xsd:attribute name="color" type="SpreadsheetCellOrValue" use="optional"/>
				<xsd:attribute name="brush" type="xsd:IDREF" use="optional"/>
				<xsd:attribute name="pen" type="xsd:IDREF" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.hilo_graph_style">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="close_open_line" type="xsd:boolean" use="optional"/>
				<xsd:attribute name="pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use when drawing the hi/low bars.
		
							This is an optional attribute; if unspecified, a hairline black pen will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="volume_display_type" type="EVolumeDisplayType" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies how volume values should be displayed.
		
							This is an optional attribute; if unspecified, the default value is NONE.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="stacked" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the graph series will be stacked. 
		
							This is an optional attribute; if unspecified, the default value is FALSE.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="percent" type="xsd:boolean" use="optional"/>
				<xsd:attribute name="rotated" type="xsd:boolean" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.label">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.s" type="tx.s"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.legend">
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_primitive">
				<xsd:sequence>
					<xsd:element name="ch.label" type="ch.label" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="legend_direction" type="ELegendDirection" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The orientation of the legend, either top to bottom or left to right.
		
							This is an optional attribute; if unspecified, the default value is DEFAULT.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="position" type="ERectangleEdge" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The position of the legend relative to the graph. If the legend coordinates are specified, they take
							precidence over this value.
							
							This is an optional attribute; if unspecified, the default value is LEFT.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="w" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The width of the legend frame. If not specified, the frame width will be adjusted to fit the contents.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="h" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The height of the legend frame. If not specified, the frame height will be adjusted to fit the contents.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="x" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the legend frame.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the legend frame.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="back_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The brush to fill the legend background with. If no background brush is specified, content 
							behind the legend will show through. For the purposes of rendering a legend, the area of the legend should first
							be filled with the background brush (taking into account the transparency of the background brush), then
							the legend contents should be layered on top of the results.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="border" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the border that should be drawn around the edge of the legend. If a value
							is not specified for the border attribute, the legend will have no border. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.pie_graph_style">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="radius" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The radius of the pie. 
		
							This is an optional attribute; if unspecified, the radius is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="rotation" type="Angle" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The rotation angle for the pie. 
		
							This is an optional attribute; if unspecified, the default value is 0deg.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="clockwise" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the pie series are displayed in clockwise order or counterclockwise order.
		
							This is an optional attribute; if unspecified, the default value is FALSE.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="stacked" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the graph series will be stacked. 
		
							This is an optional attribute; if unspecified, the default value is FALSE.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="percent" type="xsd:boolean" use="optional"/>
				<xsd:attribute name="rotated" type="xsd:boolean" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.series">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="ch.label" type="ch.label"/>
					<xsd:element name="ch.graph_value" type="ch.graph_value"/>
				</xsd:choice>
				<xsd:attribute name="name" type="xsd:string" use="optional"/>
				<xsd:attribute name="pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The primary pen for the series.
		
							This is an optional attribute; if unspecified, the pen selection is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="xy_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The primary brush for the series. This brush is used for the X-Y plane of 3-D objects.
		
							This is an optional attribute; if unspecified, the brush selection is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="xz_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The brush to use for the X-Z planes of 3-D objects.
		
							This is an optional attribute; if unspecified, the brush selection is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="yz_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The brush to use for the Y-Z plane of 3-D objects.
		
							This is an optional attribute; if unspecified, the brush selection is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="marker_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use for the markers. 
		
							This is an optional attribute; if unspecified, the primary series pen will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="marker_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The brush to use for the markers. 
		
							This is an optional attribute; if unspecified, the primary series brush will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="three_d" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether this series should be displayed in 3-D.
		
							This is an optional attribute; if unspecified, the default value is determined by the Graph/@ThreeD attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="stacked" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether this series should be stacked.
		
							This is an optional attribute; if unspecified, the default value is determined by the Graph/@Stacked attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="percent" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether this series should be displayed as percentages.
		
							This is an optional attribute; if unspecified, the default value is determined by the Graph/@Percent attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="rotated" type="xsd:boolean" use="optional"/>
				<xsd:attribute name="marker" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The marker to use for the series data points.
		
							This is an optional attribute; if unspecified, the series will have no markers.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="series_type" type="ESeriesType" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies how the series will be displayed, such as LINE or BAR.
		
							This is an optional attribute; if unspecified, the series type will be identical to the type specified by Graph/@GraphType.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="series_label_type" type="ESeriesLabelType" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies how the series labels will display. 
		
							This is an optional attribute; if unspecified, the default value is NONE.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="axis" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies which axis the series will plot to. 
		
							This is a required attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="format_spec" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							A number format for the series labels.
		
							This is an optional attribute; if unspecified, the number formatting is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="char_style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the character style and/or properties to use for series labels. 
		
							This is an optional attribute; if unspecified, the character style is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.three_d_graph_style">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="perspective" type="Percent" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The perspective percent for the graph.
		
							This is an optional attribute; if unspecified, the default value is 0%.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="elevation" type="Angle" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The elevation angle for the viewpoint.
		
							This is an optional attribute; if unspecified, the default value is 0deg.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="rotation" type="Angle" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The rotation angle around the Z axis for the entire graph.
		
							This is an optional attribute; if unspecified, the default value is 0deg.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="z_margin" type="Percent" use="optional"/>
				<xsd:attribute name="xy_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use for X-Y planes.
		
							This is an optional attribute; if unspecified, the pen is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="xy_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The brush to use for X-Y planes.
		
							This is an optional attribute; if unspecified, the brush is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="xz_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use for X-Z planes.
		
							This is an optional attribute; if unspecified, the pen is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="xz_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The brush to use for X-Z planes.
		
							This is an optional attribute; if unspecified, the brush is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="yz_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use for Y-Z planes.
		
							This is an optional attribute; if unspecified, the pen is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="yz_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The brush to use for Y-Z planes.
		
							This is an optional attribute; if unspecified, the brush is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="hide_back_wall" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the back walls should be hidden.
		
							This is an optional attribute; if unspecified, the default value is false.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="hide_front_wall" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the front walls should be hidden.
		
							This is an optional attribute; if unspecified, the default value is false.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="hide_left_wall" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the left walls should be hidden.
		
							This is an optional attribute; if unspecified, the default value is false.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="hide_right_wall" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the right walls should be hidden.
		
							This is an optional attribute; if unspecified, the default value is false.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="hide_top_wall" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the top walls should be hidden.
		
							This is an optional attribute; if unspecified, the default value is false.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="hide_bottom_wall" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the bottom walls should be hidden.
		
							This is an optional attribute; if unspecified, the default value is false.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="distance" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The viewing distance for calculating perspective.
		
							This is an optional attribute; if unspecified, the default is left to the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.three_d_graph_style_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link ch.three_d_graph_style} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ch.three_d_graph_style" type="ch.three_d_graph_style" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ch.title">
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_primitive">
				<xsd:sequence>
					<xsd:element name="tx.s" type="tx.s" minOccurs="0" maxOccurs="1"/>
				</xsd:sequence>
				<xsd:attribute name="level" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The title level. 1 is the primary title and 2 is the subtitle. All other values are invalid.
		
							This is a required attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="x" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the insertion point, in logical units. When the title is drawn, 
							it's control point will be aligned to the insertion point. The location of the control 
							point is determined by the font_horz_origin and font-vert_origin attributes.
							&lt;p>
							If not specified, the x-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the insertion point, in logical units. When the text is drawn, 
							it's control point will be aligned to the insertion point. The location of the control 
							point is determined by the font_horz_origin and font-vert_origin attributes.
							&lt;p>
							If not specified, the y-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="w" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The width for the text box in logical units. The interpretation of this attribute
							depends on the fit, clip, and wrap attributes.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="h" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The height for the text box in logical units. The interpretation of this attribute
							depends on the fit, clip, and wrap attributes.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="font_vert_origin" type="EFontVertOrigin" use="optional" default="baseline">
					<xsd:annotation>
						<xsd:documentation>
							The vertical location for the control point of the text.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="font_horz_origin" type="EFontHorzOrigin" use="optional" default="left">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal location for the control point of the text.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="db.database">
		<xsd:annotation>
			<xsd:documentation>
				The {@term subdocument} element for a database document. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_document">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="db.table" type="db.table"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="db.table">
		<xsd:annotation>
			<xsd:documentation>
				Defines a {@term sheet} in a database file. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_worksheet">
				<xsd:sequence>
					<xsd:element name="db.field_table" type="db.field_table" minOccurs="1" maxOccurs="1"/>
					<xsd:element name="db.record_table" type="db.record_table" minOccurs="1" maxOccurs="1"/>
				</xsd:sequence>
				<xsd:attribute name="object_id" type="xsd:nonNegativeInteger">
					<xsd:annotation>
						<xsd:documentation>
							A unique identifier for the table referenced by this db.table. May be used as the
							subdocument id in a call to DAOpenSubdocument.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="db.field_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains the list of fields for a database table.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="db.field" type="db.field" minOccurs="1" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="db.record_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains the list of records for a database table.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="db.record" type="db.record" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="db.format_spec_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link db.format_spec} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="db.format_spec" type="db.format_spec" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="db.format_spec">
		<xsd:annotation>
			<xsd:documentation>
				db.format_spec is used to specify the number formatting for a database field. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ss.default_format" type="ss.default_format"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="db.field">
		<xsd:annotation>
			<xsd:documentation>
				Defines the characteristics of a column in a database table. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="field_size" type="xsd:int" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The maximum length of the field, in characters.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="name" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The name of the field.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="format_spec" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The number format for this field. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="db.record">
		<xsd:annotation>
			<xsd:documentation>
				Defines a single record in a database table. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="db.cell" type="db.cell" minOccurs="1" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="db.cell">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				A single cell in a database. 
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_text_element">
				<xsd:attribute name="value" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Contains the formatted form of the cell value
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="float_value" type="xsd:double" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							Contains the unformatted floating point form of the cell value. 
							<p/>
							If the cell is formatted as a date, this value should be interpreted as the number of
							whole and fractional days since the date base (see the date_base attribute of
							{@link ss.workbook}). For example, if the date_base is 2,415,021, corresponding
							to January 1, 1900, then a cell value of 5 would be interpreted as January 6, 1900.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:group name="DrawingPrimitives">
		<xsd:choice>
			<xsd:element name="dr.arc" type="dr.arc"/>
			<xsd:element name="dr.arc_triple" type="dr.arc_triple"/>
			<xsd:element name="dr.bezier" type="dr.bezier"/>
			<xsd:element name="dr.circle" type="dr.circle"/>
			<xsd:element name="dr.draw_figure" type="dr.draw_figure"/>
			<xsd:element name="dr.draw_marker" type="dr.draw_marker"/>
			<xsd:element name="dr.draw_path" type="dr.draw_path"/>
			<xsd:element name="dr.draw_text" type="dr.draw_text"/>
			<xsd:element name="dr.ellipse" type="dr.ellipse"/>
			<xsd:element name="dr.flood_fill" type="dr.flood_fill"/>
			<xsd:element name="dr.group" type="dr.group"/>
			<xsd:element name="dr.line" type="dr.line"/>
			<xsd:element name="dr.move" type="dr.move"/>
			<xsd:element name="dr.polygon" type="dr.polygon"/>
			<xsd:element name="dr.polyline" type="dr.polyline"/>
			<xsd:element name="dr.rect" type="dr.rect"/>
			<xsd:element name="dr.set_pixel" type="dr.set_pixel"/>
			<xsd:element name="ch.graph" type="ch.graph"/>
		</xsd:choice>
	</xsd:group>
	<xsd:complexType abstract="true" name="dr.abstract_primitive">
		<xsd:annotation>
			<xsd:documentation>
  				dr.abstract_primitive is the base class for all simple vector elements.
   		</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="transform" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
		  					The transform to apply to the drawing object.
		  				</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="dr.abstract_drawing_primitive">
		<xsd:annotation>
			<xsd:documentation>
  				dr.abstract_drawing_primitive is the base class for all vector drawing elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_primitive">
				<xsd:attribute name="clip_path" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The clipping path to apply when drawing this primitive
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="clip_path_x" type="LogicalCoordinate" default="0.0">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the x-coordinate of the reference point for the clip path. The origin of the clip 
							path (0,0) is aligned to this point in the drawing for the purposes of clipping a drawing
							object.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="clip_path_y" type="LogicalCoordinate" default="0.0">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the y-coordinate of the reference point for the clip path. The origin of the clip 
							path (0,0) is aligned to this point in the drawing for the purposes of clipping a drawing
							object.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="dr.abstract_styled_primitive">
		<xsd:annotation>
			<xsd:documentation>
				A dr.abstract_primitive for primitives that use style information.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_drawing_primitive">
				<xsd:attribute name="style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The drawing properties or style for the drawing primitive. Any drawing properties that are not
							specified by the referenced style or any of the style's parents will be inherited from the parent 
							of the drawing primitive.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="dr.abstract_transform">
		<xsd:annotation>
			<xsd:documentation>
				An abstract base type for transform elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="dr.affine_transform" type="dr.affine_transform"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.affine_transform">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					<p>
						Allows specification of an affine transform to be applied to a drawing group or drawing object. 
					</p>
					<p>
						When generating the transformation matrix from the dr.affine_transform attribute values, 
						the order that the values are combined is important. Each set of values is used to generate a matrix, 
						and the dot product of those ordered matrices may be used to transform the drawing coordinates.
					</p>
					<p>
						The order the values should be calculated is as follows:
						<ol>
							<li>Adjust for the origin. This is accomplished by simply subtracting O<sub>x</sub> from x and O<sub>y</sub> from y.</li>
							<li>Scale<br>
								<pre><img src="scale.gif"/></pre>
							</li>
							<li>Skew<br>
								<pre><img src="skew.gif"/></pre>
							</li>
							<li>Rotation<br>
								<pre><img src="rotation.gif"/></pre>
							</li>
							<li>Offset<br>
								<pre><img src="offset.gif"/></pre>
							</li>
							<li>Adjust for the origin. This is the reverse of the first step: simply add O<sub>x</sub> to x and O<sub>y</sub> to y.</li>
						</ol>
					</p>
					<p>
						These transforms may be combined into a single transform as follows:<br/>
						<pre><img src="transform.gif"/></pre>
					</p>
					<p>
						A transform element may have another transform element as it's parent. In this case, the child
						transform is applied first, followed by the parent. 
					</p>
					<p>
						For drawing objects within groups, the transform referenced by the drawing object is applied 
						first, followed by the transform referenced by the group.
					</p>
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_transform">
				<xsd:attribute name="origin_x" type="LogicalCoordinate" use="optional" default="0.0">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The x coordinate of the origin for the transform (<i>O<sub>x</sub></i>). 
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="origin_y" type="LogicalCoordinate" use="optional" default="0.0">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The y coordinate of the origin for the transform (<i>O<sub>y</sub></i>). 
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="offset_x" type="LogicalLength" use="optional" default="0.0">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The x offset component of the transform (<i>D<sub>x</sub></i>).
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="offset_y" type="LogicalLength" use="optional" default="0.0">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The y offset component of the transform (<i>D<sub>y</sub></i>).
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="scale_x" type="Percent" use="optional" default="100.0%">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The x scaling component of the transform (<i>S<sub>x</sub></i>).
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="scale_y" type="Percent" use="optional" default="100.0%">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The y scaling component  of the transform (<i>S<sub>y</sub></i>).
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="skew_x" type="Percent" use="optional" default="0.0%">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The x skew component of the transform (<i>K<sub>x</sub></i>).
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="skew_y" type="Percent" use="optional" default="0.0%">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The y skew component of the transform (<i>K<sub>y</sub></i>).
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="rotation" type="Angle" use="optional" default="0.0deg">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The rotation component of the transform (<i>&alpha;</i>).
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.arc">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					An elliptical arc defined by a center point and radii. 
					<p/>
					Arcs may be drawn with the start point of the arc at the current point
					by omitting the cx and cy attributes. In this case, the center point 
					of the arc must be calculated to fit the other parameters of the arc.
					<p/>
					After an arc with a closure type of "open" is drawn, the current point 
					will be equal to the end point of the arc. After an arc with a closure type of 
					"chord" or "pie" is drawn, the current point will be equal to the start
					point of the arc (the end point of the arc closure).<br/>
					<img src="arc.gif"/>
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:attribute name="cx" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the x-coordinate of the center of the arc. This attribute is optional
							(see the element description for details), but if cx is specified, cy must also
							be specified.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="cy" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the y-coordinate of the center of the arc. This attribute is optional
							(see the element description for details), but if cy is specified, cx must also
							be specified.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="rx" type="LogicalLength" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the radius of the arc along the x axis.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="ry" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the radius of the arc along the y axis. If a value is not specified for 
							this attribute, the y radius will be equal to the x radius.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="start_angle" type="Angle" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the start angle for the arc. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="sweep_angle" type="Angle" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the sweep angle of the arc.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="closure_type" type="EArcClosureType" use="optional" default="open">
					<xsd:annotation>
						<xsd:documentation>
							Specifies how the arc will be closed. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.arc_triple">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					A circular arc defined by three points along the arc.
					<p/>
					A dr.arc_triple may be drawn starting at the current point by omitting 
					values for the x1 and y1 attributes. After an arc with a closure type 
					of "open" is drawn, the current point will be equal to the end point 
					of the arc, (x3,y3). After an arc with a closure type of 
					"chord" or "pie" is drawn, the current point will be equal to the start
					point of the arc (the end point of the arc closure).<br/>
					<img src="arc_triple.gif"/>
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:attribute name="x1" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x coordinate of the first point of the arc. If omitted, the x coordinate of the
							current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y1" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y coordinate of the first point of the arc. If omitted, the x coordinate of the
							current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="x2" type="LogicalCoordinate" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The x coordinate of the second point of the arc. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y2" type="LogicalCoordinate" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The y coordinate of the second point of the arc. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="x3" type="LogicalCoordinate" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The x coordinate of the end point of the arc. The x coordinate of the current
							point will be equal to this value after the arc is drawn.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y3" type="LogicalCoordinate" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The y coordinate of the end point of the arc. The y coordinate of the current
							point will be equal to this value after the arc is drawn.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="closure_type" type="EArcClosureType" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies how the arc will be closed. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.canvas">
		<xsd:annotation>
			<xsd:documentation>
				A canvas is an {@term overlay} for a vector drawing or presentation slide. It is 
				conceptually a 2-dimensional transparent plane on which drawing objects may be 
				rendered. A {@link dr.drawing} or {@link pr.slide} may contain multiple canvases; 
				in this case, the dr.canvas elements are drawn successively one on top of another
				in the order they appear on the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_overlay">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="dr.frame" type="dr.frame"/>
					<xsd:element name="dr.figure" type="dr.figure"/>
					<xsd:element name="dr.path" type="dr.path"/>
					<xsd:element name="dr.shape" type="dr.shape"/>
					<xsd:element name="referenced_object" type="referenced_object"/>
					<xsd:group ref="DrawingPrimitives"/>
				</xsd:choice>
				<xsd:attribute name="style" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the default drawing properties or style for drawing objects within the canvas.
							The properties referenced by this attribute must be {@term fully specified}.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="palette" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the palette for this canvas
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.channel">
		<xsd:annotation>
			<xsd:documentation>
				A channel contains a set of samples for a {@link dr.raster}. If a raster contains multiple
				channels, the channels are combined to obtain the complete raster image.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="dr.tile" type="dr.tile" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="sample_model" type="PixelSampleModel" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the format of the samples in this channel.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.circle">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					A circle defined by a center point and radius. 
					<p/>
  					Circles may be drawn with the center point at the current point by 
					omitting values for the cx and cy attributes. The dr.circle element does not
					cause the current point to change.
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:attribute name="cx" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the center of the circle, in logical units.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="cy" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the center of the circle, in logical units.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="r" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The radius of the circle, in logical units.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.drawing">
		<xsd:annotation>
			<xsd:documentation>
				Defines a single vector drawing {@term sheet} in an {@link dr.easel}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_sheet">
				<xsd:sequence>
					<xsd:element name="dr.canvas" type="dr.canvas" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="locator" type="locator" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="back_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the background brush for the drawing. This brush will be used to fill the entire area
							of the drawing before drawing any of the slide contents.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="extents" type="LogicalRectangle" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The rectangle defining the maximum area  available for drawing objects. If this attribute 
							is not specified, the drawing area will not be limited. The value of this attribute may be used 
							in combination with the physical_width and physical_height attributes to map the coordinate space 
							of the drawing from logical units to physical units.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y_is_up" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Specifies how the vertical axis of the drawing's coordinate space is aligned. If the value of
							y_is_up is true, y-coordinates will increase from the bottom to the top of the drawing. Otherwise,
							y-coordinates will increase from the top to the bottom of the drawing.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="x_is_left" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Specifies how the horizontal axis of the drawing's coordinate space is aligned. If the value of
							x_is_left is true, x-coordinates will increase from the right to the left of the drawing. Otherwise,
							x-coordinates will increase from the left to the right of the drawing.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="physical_width" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
		  					The width of the drawing in physical units. The value of this attribute may be used in combination
  							with the extents attribute to map the coordinate space of the drawing from logical units to physical
  							units.
		  				</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="physical_height" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
  							The height of the drawing in physical units. The value of this attribute may be used in combination
    						with the extents attribute to map the coordinate space of the drawing from logical units to physical
    						units.
	    				</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="object_id" type="xsd:nonNegativeInteger">
					<xsd:annotation>
						<xsd:documentation>
							A unique identifier for the drawing referenced by this dr.drawing. May be used as the
							subdocument id in a call to DAOpenSubdocument.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.draw_figure">
		<xsd:annotation>
			<xsd:documentation>
				Causes a {@link dr.figure} to be drawn. Figures may be drawn with the insertion point
				at the current point by omitting the x and y attributes. After a figure is 
				drawn, the current point will be equal to the end point of the last drawing object
				in the figure.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:attribute name="x" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the insertion point, in logical units. When the figure is drawn, 
							it's control point will be aligned to the insertion point. 
							&lt;p>
							If a value is not specified for this attribute, the x coordinate of the current 
							point will be used. After the figure is drawn, the x coordinate of the current
							point will be equal to this value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the insertion point, in logical units. When the figure is drawn,
							it's control point will be aligned to the insertion point.
							&lt;p>
							If a value is not specified for this attribute, the y coordinate of the current 
							point will be used. After the figure is drawn, the y coordinate of the current
							point will be equal to this value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="w" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The width for the figure in logical units. The figure should be scaled as necessary
							to fit within this width. If not specified, the figure's width will not be scaled.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="h" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The height for the figure in logical units. The figure should be scaled as necessary
							to fit within this height. If not specified, the figure's height will not be scaled.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="figure" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The figure to draw. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.draw_marker">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
    			Draws a marker at a specified point. Markers may be drawn with the insertion point
    			at the current point by omitting the x and y attributes. After a marker is 
    			drawn, the current point will be equal to the insertion point, (x,y).
  				<p/>
  				The location of a marker may be affected by a transform, but it's orientation, shape, and
  				size are not. 
  				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:attribute name="x" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the insertion point, in logical units. When the marker is drawn, 
							it's control point will be aligned to the insertion point. 
							&lt;p>
							If a value is not specified for this attribute, the x coordinate of the current 
							point will be used. After the figure is drawn, the x coordinate of the current
							point will be equal to this value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the insertion point, in logical units. When the marker is drawn,
							it's control point will be aligned to the insertion point.
							&lt;p>
							If a value is not specified for this attribute, the y coordinate of the current 
							point will be used. After the figure is drawn, the y coordinate of the current
							point will be equal to this value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="scalable" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the marker should be scaled when the drawing is resized or zoomed. If
							false, the marker will be drawn at it's specified size regardless of the zoom level.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="marker" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The marker to draw.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.draw_path">
		<xsd:annotation>
			<xsd:documentation>
  				Draws a path using an outline pen and/or fill brush. Paths may be drawn with the insertion point
  				at the current point by omitting the x and y attributes. After a path is 
  				drawn, the current point will be equal to the end point of the path as it is drawn.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:attribute name="x" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the insertion point, in logical units. When the path is drawn, 
							it's control point will be aligned to the insertion point. 
							&lt;p>
							If not specified, the x-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the insertion point, in logical units. When the path is drawn,
							it's control point will be aligned to the insertion point.
							&lt;p>
							If not specified, the y-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="w" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The width for the path in logical units. The path should be scaled as necessary
							to fit within this width. If not specified, the path's width will not be scaled.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="h" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The height for the path in logical units. The path should be scaled as necessary
							to fit within this height. If not specified, the path's height will not be scaled.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="path" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The path to draw.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="stroke" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the outline of the path should be drawn with the selected pen.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="fill" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the area of the path should be filled with the selected brush.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.draw_style">
		<xsd:annotation>
			<xsd:documentation>
				A named set of vector drawing object properties.
				&lt;p>
				dr.draw_style elements may be based on other dr.draw_style elements. In this case, properties not stated by 
				a style are inherited from the style it's based on. This is the FlexionDoc implementation of the &quot;Based on&quot; feature 
				supported by many applications. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_style">
				<xsd:attribute name="basedon" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the style that this style is based on. Any properties not stated by this style are
                                                    inherited from the style it is based on. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="back_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the background brush for the drawing object.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="poly_fill_mode" type="EPolyFillMode" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The polygon fill mode for any polygons or paths using the drawing object properties.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use to draw the object outline. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The brush to be used to fill the object.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.draw_style_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all {@link dr.draw_style} elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="dr.draw_style" type="dr.draw_style" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.draw_text">
		<xsd:annotation>
			<xsd:documentation>
				Draws text at a specified point.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="tx.p" type="tx.p"/>
					<xsd:element name="tx.list" type="tx.list"/>
				</xsd:choice>
				<xsd:attribute name="rotation" type="Angle" default="0.0deg">
					<xsd:annotation>
						<xsd:documentation>
							The rotation angle for the entire frame, including contents.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="ref_point" type="LogicalPoint" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the reference point in the drawing for rotating the frame. The
							frame will be rotated around this point according to the rotation attribute.
    					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="border" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the border that should be drawn around the outside of the frame. If a value
							is not specified for the border attribute, the frame will have no border.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="baseline_angle" type="Angle" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The angle of the text relative to horizontal. This angle is measured counterclockwise from 0deg.
		
							This is an optional attribute; if unspecified, the default value is 0deg.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="x" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the insertion point, in logical units. When the text is drawn, 
							it's control point will be aligned to the insertion point. The location of the control 
							point is determined by the font_horz_origin and font-vert_origin attributes.
							&lt;p>
							If not specified, the x-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the insertion point, in logical units. When the text is drawn, 
							it's control point will be aligned to the insertion point. The location of the control 
							point is determined by the font_horz_origin and font-vert_origin attributes.
							&lt;p>
							If not specified, the y-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="w" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The width for the text box in logical units. The interpretation of this attribute
							depends on the fit, clip, and wrap attributes.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="h" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The height for the text box in logical units. The interpretation of this attribute
							depends on the fit, clip, and wrap attributes.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="fit_mode" type="ETextFitMode" use="optional" default="none">
					<xsd:annotation>
						<xsd:documentation>
							Determines how the text is sized to fit within the text box defined by the w and h attributes.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="wrap" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Determines if text is allowed to wrap within the text box defined by the w and h attributes.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="vertical_alignment" type="EVerticalAlignment" default="top">
					<xsd:annotation>
						<xsd:documentation>
							The vertical alignment of the contents of the text box.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="horizontal_alignment" type="EHorizontalAlignment" default="left">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal alignment of the contents of the text box.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="font_vert_origin" type="EFontVertOrigin" use="optional" default="baseline">
					<xsd:annotation>
						<xsd:documentation>
							The vertical location for the control point of the text.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="font_horz_origin" type="EFontHorzOrigin" use="optional" default="left">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal location for the control point of the text.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="update_cur_point" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Controls whether the current point will be set to the end point of the
							text after the text is drawn. If false, the current point will not be
							changed. If true, the current point will be set to the end point of the text.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.easel">
		<xsd:annotation>
			<xsd:documentation>
				The {@term subdocument} element for a single- or multi-page drawing or raster image. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_document">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="dr.drawing" type="dr.drawing"/>
					<xsd:element name="dr.image" type="dr.image"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.ellipse">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
    					Defines an ellipse by a center point and radii.
					&lt;p&gt;
    					An ellipse may be drawn with the center point at the current point by 
						omitting values for the cx and cy attributes. The dr.ellipse element does
						not cause the current point to change.
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:attribute name="cx" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the center of the ellipse. If not specified, the x-coordinate
							of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="cy" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the center of the ellipse. If not specified, the y-coordinate
							of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="rx" type="LogicalLength" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal radius of the ellipse.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="ry" type="LogicalLength" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The vertical radius of the ellipse. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.figure">
		<xsd:annotation>
			<xsd:documentation>
				Defines a figure that may be inserted multiple times at any location in
				the drawing.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="dr.frame" type="dr.frame"/>
					<xsd:element name="dr.figure" type="dr.figure"/>
					<xsd:element name="dr.path" type="dr.path"/>
					<xsd:element name="referenced_object" type="referenced_object"/>
					<xsd:group ref="DrawingPrimitives"/>
				</xsd:choice>
				<xsd:attribute name="style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the default drawing properties or style for drawing objects within the container.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="px" type="LogicalCoordinate" default="0.0">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the x coordinate of the control point within the figure. This point will be aligned
							to the point specified by the x and y attributes of a dr.draw_figure element. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="py" type="LogicalCoordinate" default="0.0">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the y coordinate of the control point within the figure. This point will be aligned
							to the point specified by the x and y attributes of a dr.draw_figure element. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="w" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
		  					Specifies the width of the figure in logical units.
  						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="h" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
		  					Specifies the height of the figure in logical units
    					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="closed" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the figure should be closed. If the value is true, a line segment will 
							be drawn to join the end of the last object in the figure and the beginning of the first object.
		
							This is an optional attribute; if unspecified, the default value is false.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.flood_fill">
		<xsd:annotation>
			<xsd:documentation>
				Fills the area surrounding a point with a color. All of the pixels adjacent to the
				starting point that are the same color as the pixel at the starting point will be
				changed to the new color.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_primitive">
				<xsd:attribute name="x" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the starting point for the fill. If this attribute is not specified, 
							the x-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the starting point for the fill. If this attribute is not specified, 
							the y-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="brush" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
		  					The brush to fill the area with.
  						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.frame">
		<xsd:annotation>
			<xsd:documentation>
				Specifies the location, size, and formatting properties for a text or
				object frame. A frame is a self-contained content object that floats
				over the main document content.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_frame">
				<xsd:choice minOccurs="0" maxOccurs="1">
					<xsd:element name="cropped_object" type="cropped_object"/>
					<xsd:element name="linked_object" type="linked_object"/>
					<xsd:element name="tx.s" type="tx.s"/>
					<xsd:element name="dr.drawing" type="dr.drawing"/>
					<xsd:element name="dr.image" type="dr.image"/>
					<xsd:element name="ch.chart" type="ch.chart"/>
				</xsd:choice>
				<xsd:attribute name="w" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The width of the frame. If not specified, the frame width will be adjusted to fit the frame contents.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="h" type="LogicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The height of the frame. If not specified, the frame height will be adjusted to fit the frame contents.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="x" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the frame.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the frame.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="ref_point" type="LogicalPoint" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the reference point in the drawing for rotating the frame. The
							frame will be rotated around this point according to the rotation attribute.
    					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.group">
		<xsd:annotation>
			<xsd:documentation>
				Used to combine a set of primitive drawing objects together for clipping, transforming, or 
				other purposes. Groups may contain other groups.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="dr.frame" type="dr.frame"/>
					<xsd:element name="dr.figure" type="dr.figure"/>
					<xsd:element name="dr.path" type="dr.path"/>
					<xsd:element name="dr.shape" type="dr.shape"/>
					<xsd:element name="referenced_object" type="referenced_object"/>
					<xsd:group ref="DrawingPrimitives"/>
				</xsd:choice>
				<xsd:attribute name="bbox" type="LogicalRectangle" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The coordinates of a rectangle that completely contains all of the objects in the group.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="name" type="xsd:string" use="optional" default="">
					<xsd:annotation>
						<xsd:documentation>
							A name for the group.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.image">
		<xsd:annotation>
			<xsd:documentation>
				Defines a single raster image {@term sheet} in an {@link dr.easel}. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_sheet">
				<xsd:sequence>
					<xsd:element name="dr.raster" type="dr.raster" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="locator" type="locator" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="w" type="xsd:int" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The width of this image in pixels.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="h" type="xsd:int" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The height of this image in pixels.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="physical_width" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The width of the image in physical units. The value of this attribute may be used in combination
							with the w attribute to map the coordinate space of the image to physical units.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="physical_height" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The height of the image in physical units. The value of this attribute may be used in combination
							with the h attribute to map the coordinate space of the image to physical units.
    					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="object_id" type="xsd:nonNegativeInteger">
					<xsd:annotation>
						<xsd:documentation>
							A unique identifier for the image referenced by this dr.image. May be used as the
							subdocument id in a call to DAOpenSubdocument.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.line">
		<xsd:annotation>
			<xsd:documentation>
				Causes a single line segment to be drawn. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:attribute name="x1" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the starting point of the line. If this attribute is not specified, the
							x-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y1" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the starting point of the line. If this attribute is not specified, the
							y-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="x2" type="LogicalCoordinate" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the end point of the line. After the line is drawn, the x-coordinate
							of the current point will be equal to this value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y2" type="LogicalCoordinate" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the end point of the line. After the line is drawn, the y-coordinate
							of the current point will be equal to this value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.marker">
		<xsd:annotation>
			<xsd:documentation>
				Defines the appearance of a marker. Markers are used by the {@link dr.draw_marker} 
				element to mark a point in a drawing.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:group ref="DrawingPrimitives"/>
				</xsd:choice>
				<xsd:attribute name="upside_down" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the marker should be drawn upside down. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="boxed" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether a square should be drawn around the outside of the marker. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="filled" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the marker should be filled. If the value of this attribute is true, the
							marker should be filled with color of the pen used to draw the marker.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="circled" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether a circle should be drawn around the outside of the marker. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="predefined" type="EPredefinedMarker" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The predefined marker to use.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.marker_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all {@link dr.marker} elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="dr.marker" type="dr.marker" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.move">
		<xsd:annotation>
			<xsd:documentation>
				Causes the current point to be moved to a different position. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_primitive">
				<xsd:attribute name="x" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the new current point. If a value is not specified for
							this attribute, the x-coordinate of the current point is not affected.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the new current point. If a value is not specified for
							this attribute, the y-coordinate of the current point is not affected.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.path">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					A Path is one or more primitive drawing elements that are associated with one another. Adding a 
					Path element to a Drawing does not cause anything to be drawn; rather it creates a path resource 
					that may be referenced by other elements in the Drawing. 
					<p/>
					The control point of a path is the start point of the first drawing object in the path. This point
					will be aligned to the insertion point specified by a {@link dr.draw_path} element.
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="dr.arc" type="dr.arc"/>
					<xsd:element name="dr.arc_triple" type="dr.arc_triple"/>
					<xsd:element name="dr.bezier" type="dr.bezier"/>
					<xsd:element name="dr.circle" type="dr.circle"/>
					<xsd:element name="dr.draw_text" type="dr.draw_text"/>
					<xsd:element name="dr.ellipse" type="dr.ellipse"/>
					<xsd:element name="dr.line" type="dr.line"/>
					<xsd:element name="dr.move" type="dr.move"/>
					<xsd:element name="dr.polygon" type="dr.polygon"/>
					<xsd:element name="dr.polyline" type="dr.polyline"/>
					<xsd:element name="dr.rect" type="dr.rect"/>
					<xsd:element name="dr.path" type="dr.path"/>
				</xsd:choice>
				<xsd:attribute name="transform" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The transform to apply to the contents of the path.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="closed" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the path should be closed. If the value is true, a line segment will 
							be drawn to join the end of the last object in the path and the beginning of the first object.
		
							This is an optional attribute; if unspecified, the default value is false.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.polygon">
		<xsd:annotation>
			<xsd:documentation>
				Defines a multipoint closed figure.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:attribute name="x1" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the starting point of the polygon. If this attribute is not 
							specified, the x-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y1" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the starting point of the polygon. If this attribute is not 
							specified, the y-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="points" type="LogicalPointList" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The additional points defining this polygon. A segment will be drawn from 
							the last point in this list to the starting point of the polygon.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.polyline">
		<xsd:annotation>
			<xsd:documentation>
				Defines a multipoint line.			
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:attribute name="x1" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the starting point of the polyline. If this attribute is not 
							specified, the x-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y1" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the starting point of the polyline. If this attribute is not 
							specified, the y-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="points" type="LogicalPointList" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The additional points defining this polyline
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.raster">
		<xsd:annotation>
			<xsd:documentation>
				A raster is an {@term overlay} for a raster image. A {@link dr.image} may contain multiple 
				dr.raster elements; in this case, the dr.raster elements are drawn successively one on top
				of another in the order they appear on the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_overlay">
				<xsd:sequence>
					<xsd:element name="dr.channel" type="dr.channel" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="transparent_color" type="ConcreteColorValue" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							A color value that should be displayed as transparent whenever it is encountered.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y_is_up" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies whether the pixels of the raster should be drawn top down or bottom up. If the
							value of y_is_up is true, the rows of pixels are ordered in the raster from bottom to top. 
							Otherwise they are ordered from top to bottom.
							&lt;p>
							This attribute also affects the location of the control point of the raster.
							If y_is_up is true, the y attribute specifies the cooridnate of the bottom edge of the 
							raster. Otherwise it specifies the coorinate of the top edge.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="x_is_left" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies whether the pixels of the raster should be drawn left-to-right or right-to-left. If
							the value of x_is_left is true, the pixels in each row are ordered from right to left. Otherwise
							they are ordered from left to right.
							&lt;p>
							This attribute also affects the location of the control point of the raster. If x_is_left is
							true, the x attribute specifies the cooridnate of the right edge of the raster. Otherwise
							it specifies the coorinate of the left edge.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="palette" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the palette for this raster
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.rect">
		<xsd:annotation>
			<xsd:documentation>
				Draws a rectangle or round rectangle.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:attribute name="x1" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the starting corner of the rectangle. If this attribute
							is not specified, the x-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y1" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the starting corner of the rectangle. If this attribute
							is not specified, the y-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="x2" type="LogicalCoordinate" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the ending corner of the rectangle. After the rectangle
							is drawn, the x-coordinate of the current point will equal this value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y2" type="LogicalCoordinate" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the ending corner of the rectangle. After the rectangle
							is drawn, the x-coordinate of the current point will equal this value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="rx" type="LogicalLength" use="optional" default="0">
					<xsd:annotation>
						<xsd:documentation>
							The x-radius for rounded corners. Both rx and ry must be greater than zero for the corners to be rounded.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="ry" type="LogicalLength" use="optional" default="0">
					<xsd:annotation>
						<xsd:documentation>
							The y-radius for rounded corners. Both rx and ry must be greater than zero for the corners to be rounded.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.set_pixel">
		<xsd:annotation>
			<xsd:documentation>
				Sets the pixel at a given location to the specified color.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_primitive">
				<xsd:attribute name="x" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the pixel to set. If this attribute is not specified, the
							x-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the pixel to set. If this attribute is not specified, the
							y-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="color" type="ColorValue" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The color to set the pixel to.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.bezier">
		<xsd:annotation>
			<xsd:documentation>
				Defines a cubic bezier.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:attribute name="x1" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the starting point of the bezier. If this attribute
							is not specified, the x-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y1" type="LogicalCoordinate" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The y-coordinate of the starting point of the bezier. If this attribute
							is not specified, the y-coordinate of the current point will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="closed" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the bezier should be closed. If the value of this attribute
							is true, the starting point of the bezier will be used as an additional 
							point at the end of the bezier.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="points" type="LogicalPointList" use="required">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							Specifies the points defining the bezier. 
							<p/>
							This list contains a series of points, where
							each group of three points defines a single bezier curve. The points for each curve 
							are arranged in the order <code>C1 C2 P</code>, where <code>C1</code> is the control point for 
							the beginning of the curve, <code>C2</code> is the control point at the end of the curve, and <code>P</code> 
							is the endpoint of the curve. After the bezier is drawn, the current point will be 
							equal to the end point of the last bezier curve in the list.
							]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.shape">
		<xsd:annotation>
			<xsd:documentation>
				A dr.shape is similar to a {@link dr.figure}, but it is drawn at the point where it appears
				in the document, rather than having a separate {@link dr.draw_figure} element. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="dr.abstract_styled_primitive">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:group ref="DrawingPrimitives"/>
				</xsd:choice>
				<xsd:attribute name="bbox" type="LogicalRectangle" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The smallest rectangle that completely contains the shape. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="adjustment" type="IntegerList" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							A list of adjustment parameters for the shape handles
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="shape_type" type="EShapeType" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The type of shape to draw
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.tile">
		<xsd:annotation>
			<xsd:documentation>
				Defines a single tile in a raster. A raster may be composed of multiple tiles, each 
				of which defines a portion of the raster.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_text_element">
				<xsd:attribute name="x" type="LogicalCoordinate" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the insertion point, in logical units. When the tile is drawn, 
							it's control point will be aligned to the insertion point. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y" type="LogicalCoordinate" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The x-coordinate of the insertion point, in logical units. When the tile is drawn, 
							it's control point will be aligned to the insertion point. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="w" type="LogicalLength" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the width of this tile in pixels. This should be the number of horizontal pixels actually contained
							in the tile, rather than the number of pixels the tile will span in the final image. For instance, given 
							an image that is 100 pixels wide and a tile with a horizontal_interval of 4, the tile width should 
							be no more than 25.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="h" type="LogicalLength" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the height of this tile in pixels. This should be the number of vertical pixels actually contained
							in the tile, rather than the number of pixels the tile will span in the final image. For instance, given 
							an image that is 100 pixels high and a tile with a vertical_interval of 4, the tile height should 
							be no more than 25.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="x_interval" type="xsd:int" default="0">
					<xsd:annotation>
						<xsd:documentation>
							The number of spacing pixels that should be placed horizontally between each tile pixel when the tile 
							is displayed. This is used for interlacing. A value of 0 indicates that no spacing should be added. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y_interval" type="xsd:int" default="0">
					<xsd:annotation>
						<xsd:documentation>
							The number of spacing pixels that should be placed vertically between each tile pixel when the tile 
							is displayed. This is used for interlacing. A value of 0 indicates that no spacing should be added. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="bytes_per_line" type="xsd:int" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The number of bytes comprising each scanline in the tile. This may be greater than the number of bytes
							that define the pixels if the scanline; in this case, the padding bytes will fall at the end of each
							scanline.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="encoding" type="EEncoding" default="none">
					<xsd:annotation>
						<xsd:documentation>
							The method used to encode the data to text after filtering and compression is applied. Encoding
							is used to insure that the content of the tile is legal XML text. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="compression" type="ECompression" default="none">
					<xsd:annotation>
						<xsd:documentation>
							The method used to compress the data prior to encoding.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="original_length" type="xsd:int" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The size of the data prior to compression and encoding.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="dr.transform_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all transform elements
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="dr.affine_transform" type="dr.affine_transform"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="pr.presentation">
		<xsd:annotation>
			<xsd:documentation>
				The {@term subdocument} element for a presentation document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_document">
				<xsd:sequence minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="pr.slide" type="pr.slide"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="pr.slide">
		<xsd:annotation>
			<xsd:documentation>
				Defines a single {@term sheet} in an {@link pr.presentation}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_sheet">
				<xsd:sequence>
					<xsd:element name="dr.canvas" type="dr.canvas" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="pr.speaker_notes" type="pr.speaker_notes" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="locator" type="locator" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="back_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the background brush for the slide. This brush will be used to fill the entire area
							of the slide before drawing any of the slide contents.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="extents" type="LogicalRectangle" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The rectangle defining the maximum area  available for drawing objects. If this attribute 
							is not specified, the drawing area will not be limited. The value of this attribute may be used 
							in combination with the physical_width and physical_height attributes to map the coordinate space 
							of the slide from logical units to physical units.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="y_is_up" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Specifies how the vertical axis of the slide's coordinate space is aligned. If the value of
							y_is_up is true, y-coordinates will increase from the bottom to the top of the slide. Otherwise,
							y-coordinates will increase from the top to the bottom of the slide.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="x_is_left" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Specifies how the horizontal axis of the slide's coordinate space is aligned. If the value of
							x_is_left is true, x-coordinates will increase from the right to the left of the slide. Otherwise,
							x-coordinates will increase from the left to the right of the slide.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="physical_width" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The width of the slide in physical units. The value of this attribute may be used in combination
							with the extents attribute to map the coordinate space of the slide from logical units to physical
							units.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="physical_height" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The height of the slide in physical units. The value of this attribute may be used in combination
							with the extents attribute to map the coordinate space of the slide from logical units to physical
							units.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="object_id" type="xsd:nonNegativeInteger">
					<xsd:annotation>
						<xsd:documentation>
							A unique identifier for the slide referenced by this pr.slide. May be used as the
							subdocument id in a call to DAOpenSubdocument.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="pr.speaker_notes">
		<xsd:annotation>
			<xsd:documentation>
				The speaker notes for a {@link pr.slide}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_object">
				<xsd:choice>
					<xsd:element name="dr.canvas" type="dr.canvas" minOccurs="1" maxOccurs="1"/>
					<xsd:element name="tx.p" type="tx.p" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="ss.abstract_col">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="index" type="xsd:int" use="required">
					<xsd:annotation>
						<xsd:documentation>
						A 1-based column number for this column
					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="width" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The width of the column. If not specified, the width should be calculated to fit the column contents.
							<p/>
							The width_restriction attribute can affect how this attribute is interpreted.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="width_restriction" type="EValueRestriction" default="exactly" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The restriction on the width of the column. The interpretation of the width attribute depends on 
							this value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="locked" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether this column is locked.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="hidden" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether this column is hidden.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="name" type="xsd:string" default="">
					<xsd:annotation>
						<xsd:documentation>
							The title for this column
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="ss.abstract_format_code">
		<xsd:complexContent>
			<xsd:extension base="abstract_element"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="ss.abstract_format">
		<xsd:annotation>
			<xsd:documentation>
				ss.abstract_format is the abstract base class for a number of specialized format elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ss.format_run" type="ss.format_run" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="scale_factor" type="xsd:float" use="optional" default="1.0">
					<xsd:annotation>
						<xsd:documentation>
							The amount to scale the cell value by before applying formatting. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="ss.abstract_conditional_format">
		<xsd:annotation>
			<xsd:documentation>
				ss.abstract_conditional_format is the abstract base class for a number of specialized conditional format elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_format">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="ss.abstract_row">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="index" type="xsd:int" use="required">
					<xsd:annotation>
						<xsd:documentation>
						A 1-based row number for this row.
					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="height" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The height of the row. If this attribute is not specified, the row height will be set to fit the contents.
							<p/>
							The height_restriction attribute can affect how this attribute is interpreted.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="height_restriction" type="EValueRestriction" default="exactly" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The restriction on the height of the row. The interpretation of the height attribute depends on 
							this value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="locked" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether this row is locked.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="hidden" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether this row is hidden.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.abstract_view_settings" abstract="true">
		<xsd:annotation>
			<xsd:documentation>
				Abstract base class for spreadsheet print and view settings
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="hide_col_header" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the column header should be hidden.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="hide_gridlines" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the cell gridlines should be hidden.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="hide_row_header" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the row header should be hidden.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="ss.abstract_worksheet">
		<xsd:complexContent>
			<xsd:extension base="abstract_sheet">
				<xsd:attribute name="default_view" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The default view to use when the worksheet is first displayed
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.cell">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				A spreadsheet cell. The {@link tx.s} child of the cell, if provided, contains the 
				formatted value of the cell. The float_value attribute, if provided, contains the unformatted
				floating point value of the cell.
				<p/>
				This example demonstrates how the col_span and row_span attributes should be interpreted. Cell
				A1 has a col_span of "3", indicating that it is spread across three columns. Cell
				B2 has a row_span of "2", indicating that it is spread across two rows:
				<img src="cellspan.gif"/>
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.r" type="tx.r" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="col_span" type="xsd:positiveInteger" default="1">
					<xsd:annotation>
						<xsd:documentation>
						Indicates the number of columns wide this cell is. If the value of this attribute
						is greater than 1, the cell is expanded into the cells to the right. 
					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="row_span" type="xsd:positiveInteger" default="1">
					<xsd:annotation>
						<xsd:documentation>
							Indicates the number of rows high this cell is. If the value of this attribute
							is greater than 1, the cell is expanded into the cells below. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="col_count" type="xsd:positiveInteger" default="1">
					<xsd:annotation>
						<xsd:documentation>
							Indicates the number of times this cell should be repeated in the current row. 
							A value of greater than 1 will cause the cell to be repeated immediately to the
							right of the first instance. All cell attributes, including column and row span,
							will be duplicated in the repeated cells.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="row_count" type="xsd:positiveInteger" default="1">
					<xsd:annotation>
						<xsd:documentation>
							Indicates the number of times this cell should be repeated in the current column.
							A value of greater than 1 will cause the cell to be repeated immediately below
							the first instance. All cell attributes, including column and row span,
							will be duplicated in the repeated cells.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="float_value" type="xsd:double" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							Contains the unformatted floating point form of the cell value. 
							<p/>
							If the cell is formatted as a date, this value should be interpreted as the number of
							whole and fractional days since the date base (see the date_base attribute of
							{@link ss.workbook}). For example, if the date_base is 2,415,021, corresponding
							to January 1, 1900, then a cell value of 5 would be interpreted as January 6, 1900.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="style" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The style for the cell. This style is required to be {@term fully resolvable}.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="row" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							References the row for this cell. In a {@link ss.worksheet}, this attribute will reference
							a {@link ss.data_row}. In a {@link ss.col_major_worksheet}, this attribute will reference
							a {@link ss.row}. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="col" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							References the column for this cell. In a {@link ss.worksheet}, this attribute will reference
							a {@link ss.col}. In a {@link ss.col_major_worksheet}, this attribute will reference
							a {@link ss.data_col}. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.cell_style">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				A named set of spreadsheet cell properties.
				<p/>
				ss.cell_style elements may be based on other ss.cell_style elements. In this case, properties not stated by 
				a style are inherited from the style it's based on. This is the FlexionDoc implementation of the "Based on" feature 
				supported by many applications. 
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_style">
				<xsd:attribute name="basedon" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the style that this style is based on. Any properties not stated by this style are
                                                    inherited from the style it is based on. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="char_style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							References the character properties for the cell. The style referenced by this attribute must be 
							{@term fully resolvable}.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="locked" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the cell contents are locked. Locked cells may not be edited if the worksheet is protected.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="horizontal_indent" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal indent for the cell contents. The horizontal indent is applied at the 
							left edge of the cell, regardless of the horizontal alignment. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="wrap_text" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether text inside the cell should be word wrapped to fit the cell. If the value
							of this attribute is true, the shrink_to_fit attribute should be ignored.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="shrink_to_fit" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the contents of the cell may be reduced in size to fit within 
							the confines of the cell. This attribute will be ignored if the value of the 
							wrap_text attribute is true.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="baseline_angle" type="Angle" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The angle of the baseline for the text in the cell. This angle is measured 
							counterclockwise from horizontal. Normal horizontal text has a baseline angle of 0deg.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="text_direction" type="ETextDirection" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The direction that the text in the cell will flow. The normal text direction is &quot;ltr&quot; (left to right). 
							A text direction of &quot;ttb&quot; (top to bottom) will not change the orientation of the characters specified
							by the baseline_angle attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="border" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							References the border to draw around the cell. If a value isn't specified for this attribute,
							the cell will have no border.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="format_spec" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The number format to use for the cell. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="back_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The fill to use for the cell background. The cell contents are drawn on top of the fill.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="vertical_alignment" type="EVerticalAlignment" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The vertical alignment for the cell contents. If the cell has a row_span of greater than 1, the
							vertical alignment applies across the total height of the spanned cells. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="horizontal_alignment" type="EHorizontalAlignment" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The horizontal alignment for the cell contents. If the cell has a col_span of greater than 1, the
							horizontal alignment applies across the total width of the spanned cells. 
							<p/>
							If a nonzero horizontal_indent is specified, it is subtracted from the total horizontal width
							before alignment is calculated. 
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="merge_alignment" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If true, the contents of the cell will be spanned across all empty cells to the right that
							have a merge_alignment attribute of &quot;true&quot; and the same horizontal_alignment as
							this cell.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.cell_style_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all {@link ss.cell_style} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ss.cell_style" type="ss.cell_style" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.col">
		<xsd:annotation>
			<xsd:documentation>
				Defines a column in an {@link ss.worksheet}. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_col"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.cols">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the columns in an {@link ss.worksheet}. It is recommended, but 
				not required, that the {@link ss.col} elements under this element be in order
				by index. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ss.col" type="ss.col" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.col_major_worksheet">
		<xsd:annotation>
			<xsd:documentation>
				Defines a {@term sheet} in a spreadsheet file. The cells in an ss.col_major_worksheet are contained in 
				columns (normally, in a {@link ss.worksheet}, cells are contained in rows).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_worksheet">
				<xsd:sequence>
					<xsd:element name="ss.data_cols" type="ss.data_cols"/>
					<xsd:element name="ss.rows" type="ss.rows"/>
					<xsd:element name="ss.view_table" type="ss.view_table" minOccurs="0"/>
					<xsd:element name="ss.frame_table" type="ss.frame_table" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="object_id" type="xsd:nonNegativeInteger">
					<xsd:annotation>
						<xsd:documentation>
							A unique identifier for the worksheet referenced by this ss.col_major_worksheet. May be used as the
							subdocument id in a call to DAOpenSubdocument.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.compare_format_condition">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				A conditional formatting condition that applies a format based on a stated relationship 
				between two values. For instance, an ss.compare_format_condition may turn a cell's 
				text red if it's value is less than zero.
				<p/>
				If the comparison specified by the attributes evaluates to TRUE, the formatting specified
				by the children of the ss.compare_format_condition will be used. 
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_conditional_format">
				<xsd:attribute name="operand_a" type="SpreadsheetCellOrValue" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The first operand for the comparison. This attribute is used by all of the operators.					
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="operator" type="ERelationalOperator" use="required">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
								The comparison to make between the cell value and the two operands. The format condition 
								will evaluate to TRUE based on the operator as follows:
		
								<ul>
									<li><b>between</b>:<br/><code>operand_a <= CellValue <= operand_b</code></li>
									<li><b>not_between</b>:<br/><code>CellValue <  operand_a <i>or</i> CellValue > operand_b</code></li>
									<li><b>equal</b>:<br/><code>CellValue =  operand_a</code></li>
									<li><b>not_equal</b>:<br/><code>CellValue != operand_a</code></li>
									<li><b>greater</b>:<br/><code>CellValue >  operand_a</code></li>
									<li><b>less</b>:<br/><code>CellValue <  operand_a</code></li>
									<li><b>greater_equal</b>:<br/><code>CellValue >= operand_a</code></li>
									<li><b>less_equal</b>:<br/><code>CellValue <= operand_a</code></li>
								</ul>
							]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="operand_b" type="SpreadsheetCellOrValue" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The second operand for the comparison. This attribute is only used by 
							the <b>between</b> and <b>not_between</b> operators. It will be ignored
							by the other operators.
							]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.data_col">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Represents a single column in a {@link ss.col_major_worksheet}. The {@link ss.cell}
				elements in an ss.col_major_worksheet are children of the ss.data_col elements.
				<p/>
				It is recommended that the cells within an ss.data_col be arranged in order, but this 
				is not required. Each cell in an ss.data_col references it's row and column separately, so
				it is a requirement that all of the cells under an ss.data_col reference that ss.data_col 
				in their col attribute.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_col">
				<xsd:sequence>
					<xsd:element name="ss.cell" type="ss.cell" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.data_cols">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the columns in a {@link ss.col_major_worksheet}. It is recommended, but 
				not required, that the {@link ss.data_col} elements under this element be in order
				by index. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ss.data_col" type="ss.data_col" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.data_row">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Represents a single row in a {@link ss.worksheet}. The {@link ss.cell}
				elements in an ss.worksheet are children of the ss.data_row elements.
				<p/>
				It is recommended that the cells within an ss.data_row be arranged in order, but this is not required. 
				Each cell in an ss.data_row references it's row and column separately, so it is a requirement that all
				of the cells under an ss.data_row reference that ss.data_row in their row attribute.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_row">
				<xsd:sequence>
					<xsd:element name="ss.cell" type="ss.cell" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.data_rows">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the rows in a {@link ss.worksheet}. It is recommended, but 
				not required, that the {@link ss.data_row} elements under this element be in order
				by index. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ss.data_row" type="ss.data_row" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.default_format">
		<xsd:annotation>
			<xsd:documentation/>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_format"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.date_format_code">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					<p>
						ss.date_format_code specifies a format string to use when displaying dates. An ss.date_format_code 
						element has a format attribute which may contain one or more tokens representing portions of the date. 
						If a format contains multiple ss.date_format_code elements, each may independantly display 
						the date or portions of the date.
					</p>
					<p>
						The symbols that make up a date format code are as follows:
					</p>
					<table width="100%" class="doctable">
						<tr>
							<th class="doctable">Symbol</th>
							<th class="doctable">Description</th>
						</tr>
						<tr>
							<td class="doctable"><code>d</code></td>
							<td class="doctable">Insert day of month (1-31)</td>
						</tr>
						<tr>
							<td class="doctable"><code>dd</code></td>
							<td class="doctable">Insert day of month (01-31)</td>
						</tr>
						<tr>
							<td class="doctable"><code>DD</code></td>
							<td class="doctable">Insert day of week name, abbreviated to two characters (Su-Sa).</td>
						</tr>
						<tr>
							<td class="doctable"><code>DDD</code></td>
							<td class="doctable">Insert day of week name, abbreviated to three characters (Sun-Sat).</td>
						</tr>
						<tr>
							<td class="doctable"><code>DDDD</code></td>
							<td class="doctable">Insert full day of week name (Sunday-Saturday).</td>
						</tr>
						<tr>
							<td class="doctable"><code>m</code></td>
							<td class="doctable">Insert month of year (1-12).</td>
						</tr>
						<tr>
							<td class="doctable"><code>mm</code></td>
							<td class="doctable">Insert month of year (01-12).</td>
						</tr>
						<tr>
							<td class="doctable"><code>M</code></td>
							<td class="doctable">Insert month name, abbreviated to one character (J-D).</td>
						</tr>
						<tr>
							<td class="doctable"><code>MMM</code></td>
							<td class="doctable">Insert month name, abbreviated to three characters (Jan-Dec).</td>
						</tr>
						<tr>
							<td class="doctable"><code>MMMM</code></td>
							<td class="doctable">Insert full month name (January-December).</td>
						</tr>
						<tr>
							<td class="doctable"><code>yy</code></td>
							<td class="doctable">Insert two digit year number (00-99).</td>
						</tr>
						<tr>
							<td class="doctable"><code>yyyy</code></td>
							<td class="doctable">Insert four digit year number (0000-9999).</td>
						</tr>
						<tr>
							<td class="doctable"><code>[LongDate]</code></td>
							<td class="doctable">Insert the date using the system's long date format</td>
						</tr>
						<tr>
							<td class="doctable"><code>[ShortDate]</code></td>
							<td class="doctable">Insert the date using the system's short date format</td>
						</tr>
						<tr>
							<td class="doctable"><code>[Quarter]</code></td>
							<td class="doctable">Insert the date's quarter (1-4). The four quarters 
								of a year are as follows:<br>
								January through March correspond to quarter 1.<br>
								April through June correspond to quarter 2.<br>
								July through September correspond to quarter 3.<br>
								October through December correspond to quarter 4.</td>
						</tr>
						<tr>
							<td class="doctable"><code>[Half]</code></td>
							<td class="doctable">Insert the date's half (1-2). The two halves
								of a year are as follows:<br>
								January through June correspond to half 1.<br>
								July through December correspond to half 2.</td>
						</tr>
						<tr>
							<td class="doctable"><code>[DS]</code></td>
							<td class="doctable">Insert the system date separator.</td>
						</tr>
						<tr>
							<td class="doctable"><code>/</code></td>
							<td class="doctable">Insert a virgule (forward slash).</td>
						</tr>
						<tr>
							<td class="doctable"><code>,</code></td>
							<td class="doctable">Insert a comma.</td>
						</tr>
						<tr>
							<td class="doctable"><code>.</code></td>
							<td class="doctable">Insert a period.</td>
						</tr>
						<tr>
							<td class="doctable"><code>-</code></td>
							<td class="doctable">Insert a dash.</td>
						</tr>
					</table>
					<p>
						Additionally, the following characters may safely be included in a date format code string:
						<ul>
							<li>space (Unicode 0x0020)</li>
							<li>tab (Unicode 0x0009)</li>
						</ul>
						They will be included directly in the formatted date. To insert any other characters in 
						the format, multiple ss.date_format_code elements must be used, with text between.
					</p>
					<h3 class="subheadtext">Examples</h3>
					Below is a table depicting how the date 8/5/1999 would be displayed using some sample date formats. 
					<table width="100%" class="doctable">
						<tr>
							<th class="doctable">Format</th>
							<th class="doctable">Result</th>
						</tr>
						<tr>
							<td class="doctable"><code>m/d/yy</code></td>
							<td class="doctable">8/5/99</td>
						</tr>
						<tr>
							<td class="doctable"><code>m-d</code></td>
							<td class="doctable">8-5</td>
						</tr>
						<tr>
							<td class="doctable"><code>d-MMM-yy</code></td>
							<td class="doctable">5-Aug-99</td>
						</tr>
						<tr>
							<td class="doctable"><code>DDDD, MMMM d, yyyy</code></td>
							<td class="doctable">Thursday, August 5, 1999</td>
						</tr>
						<tr>
							<td class="doctable"><code>mm/dd/yy</code></td>
							<td class="doctable">08/05/99</td>
						</tr>
						<tr>
							<td class="doctable"><code>dd MMM yyyy</code></td>
							<td class="doctable">05 Aug 1999</td>
						</tr>
					</table>
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_format_code">
				<xsd:attribute name="format" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Contains a string of format codes specifying how the date should be displayed.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.fill_format_code">
		<xsd:annotation>
			<xsd:documentation>
				Specifies a text string for filling a cell.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_format_code">
				<xsd:attribute name="text" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The text to repeat. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="repeat_to_fill" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							If true, the text will be repeated as many times as necessary to fill the remaining width of 
							the cell. Otherwise, the text will be repeated a number of times equal to the integral value 
							of the cell.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.format_spec">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				ss.format_spec is used to specify the number formatting for a cell. The number formatting
				specified by an ss.format_spec may be richly formatted, or may inherit character formatting
				from the cell.
				<p/>
				Conditional formatting may be used to change a spreadsheet cell's apperance based on some condition 
				or set of conditions. An ss.format_spec element may have one or more format condition children that 
				are processed in order; the cell properties from the first format condition to succeed  will be used to 
				format the cell. If none of the format conditions succeed, the {@link ss.default_format} is used.
				]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ss.default_format" type="ss.default_format"/>
					<xsd:choice minOccurs="0" maxOccurs="unbounded">
						<xsd:element name="ss.compare_format_condition" type="ss.compare_format_condition"/>
						<xsd:element name="ss.value_format_condition" type="ss.value_format_condition"/>
					</xsd:choice>
				</xsd:sequence>
				<xsd:attribute name="name" type="xsd:string" default="">
					<xsd:annotation>
						<xsd:documentation>
							The name of this format_spec.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.format_run">
		<xsd:annotation>
			<xsd:documentation>
				Similar to the {@link tx.r} element. Represents a run inside an {@link ss.format_spec}, defined as a span of 
				text with a single set of character properties. Runs may contain other content elements intermixed with text.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="alt" type="alt"/>
					<xsd:element name="tx.text" type="tx.text"/>
					<xsd:element name="tx.utext" type="tx.utext"/>
					<xsd:element name="tx.schar" type="tx.schar"/>
					<xsd:element name="ss.date_format_code" type="ss.date_format_code"/>
					<xsd:element name="ss.fill_format_code" type="ss.fill_format_code"/>
					<xsd:element name="ss.number_format_code" type="ss.number_format_code"/>
					<xsd:element name="ss.time_format_code" type="ss.time_format_code"/>
				</xsd:choice>
				<xsd:attribute ref="xml:space"/>
				<xsd:attribute name="style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							References the character properties for the format spec run. If a value is not specified for this
							attribute, or if the referenced style is not {@term fully specified}, the unspecified character properties
							will be inherited from the cell.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.format_spec_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link ss.format_spec} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ss.format_spec" type="ss.format_spec" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.frame">
		<xsd:annotation>
			<xsd:documentation>
				Specifies the location, size, and formatting properties for a text or
				object frame. A frame is a self-contained content object that floats
				over the main document content.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_frame">
				<xsd:choice>
					<xsd:element name="cropped_object" type="cropped_object"/>
					<xsd:element name="linked_object" type="linked_object"/>
					<xsd:element name="tx.s" type="tx.s"/>
					<xsd:element name="dr.drawing" type="dr.drawing"/>
					<xsd:element name="dr.image" type="dr.image"/>
					<xsd:element name="ch.chart" type="ch.chart"/>
				</xsd:choice>
				<xsd:attribute name="width" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The width of the frame. If not specified, the width of the frame will be determined by the width
							of it's contents.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="height" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The height of the frame. If not specified, the height of the frame will be determined by the height
							of it's contents.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="top_left_cell" type="SpreadsheetCellReference" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The cell to be used for positioning the top left corner of the frame. The upper left corner of
							the frame will be placed at a point derived from the top_left_cell, left_offset, and
							top_offset attributes.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="bottom_right_cell" type="SpreadsheetCellReference" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The cell to be used for positioning the bottom right corner of the frame. The bottom right corner of
							the frame will be placed at a point derived from the bottom_right_cell, right_offset, and
							bottom_offset attributes. If a value is not specified for this attribute, the size of the frame 
							will be determined by the frame contents.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="left_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal offset from the top left cell for positioning the left edge of the frame. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="top_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The vertical offset from the top left cell for positioning the top edge of the frame. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="right_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal offset from the bottom left cell for positioning the right edge of the frame. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="bottom_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The vertical offset from the bottom right cell for positioning the bottom edge of the frame. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.frame_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link ss.frame} elements in a {@link ss.worksheet} or {@link ss.col_major_worksheet}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ss.frame" type="ss.frame" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.number_format_code">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					<p>
					ss.number_format_code specifies a format string to use when displaying floating point numbers. An 
					ss.number_format_code element has a format attribute which may contain one or more tokens 
					representing portions of the number. If a number format contains multiple ss.number_format_code
					elements, the formats are logically combined to format the number, then the results are separated 
					for display.
					</p>
					<p>
					The symbols that make up a number format code are as follows:
					</p>
					<table width="100%" class="doctable">
						<tr>
							<th class="doctable">Symbol</th>
							<th class="doctable">Description</th>
						</tr>
						<tr>
							<td class="doctable"><code>0</code></td>
							<td class="doctable">Display a single digit. Insignificant zeros are displayed.</td>
						</tr>
						<tr>
							<td class="doctable"><code>#</code></td>
							<td class="doctable">Display a single significant digit. Insignificant zeros are not displayed.</td>
						</tr>
						<tr>
							<td class="doctable"><code>?</code></td>
							<td class="doctable">Display a single significant digit. Insignificant zeros are replaced by spaces.</td>
						</tr>
						<tr>
							<td class="doctable"><code>+</code></td>
							<td class="doctable">Show positive or negative sign at this location.</td>
						</tr>
						<tr>
							<td class="doctable"><code>-</code></td>
							<td class="doctable">Show negative sign at this location, omit positive sign.</td>
						</tr>
						<tr>
							<td class="doctable"><code>(, )</code></td>
							<td class="doctable">Use parenthesis for negative numbers instead of negative sign.</td>
						</tr>
						<tr>
							<td class="doctable"><code>.</code></td>
							<td class="doctable">Insert system decimal separator.</td>
						</tr>
						<tr>
							<td class="doctable"><code>@</code></td>
							<td class="doctable">Place text at this location</td>
						</tr>
						<tr>
							<td class="doctable"><code>$</code></td>
							<td class="doctable">Insert system currency symbol</td>
						</tr>
						<tr>
							<td class="doctable"><code>,</code></td>
							<td class="doctable">Insert system grouping separator</td>
						</tr>
						<tr>
							<td class="doctable"><code>%</code></td>
							<td class="doctable">Format number as a percentage, inserting the percent sign at the location of the % format code</td>
						</tr>
						<tr>
							<td class="doctable"><code>E</code></td>
							<td class="doctable">Format number in scientific notation, with an uppercase 'E', showing both positive and 
							negative exponent signs.</td>
						</tr>
						<tr>
							<td class="doctable"><code>e</code></td>
							<td class="doctable">Format number in scientific notation, with a lowercase 'e', showing both positive and 
							negative exponent signs.</td>
						</tr>
						<tr>
							<td class="doctable"><code>[E-]</code></td>
							<td class="doctable">Format number in scientific notation, with an uppercase 'E', showing negative exponent sign 
							but not positive.</td>
						</tr>
						<tr>
							<td class="doctable"><code>[e-]</code></td>
							<td class="doctable">Format number in scientific notation, with a lowercase 'e', showing negative exponent sign 
							but not positive.</td>
						</tr>
						<tr>
							<td class="doctable"><code>[Boolean]</code></td>
							<td class="doctable">Display zero values as 'false', nonzero values as 'true'</td>
						</tr>
						<tr>
							<td class="doctable"><code>[General]</code></td>
							<td class="doctable">Generic number formatting</td>
						</tr>
						<tr>
							<td class="doctable"><code>[LeftBar]</code></td>
							<td class="doctable">Display left aligned magnitude bar</td>
						</tr>
						<tr>
							<td class="doctable"><code>[CenterBar]</code></td>
							<td class="doctable">Display center aligned magnitude bar</td>
						</tr>
						<tr>
							<td class="doctable"><code>[RightBar]</code></td>
							<td class="doctable">Display right aligned magnitude bar</td>
						</tr>
					</table>
					<p>
						Additionally, the following characters may safely be included in a number format code string:
						<ul>
							<li>space (Unicode 0x0020)</li>
							<li>tab (Unicode 0x0009)</li>
						</ul>
						They will be included directly in the formatted number. To insert any other characters in 
						the format, multiple ss.number_format_code elements must be used, with text between.
					</p>
					<h3 class="subheadtext">Examples</h3>
					<p>
						Below is a table depicting how the numbers 12300.004 and -12300.004 would be displayed using some sample
						number formats.
					</p>
					<table width="100%" class="doctable">
						<tr>
							<th class="doctable">Format</th>
							<th class="doctable">12300.004</th>
							<th class="doctable">-12300.004</th>
						</tr>
						<tr>
							<td class="doctable"><code>0</code></td>
							<td class="doctable">12300</td>
							<td class="doctable">-12300</td>
						</tr>
						<tr>
							<td class="doctable"><code>0.00</code></td>
							<td class="doctable">12300.00</td>
							<td class="doctable">-12300.00</td>
						</tr>
						<tr>
							<td class="doctable"><code>#,##0</code></td>
							<td class="doctable">12,300</td>
							<td class="doctable">-12,300</td>
						</tr>
						<tr>
							<td class="doctable"><code>#,##0.00</code></td>
							<td class="doctable">12,300.00</td>
							<td class="doctable">-12,300.00</td>
						</tr>
						<tr>
							<td class="doctable"><code>#,##0+</code></td>
							<td class="doctable">12,300+</td>
							<td class="doctable">12,300-</td>
						</tr>
						<tr>
							<td class="doctable"><code>#,##0-</code></td>
							<td class="doctable">12,300</td>
							<td class="doctable">12,300-</td>
						</tr>
						<tr>
							<td class="doctable"><code>(#,##0)</code></td>
							<td class="doctable">12,300</td>
							<td class="doctable">(12,300)</td>
						</tr>
						<tr>
							<td class="doctable"><code>#,##0%</code></td>
							<td class="doctable">1,230,000%</td>
							<td class="doctable">-1,230,000%</td>
						</tr>
						<tr>
							<td class="doctable"><code>#,##0.0##,#E#00</code></td>
							<td class="doctable">1.230,004E+04</td>
							<td class="doctable">-1.230,004E+04</td>
						</tr>
						<tr>
							<td class="doctable"><code>#,##0.0##,#[E-]#00</code></td>
							<td class="doctable">1.230,004E04</td>
							<td class="doctable">-1.230,004E04</td>
						</tr>
						<tr>
							<td class="doctable"><code>[Boolean]</code></td>
							<td class="doctable">true</td>
							<td class="doctable">true</td>
						</tr>
					</table>
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_format_code">
				<xsd:attribute name="format" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Contains a string of format codes specifying how the number should be displayed.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.range">
		<xsd:annotation>
			<xsd:documentation>
				A collection of three-dimensional rectangular spreadsheet ranges. These ranges are combined as a union 
				to obtain the final compound range.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.row">
		<xsd:annotation>
			<xsd:documentation>
				Defines a row in a {@link ss.col_major_worksheet}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_row"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.rows">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the rows in a {@link ss.col_major_worksheet}. It is recommended, but 
				not required, that the {@link ss.row} elements under this element be in order
				by index. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ss.row" type="ss.row" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.time_format_code">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					ss.time_format_code specifies a format string to use when displaying times. A single ss.time_format_code 
					element contains a string which may contain one or more tokens representing portions of the time. 
					If a format contains multiple ss.time_format_code elements, each may independantly display the 
					time or portions of the time.
					<p/>
					The symbols that make up a time format code are as follows:
					<table width="100%" class="doctable">
						<tr>
							<th class="doctable">Symbol</th>
							<th class="doctable">Description</th>
						</tr>
						<tr>
							<td class="doctable"><code>H</code></td>
							<td class="doctable">Insert hour in 24-hour format (0-23)</td>
						</tr>
						<tr>
							<td class="doctable"><code>HH</code></td>
							<td class="doctable">Insert two digit hour in 24-hour format (00-23)</td>
						</tr>
						<tr>
							<td class="doctable"><code>h</code></td>
							<td class="doctable">Insert hour in 12-hour format (1-12)</td>
						</tr>
						<tr>
							<td class="doctable"><code>hh</code></td>
							<td class="doctable">Insert two digit hour in 12-hour format (01-12)</td>
						</tr>
						<tr>
							<td class="doctable"><code>m</code></td>
							<td class="doctable">Insert minute (0-59)</td>
						</tr>
						<tr>
							<td class="doctable"><code>mm</code></td>
							<td class="doctable">Insert minute (00-59)</td>
						</tr>
						<tr>
							<td class="doctable"><code>s</code></td>
							<td class="doctable">Insert second (0-59)</td>
						</tr>
						<tr>
							<td class="doctable"><code>ss</code></td>
							<td class="doctable">Insert second (00-59)</td>
						</tr>
						<tr>
							<td class="doctable"><code>[.h]</code></td>
							<td class="doctable">Insert fractional hour</td>
						</tr>
						<tr>
							<td class="doctable"><code>[.m]</code></td>
							<td class="doctable">Insert fractional minute</td>
						</tr>
						<tr>
							<td class="doctable"><code>[.s]</code></td>
							<td class="doctable">Insert fractional second</td>
						</tr>
						<tr>
							<td class="doctable"><code>[+h]</code></td>
							<td class="doctable">Insert elapsed hours</td>
						</tr>
						<tr>
							<td class="doctable"><code>[+m]</code></td>
							<td class="doctable">Insert elapsed minutes</td>
						</tr>
						<tr>
							<td class="doctable"><code>[+s]</code></td>
							<td class="doctable">Insert elapsed seconds</td>
						</tr>
						<tr>
							<td class="doctable"><code>AM</code></td>
							<td class="doctable">Insert AM or PM</td>
						</tr>
						<tr>
							<td class="doctable"><code>am</code></td>
							<td class="doctable">Insert am or pm</td>
						</tr>
						<tr>
							<td class="doctable"><code>A</code></td>
							<td class="doctable">Insert A or P</td>
						</tr>
						<tr>
							<td class="doctable"><code>a</code></td>
							<td class="doctable">Insert a or p</td>
						</tr>
						<tr>
							<td class="doctable"><code>[TS]</code></td>
							<td class="doctable">Insert the system time separator</td>
						</tr>
						<tr>
							<td class="doctable"><code>:</code></td>
							<td class="doctable">Insert a colon</td>
						</tr>
						<tr>
							<td class="doctable"><code>,</code></td>
							<td class="doctable">Insert a comma.</td>
						</tr>
						<tr>
							<td class="doctable"><code>.</code></td>
							<td class="doctable">Insert a period.</td>
						</tr>
						<tr>
							<td class="doctable"><code>-</code></td>
							<td class="doctable">Insert a dash.</td>
						</tr>
					</table>
					<p>
						Additionally, the following characters may safely be included in a time format code string:
						<ul>
							<li>space (Unicode 0x0020)</li>
							<li>tab (Unicode 0x0009)</li>
						</ul>
						They will be included directly in the formatted date. To insert any other characters in 
						the format, multiple ss.time_format_code elements must be used, with text between.
					</p>
					<h3 class="subheadtext">Examples</h3>
					Below is a table depicting how the time 6:45 pm would be displayed using some sample time formats. 
					<table width="100%" class="doctable">
						<tr>
							<th class="doctable">Format</th>
							<th class="doctable">Result</th>
						</tr>
						<tr>
							<td class="doctable"><code>h:mm am</code></td>
							<td class="doctable">6:45 pm</td>
						</tr>
						<tr>
							<td class="doctable"><code>H:mm:ss</code></td>
							<td class="doctable">18:45:00</td>
						</tr>
						<tr>
							<td class="doctable"><code>H.[.h]</code></td>
							<td class="doctable">18.75</td>
						</tr>
					</table>
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_format_code">
				<xsd:attribute name="format" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
						Contains a string of format codes specifying how the time should be displayed.
					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.value_format_condition">
		<xsd:annotation>
			<xsd:documentation>
				ValueFormatCondition is a conditional formatting condition that applies a format based on whether 
				a cell value evaluates to TRUE, FALSE, ERROR or EMPTY. The formatting specified by the condition 
				is applied if the value matches the ValueFormatCondition type.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_conditional_format">
				<xsd:attribute name="type" type="EFormatConditionType" use="required">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
								The format condition type. This determines which cell values will cause the format condition to evaluate 
								to TRUE. The format condition will evaluate to TRUE based on the type as follows:
								<ul>
									<li><b>true</b>:<br/><code>CellValue != 0</code></li>
									<li><b>false</b>:<br/><code>CellValue = 0</code></li>
									<li><b>error</b>:<br/><code>Cell has an error</code></li>
									<li><b>empty</b>:<br/><code>Cell value is empty</code></li>
								</ul>
							]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.view">
		<xsd:annotation>
			<xsd:documentation>
				ss.view provides a means of altering the overall display of a worksheet without affecting it's 
				contents. This allows user selection from a set of named &quot;views&quot; of the same data. For 
				instance, one view may show month-to-month detail, and another view may show a collapsed view with only 
				yearly totals.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ss.view_props" type="ss.view_props" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="hidden_cols" type="IntegerList" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							A set of columns that should not be displayed. 
		
							This is an optional attribute; if unspecified, all columns should be displayed.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="hidden_rows" type="IntegerList" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							A set of rows that should not be displayed. 
		
							This is an optional attribute; if unspecified, all rows should be displayed.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="name" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
						The name for the custom view.
					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.view_props">
		<xsd:annotation>
			<xsd:documentation>
				Specifies how a worksheet should appear when viewed onscreen. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_view_settings">
				<xsd:attribute name="active_cell" type="SpreadsheetCellReference" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The cell that currently has the focus.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="freeze_above_row" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The first nonfrozen row, that is, the first row that will be affected by vertical scrolling. 
							Frozen rows remain fixed in the window during scrolling.
		
							This is an optional attribute; if unspecified, there will be no frozen rows.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="freeze_left_of_col" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The first nonfrozen column, that is, the first column that will be affected by horizontal scrolling. 
							Frozen columns remain fixed in the window during scrolling.
		
							This is an optional attribute; if unspecified, there will be no frozen columns.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.view_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains {@link ss.view} elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="ss.view" type="ss.view" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.workbook">
		<xsd:annotation>
			<xsd:documentation>
				The {@term subdocument} element for a spreadsheet document. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_document">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="ch.chart" type="ch.chart"/>
					<xsd:element name="ss.col_major_worksheet" type="ss.col_major_worksheet"/>
					<xsd:element name="ss.worksheet" type="ss.worksheet"/>
				</xsd:choice>
				<xsd:attribute name="date_base" type="xsd:int" default="0">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
								The number of days to add to Julian day 1 to arrive at the date base for the workbook. A cell that
								is formatted as a date is interpreted as a number of days since the date base. 
								<p/>
								Some common date bases are shown below:<br>
								Jan 1 4713 BC is Julian Day (date base) 1<br>
								Jan 1 1 AD is Julian Day 1721424<br>
								Jan 1 1900 is Julian Day 2415021<br>
								Jan 1 1904 is Julian Day 2416481
							]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="leap_year_1900" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether consumers of date values should compensate for a bug in some spreadsheet applications
							that causes the year 1900 to be treated as a leap year. The date values generated by these applications
							are off by one day. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ss.worksheet">
		<xsd:annotation>
			<xsd:documentation>
				Defines a {@term sheet} in a spreadsheet file. The cells in an ss.worksheet are contained in 
				rows (in a {@link ss.col_major_worksheet}, cells are contained in columns).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ss.abstract_worksheet">
				<xsd:sequence>
					<xsd:element name="ss.data_rows" type="ss.data_rows"/>
					<xsd:element name="ss.cols" type="ss.cols"/>
					<xsd:element name="ss.view_table" type="ss.view_table" minOccurs="0"/>
					<xsd:element name="ss.frame_table" type="ss.frame_table" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="object_id" type="xsd:nonNegativeInteger">
					<xsd:annotation>
						<xsd:documentation>
							A unique identifier for the worksheet referenced by this ss.worksheet. May be used as the
							subdocument id in a call to DAOpenSubdocument.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.annotation">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Used to mark a section of a document as revised. The annotation type specifies what type of revision was made.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.r" type="tx.r" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="annotation_type" type="EAnnotationType" use="required">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
								Specifies what type of revision was made.<br>
								<b>added</b> text is typically displayed identically to normal text. <br>
								<b>deleted</b> text is typically not displayed. <br>
								<b>comment</b> text is typically displayed in a window separate from the main text.
							]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="prev" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							References the previous segment of a multipart annotation. The first segment will not specify a value for this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="next" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							References the next segment of a multipart annotation. The last segment will not specify a value for this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.bookmark">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Associates a name with a span of text, so the text may later act as the target of a hyperlink or for other referencing purposes.
				<p/>
				A bookmark references a span in the document content. This span marks the region of text to which the bookmark applies.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.r" type="tx.r" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="name" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The name associated with the bookmark.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="app_generated" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							true if the bookmark was generated by the application.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="hide" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the bookmark should be hidden from the user. This does not affect the 
							visibility of the bookmarked text, only the visibility of the bookmark itself.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="prev" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							References the previous segment of a multipart bookmark. The first segment will not specify a value for this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="next" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							References the next segment of a multipart bookmark. The last segment will not specify a value for this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.cell">
		<xsd:annotation>
			<xsd:documentation>
				Represents a single cell in a word processing table. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="tx.p" type="tx.p"/>
					<xsd:element name="tx.list" type="tx.list"/>
				</xsd:choice>
				<xsd:attribute name="style" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The style for the cell. This style is required to be {@term fully resolvable}.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.cell_style">
		<xsd:annotation>
			<xsd:documentation>
				Specifies the formatting for a {@link tx.cell}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="width_restriction" type="EValueRestriction" default="exactly" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The restriction on the value of the width attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="height_restriction" type="EValueRestriction" default="exactly" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The restriction on the value of the height attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="width" type="RelativeLength" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							Specifies the width of the cell. This may be expressed as an absolute value or as a 
							percentage of total row width. Specifying a width for a cell does not alter the width 
							of other cells in the same column (the vertical cell borders are not required to line 
							up from row to row). 
							<p/>
							This is an optional attribute; if unspecified, the width will be automatically calculated 
							based on the table width and the widths of other cells in the same row.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="height" type="RelativeLength" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							Specifies the height of the cell. This may be expressed as an absolute value or as a 
							percentage of total row height. All of the cells in a given row are rendered at the same 
							height, so the cell with the largest height determines the row height.
							<p/>
							This is an optional attribute; if unspecified, the width will be automatically calculated 
							based on the table width and the widths of other cells in the same row.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="no_wrap" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether text wrapping will be allowed inside the cell. If FALSE, wrapping is allowed as 
							normal; if TRUE, text will not wrap within the cell (it will display on a single line).
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="merge_left" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the cell should be merged with the cell to it's left. If the value is true, the 
							cells will be merged regardless of the merge value specified by the other cell.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="merge_right" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the cell should be merged with the cell to it's right. If the value is true, the 
							cells will be merged regardless of the merge value specified by the other cell.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="merge_up" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the cell should be merged with the cell above it. If the value is true, the cells 
							will be merged regardless of the merge value specified by the other cell.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="merge_down" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the cell should be merged with the cell below it. If the value is true, the cells 
							will be merged regardless of the merge value specified by the other cell.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="border" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							Specifies the border to go around the cell. This is used in combination with the borders specified 
							by adjacent cells to determine which border to display around the cell.
							<p/>
							This is an optional attribute; if unspecified, the cell will have no border (unless adjacent cells specify a border).
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="vertical_alignment" type="EVerticalAlignment" default="top">
					<xsd:annotation>
						<xsd:documentation>
							The vertical alignment for the cell contents within the cell.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="back_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The background brush for the cell. 
		
							This is an optional attribute; if unspecified, the cell will be drawn transparently over the existing background.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.cell_style_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link tx.cell_style} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.cell_style" type="tx.cell_style" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.char_style">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				A named set of character properties. 
				<p/>
				tx.char_style elements may be based on other tx.char_style elements. In this case, properties not stated by 
				a style are inherited from the style it's based on. This is the FlexionDoc implementation of the "Based on" feature 
				supported by many applications. 
				<p/>
				A tx.char_style element, in combination with the styles it's based on, may omit values for some 
				character properties. In this case, the missing character properties are inherited from the paragraph.
			]]></xsd:documentation>
			<xsd:appinfo>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_style">
				<xsd:attribute name="basedon" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the style that this style is based on. Any properties not stated by this style are
                                                    inherited from the style it is based on. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="predefined" type="EPredefinedStyle" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The predefined style category for this style, such as &quot;heading-1&quot;. This category 
							is for programmatic use, and is not intended to be used as a style name. Multiple styles 
							within a single file may have the same value for this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="auto_kern_above" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The font size above which auto kerning should be applied. This attribute is only meaningful if the auto_kerning attribute is true.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="auto_kerning" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether or not the characters should be automatically kerned (using the kerning information provided in the font).
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="kerning" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The amount of additional space to place between characters.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="baseline_shift" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The vertical distance the baseline should be shifted relative to the surrounding text. Positive
							values shift the text down and negative values shift the text up.
					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="text_hidden" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the text is to be displayed or not.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="text_protected" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the text is protected or not. Protected text may not be modified.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="text_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the brush to use for rendering text. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="back_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the background brush for the text.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="font_group" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The font group to use. This attribute may overridden by the font attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="font" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The font to use. This attribute overrides the font_group attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="underline" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The underlines that are applied to the text.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="text_effect" type="ETextEffect" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The effect to be applied to the characters.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="text_strikethrough" type="ETextStrikethrough" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The kind of strikethrough that is to be applied to the text.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="text_position" type="ETextPosition" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies what position the characters should be placed at.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.char_style_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link tx.char_style} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.char_style" type="tx.char_style" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.counter">
		<xsd:annotation>
			<xsd:documentation>
				Defines a counter, which may be used for numbering document items such as paragraphs, lines, or pages.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="type" type="ECounterType" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the counter type. This defines which document items cause the counter to be incremented.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="start" type="xsd:int" default="1">
					<xsd:annotation>
						<xsd:documentation>
							The starting number for the counter.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="increment" type="xsd:int" default="1">
					<xsd:annotation>
						<xsd:documentation>
							Specifies how much the counter is incremented each time it is referenced.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.counter_level">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					Defines a single level in a multi-level counter. Counter levels allow the specification of counter styles
					for outlines or multilevel list numbering. For instance, in the following example there are three outline levels:<br>
					<br>
					I. Level 1<br>
					&nbsp;&nbsp;A. Level 2<br>
					&nbsp;&nbsp;&nbsp;&nbsp;1.Level 3<br>
					&nbsp;&nbsp;&nbsp;&nbsp;2. Level 3<br>
					&nbsp;&nbsp;B. Level 2<br>
					II. Level 1<br>
					&nbsp;&nbsp;A. Level 2<br>
					<br>
					This would be represented by three tx.counter_level elements, as follows:<br>
					<pre>&lt;tx.counter_style counter_type="paragraph">
   &lt;tx.counter_level counter="C.1" format="CF.1"/>
   &lt;tx.counter_level counter="C.2" format="CF.2"/>
   &lt;tx.counter_level counter="C.3" format="CF.3"/>
&lt;/tx.counter_style></pre>
					The counter and format attributes on each tx.counter_level determine the appearance and behavior of the counter at that level.
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="counter" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							References the counter to be associated with this counter level.
					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="format" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the format for the counter. This defines how the counter should be displayed.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.counter_mod">
		<xsd:annotation>
			<xsd:documentation>
				Defines a modification to be made to an existing counter. The modification takes effect 
				starting at the point in the text where the tx.counter_mod element appears.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="counter" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							References the counter to be modified.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="value" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The new value for the counter. If not specified, the counter value will not be affected.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="increment" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The new increment for the counter. If not specified, the counter increment will not be affected.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.counter_format">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Specifies the formatting properties for a single list level and it's associated marker.
				<p/>
				The {@link tx.field_source} child specifies the number format for the list numbers.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.field_source" type="tx.field_source" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="ordered" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Specifies whether the list items are ordered. Generally, ordered lists prefix the list items with numbers 
							or letters and unordered list prefix the list items with bullets. This attribute is intended to be used only
							as a hint and should not affect the display of the list items.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="frequency" type="xsd:int" default="1">
					<xsd:annotation>
						<xsd:documentation>
							Specifies how often the counter is displayed. For example, a value of 1 indicates the counter should 
							be displayed every time, and a value of three indicates the counter should be displayed every third time.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="min_gap" type="PhysicalLength" default="0.1in">
					<xsd:annotation>
						<xsd:documentation>
							The minimum space that can exist between the text and the list item marker.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="min_width" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The minimum width the counter value should occupy.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="first_line_indent" type="HorizontalOffset" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The distance between the margin and the beginning of the first line of text in the paragraph.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="left_indent" type="HorizontalOffset" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The distance between the left margin and the left edge of the text in the paragraph. If 
							first_line_indent is also specified, the left indent does not apply to the first line of 
							the paragraph.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="right_indent" type="HorizontalOffset" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The distance between the margin and the right edge of the text in the paragraph. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.counter_style">
		<xsd:annotation>
			<xsd:documentation>
				A named set of counter formats that combine to form a single- or multi-level list numbering format.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.counter_level" type="tx.counter_level" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="name" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The name of the list style.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="type" type="ECounterType" default="user-defined">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the counter type. This defines which document items cause the counter to be incremented.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.counter_format_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link tx.counter_format} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.counter_format" type="tx.counter_format" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.counter_style_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link tx.counter_style} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.counter_style" type="tx.counter_style" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.counter_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link tx.counter} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.counter" type="tx.counter" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.field">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Contains richly formatted text and a formula that may be evaluated to obtain the text. 
				For example, a field may insert the current date or the value of the "author" document property.
				<p/>
				The {@link tx.field_source} child, if provided, specifies the "source code"
				for the compiled field. The components of this child may be processed to obtain the value of the compiled field.
				<p/>
				The {@link tx.field_stream} child, if provided, specifies the "compiled value" for 
				the compiled field. This is the result of processing the field source. If the field source contains parameters 
				that are likely to change (e.g. the current date or the number of words in the file), the value of the 
				field_stream child may not match the results obtained by processing the field_source child.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.field_stream" type="tx.field_stream" minOccurs="0"/>
					<xsd:element name="tx.field_source" type="tx.field_source" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.field_run">
		<xsd:annotation>
			<xsd:documentation>
				Similar to the {@link tx.r} element. Represents a run inside a field, defined as a span of 
				text with a single set of character properties. Runs may contain other content elements intermixed with text.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="alt" type="alt"/>
					<xsd:element name="tx.text" type="tx.text"/>
					<xsd:element name="tx.utext" type="tx.utext"/>
					<xsd:element name="tx.schar" type="tx.schar"/>
					<xsd:element name="referenced_object" type="referenced_object"/>
					<xsd:element name="tx.insert_object" type="tx.insert_object"/>
					<xsd:element name="tx.insert_counter" type="tx.insert_counter"/>
					<xsd:element name="tx.insert_doc_property" type="tx.insert_doc_property"/>
				</xsd:choice>
				<xsd:attribute ref="xml:space"/>
				<xsd:attribute ref="xml:lang"/>
				<xsd:attribute name="style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							References the character properties for the field run.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="tab_group_modifier" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies any modifications to the tab set specified for the paragraph. These may include added or removed tabs.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.field_source">
		<xsd:annotation>
			<xsd:documentation>
				Contains one or more {@link tx.field_run} elements that together define the &quot;source code&quot; used to generate the value of a compiled field.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.field_run" type="tx.field_run" minOccurs="1" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.field_stream">
		<xsd:annotation>
			<xsd:documentation>
				Contains the compiled value of a {@link tx.field}. This is the value that would be 
				obtained by processing the contents of the {@link tx.field_source} element.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice>
					<xsd:element name="tx.p" type="tx.p" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="tx.r" type="tx.r" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:attribute name="invalid" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							If true, the field evaluated to an invalid value or could not be evaluated.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="dirty" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether this compiled value is dirty, and should be recalculated.
					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.font">
		<xsd:annotation>
			<xsd:documentation>
				Contains a single combination of typeface, size, and style. It can either be referenced directly or as a part of a font group.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="name" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The name of the font to use.
					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="family" type="xsd:string" default="unknown">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
								The name of the font family for this font. This may be any of the following:
								<ul>
									<li>"serif"</li>
									<li>"sans-serif"</li>
									<li>"cursive"</li>
									<li>"fantasy"</li>
									<li>"monospace"</li>
									<li>Any application defined string; however the above five values are preferred and should be used whenever possible.</li>
									<li>"unknown"</li>
								</ul>
							]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="size" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The vertical size of the font, measured from baseline to ascent.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="font_weight" type="EFontWeight" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Determines how bold or light the font is. This can affect font selection.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="font_stretch" type="EFontStretch" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal expansion or compression that should be applied to the font. This may affect font selection as some fonts are compressed or expanded.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="font_style" type="EFontStyle" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Determines whether the font is displayed normal, italic, or oblique.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="text_case" type="ETextCase" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The case the text should be displayed in. This may affect font selection as some fonts contain only upper case or smallcaps.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.font_group">
		<xsd:annotation>
			<xsd:documentation>
				Contains a group of fonts. For each character in text that references a tx.font_group, a font 
				from the tx.font_group is selected based on the character code or other character attributes.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.font_group_entry" type="tx.font_group_entry" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="name" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The name for this font group.
		
							This is an optional attribute; if unspecified, the font group will have no name.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.font_group_entry">
		<xsd:annotation>
			<xsd:documentation>
				Associates a font group entry type with a font in a font group.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="font" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The font associated with this font set entry.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="type" type="EFontGroupEntryType" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The type of font entry.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.font_group_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link tx.font_group} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.font_group" type="tx.font_group" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.font_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link tx.font} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.font" type="tx.font" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.hyperlink">
		<xsd:annotation>
			<xsd:documentation>
				Represents a hyperlinked region of text. Activating the hyperlink will cause the document referenced 
				by the locator to be loaded into the window specified by the target attribute.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="locator" type="locator"/>
					<xsd:element name="tx.r" type="tx.r" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="title" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							A string that describes the target of the hyperlink.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="target" type="EHyperlinkTargetWindow" default="self">
					<xsd:annotation>
						<xsd:documentation>
							The target window for the hyperlink when it is activated. The interpretation of this attribute depends on the user agent.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="prev" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							References the previous segment of a multipart hyperlink. The first segment will not specify a value for this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="next" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							References the next segment of a multipart hyperlink. The last segment will not specify a value for this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.insert_counter">
		<xsd:annotation>
			<xsd:documentation>
				Causes the current value of a list level counter to be added to a field.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="counter" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							References the counter to insert.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="numbering_style" type="ENumberingStyle" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The numbering style for the counter. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.insert_doc_property">
		<xsd:annotation>
			<xsd:documentation>
				Causes the value of the specified document property to be added to a field.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="doc_property" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The document property to insert. The value of this document property should be inserted inline where 
							the tx.insert_doc_property element appears, and should use the same character properties as the 
							surrounding text.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.insert_object">
		<xsd:annotation>
			<xsd:documentation>
				Causes an embedded or linked drawing or bitmap to be inserted inline with the text. The object
				inserted by this element should be treated as a single, large character when laying out the text.
				This is different from the behavior of frames, which float above or below the text. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="1">
					<xsd:element name="cropped_object" type="cropped_object"/>
					<xsd:element name="linked_object" type="linked_object"/>
					<xsd:element name="tx.s" type="tx.s"/>
					<xsd:element name="dr.drawing" type="dr.drawing"/>
					<xsd:element name="dr.image" type="dr.image"/>
					<xsd:element name="ch.chart" type="ch.chart"/>
				</xsd:choice>
				<xsd:attribute name="border" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the border that should be drawn around the edge of the object. If a value
							is not specified for the border attribute, the object will have no border. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="name" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							A string to be displayed in place of the object if the object is unavailable.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="display_as_icon" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether this embedded object should be displayed as an icon.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.li">
		<xsd:annotation>
			<xsd:documentation>
				This element represents a single item in a {@link tx.list}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.p" type="tx.p" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="level" type="xsd:int" use="required">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							A 0-based index into the counter levels of this list item's counter style. The selected counter level is used for 
							counter formatting for the contained paragraph.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="counter_format" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Contains the counter format for this list item, overriding the counter style specified by the {@link tx.list} containing this item.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="number" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the formatted list item number for this list item, based on the counter format. May be a number such as &quot;1.&quot;, a sequence
							such as &quot;1.3.2.&quot;, a letter such as &quot;E.&quot;, a bullet, or any other valid list number.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.list">
		<xsd:annotation>
			<xsd:documentation>
				This element represents a list of numbered or bulleted paragraphs.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="tx.p" type="tx.p"/>
					<xsd:element name="tx.li" type="tx.li"/>
				</xsd:choice>
				<xsd:attribute name="style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The counter style for this list. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.p">
		<xsd:annotation>
			<xsd:documentation>
				This element represents a paragraph.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="alt" type="alt"/>
					<xsd:element name="tx.text" type="tx.text"/>
					<xsd:element name="tx.utext" type="tx.utext"/>
					<xsd:element name="tx.table" type="tx.table"/>
					<xsd:element name="tx.r" type="tx.r"/>
					<xsd:element name="wp.frame_group" type="wp.frame_group"/>
					<xsd:element name="wp.frame" type="wp.frame"/>
					<xsd:element name="wp.header" type="wp.header"/>
					<xsd:element name="wp.header_ref" type="wp.header_ref"/>
					<xsd:element name="wp.page_force" type="wp.page_force"/>
					<xsd:element name="wp.footer" type="wp.footer"/>
					<xsd:element name="wp.footer_ref" type="wp.footer_ref"/>
					<xsd:element name="wp.note_slot" type="wp.note_slot"/>
					<xsd:element name="wp.note" type="wp.note"/>
					<xsd:element name="wp.note_ref" type="wp.note_ref"/>
					<xsd:element name="tx.counter_mod" type="tx.counter_mod"/>
					<xsd:element name="wp.column_ref" type="wp.column_ref"/>
					<xsd:element name="wp.page_style_ref" type="wp.page_style_ref"/>
					<xsd:element name="wp.print_settings_ref" type="wp.print_settings_ref"/>
					<xsd:element name="referenced_object" type="referenced_object"/>
					<xsd:element name="tx.insert_object" type="tx.insert_object"/>
					<xsd:element name="tx.field" type="tx.field"/>
					<xsd:element name="tx.annotation" type="tx.annotation"/>
					<xsd:element name="tx.bookmark" type="tx.bookmark"/>
					<xsd:element name="tx.hyperlink" type="tx.hyperlink"/>
					<xsd:element name="tx.schar" type="tx.schar"/>
					<xsd:element name="tx.text_break" type="tx.text_break"/>
					<xsd:element name="wp.draw_line" type="wp.draw_line"/>
					<xsd:element name="wp.text_advance" type="wp.text_advance"/>
				</xsd:choice>
				<xsd:attribute ref="xml:space"/>
				<xsd:attribute ref="xml:lang"/>
				<xsd:attribute name="style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							References the paragraph style associated with this paragraph.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="text_offset" type="xsd:nonNegativeInteger" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the text access offset of the first character of this paragraph
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.para_style">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				A named set of paragraph properties.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_style">
				<xsd:attribute name="basedon" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							Specifies the style that this style is based on. Any properties not stated by this style are
                                                    inherited from the style it is based on. 
                                                    <p/>
                                                    At the root of the paragraph style tree, serving as the ultimate style that all other paragraph 
                                                    styles are based on, must be a fully attributed paragraph style consisting of the intrinsic application default values 
                                                    for every paragraph property. This style should have the app_defaults attribute set to "true". In this way, 
                                                    full attribution may be obtained for any style by walking up through the styles it is based on.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="predefined" type="EPredefinedStyle" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The predefined style category for this style, such as &quot;heading-1&quot;. This category 
							is for programmatic use, and is not intended to be used as a style name. Multiple styles 
							within a single file may have the same value for this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="following_para_style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							Specifies the paragraph style that will be used by default for any new paragraph added after a paragraph using this style. 
							<p/>
							This is an optional attribute; if unspecified, the default behavior is to use the same style for the following paragraph.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="first_line_indent" type="HorizontalOffset" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The distance between the margin and the beginning of the first line of text in the paragraph.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="left_indent" type="HorizontalOffset" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The distance between the left margin and the left edge of the text in the paragraph. If 
							first_line_indent is also specified, the left indent does not apply to the first line 
							of the paragraph.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="right_indent" type="HorizontalOffset" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The distance between the margin and the right edge of the text in the paragraph. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="keep_lines_together" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether all lines in this paragraph must be kept together on the same page.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="keep_with_next_lines" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates how many lines of the next paragraph must be kept on the same page as this paragraph.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="keep_with_next_para" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether this paragraph must be kept on the same page as the following paragraph.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="keep_with_prev_para" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether this paragraph must be kept on the same page as the preceeding paragraph.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="space_above" type="RelativeLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The vertical distance between the top of the space allocated for the paragraph and the top of the 
							text in the first run of the paragraph. If the paragraph begins with a table followed by a run, this space is placed after the table.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="space_below" type="RelativeLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The vertical distance between the bottom line of text within the paragraph and the bottom of the space allocated for the paragraph.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="space_above_restriction" type="EValueRestriction" default="exactly" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The restriction on the space_above value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="space_below_restriction" type="EValueRestriction" default="exactly" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The restriction on the space_below value
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="space_above_separator" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The vertical distance between the bottom of the paragraph and the top of the separator border. 
							If no separator border is specified, this value is meaningless.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="space_below_separator" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The vertical distance between the bottom of the separator border and the top of the following paragraph. 
							If no separator border is specified, this value is meaningless.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="page_break_before" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether a page break should always occur before the start of this paragraph.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="line_spacing" type="RelativeLength" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The line spacing to use for lines in the paragraph. The interpretation of this value depends on the line_spacing_type attribute.
							<p/>
							A line spacing expressed as a {@link PhysicalLength} indicates the physical distance between lines, as defined by 
							the line_spacing_type attribute.
							<p/>
							A line spacing expressed as a {@link Percent} indicates the line spacing as a percentage of the normal line spacing 
							for the selected font. For example, "75%" would mean 75% of the normal line spacing.
							<p/>
							A line spacing expressed as a {@link xsd:float} indicates the line spacing as a multiple of the normal line spacing for
							the selected font. For instance, "2.5" would mean 2.5 times the normal line spacing.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="line_spacing_restriction" type="EValueRestriction" default="exactly" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The restrictions on the value of the line_spacing attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="min_widow_lines" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The minimum number of lines of this paragraph that may be placed at the top of a page when the paragraph 
							is split between two pages. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="min_orphan_lines" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The minimum number of lines of this paragraph that may be left at the bottom of a page when the paragraph 
							extends to the next page. If there is not sufficent room for this number of lines at the bottom of the 
							page, the entire paragraph must be moved to the next page.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="outline_level" type="xsd:int" default="0">
					<xsd:annotation>
						<xsd:documentation>
							The outline level for paragraphs using the style. This is used both in outline view and for automatic 
							generation of table of contents. Body text has an outline level of 0. All other outline levels are nested 
							in numeric order; heading 1 has outline level 1 and heading 2 has outline level 2, etc.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="app_defaults" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether this style was generated by the reader to represent the default values that are intrinsic in the source application.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="char_style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the character style associated with this paragraph style. This character style is automatically applied whenever
							the paragraph style is applied.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="line_spacing_type" type="ELineSpacingType" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Indicates how the line_spacing attribute should be interpreted. The possible values are described under line_spacing_type.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="border" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the border to be drawn around the outside of the paragraph. If a separator border is also specified,
							it will be used as the border at the bottom of a paragraph if the style for the following paragraph references
							the same border element.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="separator_border_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the border to be drawn at the bottom of a paragraph when the style for the following paragraph references
							the same border element.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="back_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The background brush to fill the paragraph area with.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="horizontal_alignment" type="EHorizontalAlignment" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the horizontal alignment of the lines within the paragraph.  If 
							the last_line_alignment attribute is also specified, this attribute applies to all lines in the paragraph 
							except for the last. Otherwise, this attribute applies to all lines in the paragraph, including the last.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="last_line_alignment" type="EHorizontalAlignment" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal alignment of the last line within the paragraph.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="tab_group" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The tab group to use for this paragraph.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="tab_group_modifier" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies any modifications to the tab group specified for the paragraph. These may include added or removed tabs.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.para_style_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link tx.para_style} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.para_style" type="tx.para_style" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.r">
		<xsd:annotation>
			<xsd:documentation>
				Represents a run, defined as a span of text with a single set of character properties. Runs may contain 
				other content elements such as table and column_ref intermixed with text.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="alt" type="alt"/>
					<xsd:element name="tx.text" type="tx.text"/>
					<xsd:element name="tx.utext" type="tx.utext"/>
					<xsd:element name="wp.frame_group" type="wp.frame_group"/>
					<xsd:element name="wp.frame" type="wp.frame"/>
					<xsd:element name="wp.header" type="wp.header"/>
					<xsd:element name="wp.header_ref" type="wp.header_ref"/>
					<xsd:element name="wp.page_force" type="wp.page_force"/>
					<xsd:element name="wp.footer" type="wp.footer"/>
					<xsd:element name="wp.footer_ref" type="wp.footer_ref"/>
					<xsd:element name="wp.note_slot" type="wp.note_slot"/>
					<xsd:element name="wp.note" type="wp.note"/>
					<xsd:element name="wp.note_ref" type="wp.note_ref"/>
					<xsd:element name="tx.counter_mod" type="tx.counter_mod"/>
					<xsd:element name="wp.column_ref" type="wp.column_ref"/>
					<xsd:element name="wp.page_style_ref" type="wp.page_style_ref"/>
					<xsd:element name="wp.print_settings_ref" type="wp.print_settings_ref"/>
					<xsd:element name="referenced_object" type="referenced_object"/>
					<xsd:element name="tx.insert_object" type="tx.insert_object"/>
					<xsd:element name="tx.field" type="tx.field"/>
					<xsd:element name="tx.annotation" type="tx.annotation"/>
					<xsd:element name="tx.bookmark" type="tx.bookmark"/>
					<xsd:element name="tx.hyperlink" type="tx.hyperlink"/>
					<xsd:element name="tx.schar" type="tx.schar"/>
					<xsd:element name="tx.text_break" type="tx.text_break"/>
					<xsd:element name="wp.draw_line" type="wp.draw_line"/>
					<xsd:element name="wp.text_advance" type="wp.text_advance"/>
				</xsd:choice>
				<xsd:attribute ref="xml:space"/>
				<xsd:attribute ref="xml:lang"/>
				<xsd:attribute name="style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							References the character style associated with this run. The properties stated by this style override
							the character properties stated by the paragraph style.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="text_offset" type="xsd:nonNegativeInteger" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the text access offset of the first character of this run. If not specified, the text_offset from the paragraph 
							content immediately preceeding this run may be used to determine the text_offset of this run.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.row">
		<xsd:annotation>
			<xsd:documentation>
				Represents a single row in a word processing table.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.cell" type="tx.cell" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="style" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The row properties for the row.
					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.row_style">
		<xsd:annotation>
			<xsd:documentation>
				Specifies formatting properties for a row in a word processing table.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="width_restriction" type="EValueRestriction" default="exactly" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The restriction on the value of the width attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="height_restriction" type="EValueRestriction" default="exactly" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The restriction on the value of the height attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="width" type="RelativeLength" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The fixed width of the row as a whole. This may be expressed as an absolute value or as a percentage of total table width.
							<p/>
							This is an optional attribute; if unspecified, the row width will be calculated based on the cell contents.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="height" type="RelativeLength" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The fixed height of the row. This may be expressed as an absolute value or as a percentage of total table height.
							<p/>
							This is an optional attribute; if unspecified, the row height will be calculated based on the cell contents.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="horizontal_offset" type="HorizontalOffset" default="auto 0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal offset for the left edge of the row, relative to the left edge of the table.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="header_row" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the row is a header row. The most recent set of contiguous header rows within a given 
							table may be printed at the top of each page when the table is broken across pages.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="horizontal_alignment" type="EHorizontalAlignment" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							Specifies the horizontal alignment for the table row as a whole. This overrides the table's horizontal 
							alignment for the row affected by these row properties.
							<p/>
							This is an optional attribute; if unspecified, the default will be determined by the table alignment.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.row_style_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link tx.row_style} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.row_style" type="tx.row_style" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.schar">
		<xsd:annotation>
			<xsd:documentation>
				A placeholder for a special character, such as a hard tab or soft hyphen.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="ch" type="ESpecialChar" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The character to insert.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.s">
		<xsd:annotation>
			<xsd:documentation>
				Provides a generic way of representing formatted text in any type of document (word processing, 
				presentation, spreadsheet, etc.) Not all text stream capabilities will be available in all formats 
				(for instance, a text stream in a spreadsheet cell may not reference word processing columns).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_object">
				<xsd:choice>
					<xsd:choice minOccurs="0" maxOccurs="unbounded">
						<xsd:element name="tx.p" type="tx.p"/>
						<xsd:element name="tx.list" type="tx.list"/>
					</xsd:choice>
					<xsd:element name="tx.r" type="tx.r" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:attribute ref="xml:lang"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.table">
		<xsd:annotation>
			<xsd:documentation>
				Defines a word processing table. Tables contain {@link tx.row} elements as children.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.row" type="tx.row" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="width_restriction" type="EValueRestriction" default="exactly" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The restriction on the value of the width attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="height_restriction" type="EValueRestriction" default="exactly" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The restriction on the value of the height attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="width" type="RelativeLength" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The overall width of the table, including borders and border margins. 
							Individual rows within the table that specify an absolute width may exceed the table width.
							<p/>
							This is an optional attribute; if unspecified, the table width is determined by it's rows.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="height" type="RelativeLength" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The overall height of the table, including borders and border margins. 
							Individual rows within the table that specify an absolute height may collectively exceed the table height.
							<p/>
							This is an optional attribute; if unspecified, the table height is determined by it's rows.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="horizontal_offset" type="HorizontalOffset" default="auto 0.0pt">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							The horizontal offset of the table from the position specified by the Alignment attribute. 
							<p/>
							This is an optional attribute; if unspecified, the default value is 0.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="border" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							Specifies the border for the entire table. This border is drawn around the outside of the table, and automatically takes priority over cell borders.
							<p/>
							This is an optional attribute; if unspecified, the table will have no border.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="horizontal_alignment" type="EHorizontalAlignment" default="left">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal alignment for the table as a whole.
					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.tab_clear">
		<xsd:annotation>
			<xsd:documentation>
				Used within {@link tx.tab_group_modifier} to remove an existing tab stop or range of tab stops.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="position" type="PhysicalLength" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal position of the tab stop to remove.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="range" type="PhysicalLength" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The width of the area of tab stops to be removed. The range is centered at the location 
							specified by the position attribute; all tabs at (position +/- (range/2)) will be removed.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.tab_group">
		<xsd:annotation>
			<xsd:documentation>
				Contains a complete group of tab stops.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.tab_set" type="tx.tab_set" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="default_tab_width" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The default width of tabs after the last specified tab stop.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="default_tolerance" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The tab tolerance for any tabs that do not specify a tolerance.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.tab_group_modifier">
		<xsd:annotation>
			<xsd:documentation>
				Used to modify an existing set of tabs. This may include adding additional tabs or removing existing tabs.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="tx.tab_set" type="tx.tab_set"/>
					<xsd:element name="tx.tab_clear" type="tx.tab_clear"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.tab_group_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link tx.tab_group} and {@link tx.tab_group_modifier} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="tx.tab_group_modifier" type="tx.tab_group_modifier"/>
					<xsd:element name="tx.tab_group" type="tx.tab_group"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.tab_set">
		<xsd:annotation>
			<xsd:documentation>
				Specifies the properties associated with a tabstop.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="position" type="PhysicalLength" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal position of the tabstop. This position will be relative to the frame 
							left if the relative attribute is false, or the current position if the relative attribute
							is set to true.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="align_on_char" type="char" default=".">
					<xsd:annotation>
						<xsd:documentation>
							The character to align with the tabstop. This attribute is only meaningful if the 
							tab_alignment attribute is set to &quot;align-on&quot;.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="leader_char" type="char" default=" ">
					<xsd:annotation>
						<xsd:documentation>
							The character(s) that will be used to fill the area between the current location and the tab position
							when text is tabbed to this stop.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="leader_char_spacing" type="xsd:int" default="0">
					<xsd:annotation>
						<xsd:documentation>
							The number of spaces to fall between each pair of leader characters. This attribute is only meaningful if a leader character is specified.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="tolerance" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The tolerance around the tab stop. If not specified, the default tolerance from the tab group will be used.
					</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="relative" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the position of this tab stop is given relative to the current position.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="tab_alignment" type="ETabAlignment" default="left">
					<xsd:annotation>
						<xsd:documentation>
							Specifies how text is to be aligned at this tab stop.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.text">
		<xsd:annotation>
			<xsd:documentation>
				Contains text data 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_text_element"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.utext">
		<xsd:annotation>
			<xsd:documentation>
				Contains text data that has not been mapped to unicode
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_text_element">
				<xsd:attribute name="charset" type="ECharacterSet" use="required">
					<xsd:annotation>
						<xsd:documentation>
						Specifies the character set for this text.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.text_break">
		<xsd:annotation>
			<xsd:documentation>
				Specifies that a text break is to occur at this location in the content stream. Text break is a 
				generic term for any kind of break that interrupts the text flow, with the exception of hard paragraph breaks.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="type" type="EBreakType" use="required">
					<xsd:annotation>
						<xsd:documentation>
						Determines the behavior of the text break.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.underline">
		<xsd:annotation>
			<xsd:documentation>
				This element defines an underline format.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_named_resource">
				<xsd:attribute name="underline_spaces" type="xsd:boolean" default="true">
					<xsd:annotation>
						<xsd:documentation>
							Used to prevent underlining of whitespace other than tabs. If true, whitespace other than tabs will be underlined; if 
							false, whitespace other than tabs will not be underlined.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="underline_tabs" type="xsd:boolean" default="true">
					<xsd:annotation>
						<xsd:documentation>
							Used to prevent underlining of tabs. If true, tabs will be underlined; if false tabs will not be underlined.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="predefined" type="EPredefinedUnderline" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The predefined underline type to use.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="tx.underline_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link tx.underline} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="tx.underline" type="tx.underline" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="wp.abstract_subdoc">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="tx.p" type="tx.p"/>
					<xsd:element name="tx.list" type="tx.list"/>
				</xsd:choice>
				<xsd:attribute name="margin" type="Margin" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The margin around the outside of the text.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="wp.abstract_subdoc_ref">
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="even_pages" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the reference applies to even numbered pages in the document.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="odd_pages" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the reference applies to odd numbered pages in the document.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="first_page" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							Indicates whether the reference applies to the first page of the section, 
							regardless of whether it is even or odd. 
							<p/>
							If this attribute is specified, it overrides the even_page or odd_page attribute for 
							the first page of the section. If first_page is not stated, the even_page or odd_page 
							attribute applies to the first page of the section, depending on whether that page is 
							even or odd in the document.
						]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="mode" type="EHeaderFooterMode" default="enable">
					<xsd:annotation>
						<xsd:documentation>
							Reference mode: enable, suppress for the current page, or suppress permanently.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.column_def">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Defines a single column in a {@link wp.column_style}
				<p/>
				The gutters and column spacing should be arranged as shown here:
				<img src="pagelayout.gif"/>
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="width" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal width of the column. 
		
							This is an optional attribute; if unspecified, the width will be automatically calculated to 
							fill the page margins, based on the column spacing and the widths of the other columns.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="left_gutter" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The width of the gutter to the left of the column. This space falls between the column spacing and 
							the left edge of the column. It is not applied to the leftmost column.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="right_gutter" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The width of the gutter to the right of the column. This space falls between the right edge of the 
							column and the column spacing. It is not applied to the rightmost column.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="border" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the border around the outside of the column. If the separator_border attribute is also specified, it 
							will be used between the current column and the column to the right instead of this border.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="separator_border_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the border between the column defined by this wp.column_def and the column to it's right. This 
							attribute takes precidence over the border attribute. The border will be centered in the space specified 
							by the column_spacing attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="back_brush" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The background brush for the column. The entire area of the column area is filled. The area between adjacent 
							columns is not affected by this brush.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.column_ref">
		<xsd:annotation>
			<xsd:documentation>
				References the column style that should be used from this point in the document until another 
				wp.column_ref element is encountered. Columns may be disabled by inserting a wp.column_ref that
				does not reference a wp.column_style.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="column_style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							References the column style to be used. If this attribute is not specified, a single, full-width column should be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.column_style">
		<xsd:annotation>
			<xsd:documentation>
				Defines the appearance and layout for a set of word processing columns. This element defines the overall
				properties for the columns, and the child {@link wp.column_def} elements defines individual properties
				for each column defined by the style. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="wp.column_def" type="wp.column_def" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="left_edge" type="HorizontalOffset" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal position of the left of the column set relative to the left page margin.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="column_spacing" type="PhysicalLength" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal spacing between adjacent columns.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="row_spacing" type="PhysicalLength" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The vertical spacing between two adjacent instances of the same column set. This can occur if 
							a column break is encountered in the last column of the column group.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="type" type="EColumnType" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Specifies how text flows in the columns and whether the columns are balanced.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.column_style_table">
		<xsd:annotation>
			<xsd:documentation>
				Contains all of the {@link wp.column_style} elements in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:sequence>
					<xsd:element name="wp.column_style" type="wp.column_style" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.doc">
		<xsd:annotation>
			<xsd:documentation>
				The {@term subdocument} element for a word processing document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_document">
				<xsd:sequence>
					<xsd:element name="wp.section" type="wp.section" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="object_id" type="xsd:nonNegativeInteger">
					<xsd:annotation>
						<xsd:documentation>
							A unique identifier for the word processing document referenced by this wp.doc. May be used as the
							subdocument id in a call to DAOpenSubdocument.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="back_color" type="ColorValue" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The background color for the document. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.draw_line">
		<xsd:annotation>
			<xsd:documentation>
				Draws a horizontal or vertical line at a location relative to the text on the page.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="length" type="PhysicalLength" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The length of the line to be drawn. The line is drawn relative to the page position specified by 
							the position attribute. If the length is positive, the line will be drawn to the right or down; if 
							the length is negative, the line will be drawn up or to the left.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="orientation" type="EOrientation" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Determines if the line is drawn vertically or horizontally on the page.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="pen" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use when drawing the line.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="horizontal_origin" type="EHorizontalOrigin" default="current">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal origin for positioning the line. The horiziontal position of the line
							is derived by adding the horizontal_offset to the location specified by this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="horizontal_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The offset from the horizontal origin for positioning the line. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="vertical_origin" type="EVerticalOrigin" default="current">
					<xsd:annotation>
						<xsd:documentation>
							The vertical origin for positioning the line. The vertical position of the line
							is derived by adding the vertical_offset to the location specified by this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="vertical_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The offset from the vertical origin for positioning the line. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.footer">
		<xsd:annotation>
			<xsd:documentation>
				Defines the contents of a page footer. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="wp.abstract_subdoc">
				<xsd:attribute name="left_origin" type="EHorizontalOrigin" default="left-margin">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal origin for the positioning the left edge of the footer. The location of the left edge
							of the footer is derived by adding the left_offset to the location specified by this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="left_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The offset from the left_origin for the location of the left edge of the footer. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="top_origin" type="EVerticalOrigin" default="auto">
					<xsd:annotation>
						<xsd:documentation>
							The vertical origin for positioning the top edge of the footer. The location of the top edge
							of the footer is derived by adding the top_offset to the location specified by this attribute.
							The default top_origin for a wp.footer is &quot;auto&quot;, which allows the footer to grow to fit it's contents. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="top_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The offset from the top_origin for the location of the top edge of the footer. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="right_origin" type="EHorizontalOrigin" default="right-margin">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal origin for the positioning the right edge of the footer. The location of the right edge
							of the footer is derived by adding the right_offset to the location specified by this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="right_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The offset from the right_origin for the location of the right edge of the footer. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="bottom_origin" type="EVerticalOrigin" default="bottom-margin">
					<xsd:annotation>
						<xsd:documentation>
							The vertical origin for positioning the bottom edge of the footer. The location of the bottom edge
							of the footer is derived by adding the bottom_offset to the location specified by this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="bottom_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The offset from the bottom_origin for the location of the bottom edge of the footer. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.footer_ref">
		<xsd:annotation>
			<xsd:documentation>
				Causes the specified footer to be enabled or disabled. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="wp.abstract_subdoc_ref">
				<xsd:attribute name="footer" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The footer to enable or disable.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.frame">
		<xsd:annotation>
			<xsd:documentation>
				Specifies the location, size, and formatting properties for a frame.
				A frame is an image or object that floats over the main document content.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_frame">
				<xsd:attribute name="page_selector" type="EPageSelector" default="current">
					<xsd:annotation>
						<xsd:documentation>
							The pages where this frame should appear. If the start_page and/or end_page attributes
							are specified, the frame will appear on the pages specified by the page_selector attribute
							within the given page range. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="start_page" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The page number in the document where this frame should first appear. The value of this
							attribute only applies within the constraints established by the page_selector attribute.
							If no value is specified for the start_page attribute, the page containing the {@link wp.frame}
							element will be treated as the start page.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="end_page" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The last page number in the document where this frame should appear. The value of this
							attribute only applies within the constraints established by the page_selector attribute.
							If no value is specified for the end_page attribute, the page containing the {@link wp.frame}
							element will be treated as the end page.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="width" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The width of the frame. If not specified, the width of the frame will be determined by the width
							of it's contents.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="height" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The height of the frame. If not specified, the height of the frame will be determined by the height
							of it's contents.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="horizontal_origin" type="EHorizontalOrigin" default="current">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal origin for positioning the frame. The horiziontal position of the frame
							is derived by adding the horizontal_offset to the location specified by this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="horizontal_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The offset from the horizontal origin for positioning the frame. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="vertical_origin" type="EVerticalOrigin" default="current">
					<xsd:annotation>
						<xsd:documentation>
							The vertical origin for positioning the frame. The vertical position of the frame
							is derived by adding the vertical_offset to the location specified by this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="vertical_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The offset from the vertical origin for positioning the frame. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="frame_wrap_side" type="EFrameWrapSide" default="none">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
								When text outside the frame is wrapped around the frame, the value of the frame_wrap_side attribute
								determines which side of the frame that text wraps to. This attribute is only meaningful if the 
								value of the frame_wrap_style attribute is "box" or "contour".
							]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="frame_wrap_style" type="EFrameWrapStyle" default="box">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
								When text outside the frame is wrapped around the frame, the value of the frame_wrap_style attribute
								determines how the text is wrapped in relation to the frame.
							]]></xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="frame_group" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
		 					References the frame group that this frame belongs to.
		 				</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="anchor" type="EFrameAnchor" default="page">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the text element that the frame is anchored to. The frame will move with it's
							anchor element when the text is edited.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.frame_group">
		<xsd:annotation>
			<xsd:documentation>
				Used to associate an object with one or more frames. The content specified by the 
				object attribute is flowed in sequence through the frames described by the wp.frame
				elements within the wp.frame_group.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="1">
					<xsd:element name="cropped_object" type="cropped_object"/>
					<xsd:element name="linked_object" type="linked_object"/>
					<xsd:element name="tx.s" type="tx.s"/>
					<xsd:element name="dr.drawing" type="dr.drawing"/>
					<xsd:element name="dr.image" type="dr.image"/>
					<xsd:element name="ch.chart" type="ch.chart"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.header">
		<xsd:annotation>
			<xsd:documentation>
				Defines the contents of a page header.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="wp.abstract_subdoc">
				<xsd:attribute name="left_origin" type="EHorizontalOrigin" default="left-margin">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal origin for the positioning the left edge of the header. The location of the left edge
							of the header is derived by adding the left_offset to the location specified by this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="left_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The offset from the left_origin for the location of the left edge of the header. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="top_origin" type="EVerticalOrigin" default="top-margin">
					<xsd:annotation>
						<xsd:documentation>
							The vertical origin for positioning the top edge of the header. The location of the top edge
							of the header is derived by adding the top_offset to the location specified by this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="top_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The offset from the top_origin for the location of the top edge of the header. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="right_origin" type="EHorizontalOrigin" default="right-margin">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal origin for the positioning the right edge of the header. The location of the right edge
							of the header is derived by adding the right_offset to the location specified by this attribute.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="right_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The offset from the right_origin for the location of the right edge of the header. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="bottom_origin" type="EVerticalOrigin" default="auto">
					<xsd:annotation>
						<xsd:documentation>
							The vertical origin for positioning the bottom edge of the header. The location of the bottom edge
							of the header is derived by adding the bottom_offset to the location specified by this attribute.
							The default bottom_origin for a wp.header is &quot;auto&quot;, which allows the header to grow to fit it's contents. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="bottom_offset" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The offset from the bottom_origin for the location of the bottom edge of the header. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.header_ref">
		<xsd:annotation>
			<xsd:documentation>
				Causes the specified header to be enabled or disabled. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="wp.abstract_subdoc_ref">
				<xsd:attribute name="header" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The header to enable or disable.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.note">
		<xsd:annotation>
			<xsd:documentation>
				A footnote or endnote. The location the note prints is determined by it's {@link wp.note_slot} parent.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="tx.p" type="tx.p"/>
					<xsd:element name="tx.list" type="tx.list"/>
				</xsd:choice>
				<xsd:attribute name="note_slot" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>
							References the note slot for this note.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.note_ref">
		<xsd:annotation>
			<xsd:documentation>
				Surrounds the text that signifies a note reference. May appear in either the
				body or in a wp.note - when the wp.note_ref appears in the body, it will 
				reference the wp.note to be inserted. 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="tx.r" type="tx.r"/>
					<xsd:element name="alt" type="alt"/>
					<xsd:element name="tx.text" type="tx.text"/>
					<xsd:element name="tx.utext" type="tx.utext"/>
				</xsd:choice>
				<xsd:attribute name="note" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							When the wp.note_ref appears in the body of the document, this attribute
							will reference the note to be inserted. 
							When the wp.note_ref appears in the wp.note, this attribute will not 
							be present. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.note_slot">
		<xsd:annotation>
			<xsd:documentation>
				Contains information about the location and format of a set of notes. Generally there will be one note slot for footnotes and one for endnotes.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="min_keep_together" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the minimum height that a footnote must occupy on each page if it is split across several 
							pages. If there is not sufficient space on the page, the note (and the note reference, if possible) 
							should be moved to the next page. 
		
							This is an optional attribute; if unspecified, the default value is equal to one line height.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="max_per_page" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the maximum total height that notes may occupy on a page before they are continued to the next page.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="note_spacing" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The vertical space between notes on the same page.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="space_above_separator" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The vertical spacing between the bottom of body text and the top of the separator line and/or 
							text. This attribute is meaningful regardless of whether a separator pen or text is specified.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="space_below_separator" type="PhysicalLength" default="0.0pt">
					<xsd:annotation>
						<xsd:documentation>
							The vertical spacing between the bottom of the separator line or text and the top of the first 
							note text. This attribute is meaningful regardless of whether a separator pen or text is specified.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="separator_length" type="PhysicalLength" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal length of the separator line. 
		
							This is an optional attribute; if unspecified, the default value is equal to the width between the horizontal margins.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="separator_text" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							A string placed between the bottom of body text and the top of the first note text. 
		
							This is an optional attribute; if unspecified, the default value is blank.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="continue_text" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							A string that is placed below the bottom of note text when the note is being continued on the next page. 
		
							This is an optional attribute; if unspecified, the default value is blank.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="restart_number_by_page" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>
							Indicates whether the note numbering should be restarted at the beginning of each page. If 
							false, notes using this slot will be numbered sequentially through the entire document. This 
							attribute is only meaningful for &quot;end-of-text&quot; and &quot;end-of-page&quot; notes.
		
							This is an optional value; if unspecified, the default value is false.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="counter_style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the counter style to use for the notes in this slot. If no counter style is specified, the note counter must be generated by the consumer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="separator_pen" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The pen to use when drawing the separator line that goes between the main body text and the note text.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="separator_alignment" type="EHorizontalAlignment" default="left">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal alignment for the note separator bar that is drawn between the main body text and the note text.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="note_position" type="ENotePosition" use="required">
					<xsd:annotation>
						<xsd:documentation>
							The location that this note prints in the document.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.page_force">
		<xsd:annotation>
			<xsd:documentation>
				Causes the next page of text to be placed on either an even or an odd numbered page. This may require skipping a page.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="next_page" type="EEvenOdd" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Determines whether the next page in the document will be even or odd. The only valid values for this attribute are &quot;even&quot; or &quot;odd&quot;.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.page_style_ref">
		<xsd:annotation>
			<xsd:documentation>
				References the page properties that should be used starting on the page containing the 
				wp.page_style_ref element. These properties remain in effect until overridden by a new set of page properties.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="page_style" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The page properties to use from this point on. If unspecified, the current page properties should be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.print_settings_ref">
		<xsd:annotation>
			<xsd:documentation>
				References the print properties that should be used starting on the page containing the 
				wp.print_settings_ref element. These properties remain in effect until overridden by a new set of print properties.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="print_settings" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The print properties to use from this point on. If unspecified, the current print properties will be used.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.section">
		<xsd:annotation>
			<xsd:documentation>
				Represents a single word processing section.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="tx.p" type="tx.p"/>
					<xsd:element name="tx.list" type="tx.list"/>
				</xsd:choice>
				<xsd:attribute name="section_break_type" type="ESectionBreakType" default="next">
					<xsd:annotation>
						<xsd:documentation>
							Controls what page the section starts on. If the value is &quot;even&quot; or &quot;odd&quot;, the 
							section starts on an even or odd page, skipping a page if necessary. If the value is &quot;next&quot;, 
							the section starts on the next page of the document. If the value is &quot;continuous&quot;, the section 
							starts immediately below the previous section, on the same page.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="wp.text_advance">
		<xsd:annotation>
			<xsd:documentation>
				Causes the text following the wp.text_advance to be offset horizontally and/or vertically from 
				the position where it would normally appear. The text_advance element is generally used for advanced page layout.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="abstract_element">
				<xsd:attribute name="horizontal_advance" type="HorizontalOffset" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The horizontal offset for the text following the wp.text_advance. If not specified, the horizontal text offset will not be affected.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="vertical_advance" type="VerticalOffset" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The vertical offset for the text following the wp.text_advance. If not specified, the vertical text offset will not be affected.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="flexiondoc">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>
					The root element of a FlexionDoc document (the {@term Document Element}). 
				</xsd:documentation>
			</xsd:annotation>
			<xsd:complexContent>
				<xsd:extension base="abstract_element">
					<xsd:sequence>
						<xsd:element name="doc_property_table" type="doc_property_table" minOccurs="0"/>
						<xsd:element name="style_tables" type="style_tables" minOccurs="0"/>
						<xsd:element name="content" type="content" minOccurs="0"/>
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>
