<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml" elementFormDefault="unqualified" attributeFormDefault="unqualified" blockDefault="#all" finalDefault="#all" version="1.1" xsi:schemaLocation="http://www.w3.org/2001/XMLSchema http://www.w3.org/2001/XMLSchema.xsd">
	<!--

-->
	<xs:annotation>
		<xs:documentation>
			This is the XML Schema module common content models in XHTML
			Please use this formal public identifier to identify it:
			"-//W3C//ENTITIES XHTML Document Model 1.0//EN"
			
			@author: Daniel Austin austin.d@ic.grainger.com
			$Id: xhtml11-model-1.xsd,v 1.4 2006-09-21 22:08:03 cjl Exp $
		</xs:documentation>
		<xs:documentation source="xhtml-copyright-1.xsd"/>
	</xs:annotation>
	<!--

-->
	<xs:annotation>
		<xs:documentation>
	XHTML Document Model

     This module describes the groupings of elements that make up
     common content models for XHTML elements.

     XHTML has three basic content models:

         Inline.mix;  character-level elements
         Block.mix;   block-like elements, eg., paragraphs and lists
         Flow.mix;    any block or inline elements

    Any groups declared in this module may be used
     to create element content models, but the above three are
     considered 'global' (insofar as that term applies here).
  </xs:documentation>
	</xs:annotation>
	<!--
MH wrapped choices in sequences so occurrence indicators are OK
-->
	<xs:group name="HeadOpts.mix">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="script" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="style"/>
			<xs:element ref="meta"/>
			<xs:element ref="link"/>
			<xs:element ref="object"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--
ins and del are used to denote editing changes
-->
	<xs:group name="Edit.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="ins"/>
			<xs:element ref="del"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--
script and noscript are used to contain scripts
and alternative content
-->
	<xs:group name="Script.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="script"/>
			<xs:element ref="noscript"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--

-->
	<xs:group name="Misc.extra">
		<xs:choice/>
	</xs:group>
	<!--
These elements are neither block nor inline, and can
essentially be used anywhere in the document body.
-->
	<xs:group name="Misc.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="Edit.class"/>
			<xs:group ref="Script.class"/>
			<xs:group ref="Misc.extra"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--

-->
	<!-- Inline Elements -->
	<xs:group name="InlStruct.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="br"/>
			<xs:element ref="span"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--

-->
	<xs:group name="InlPhras.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="em"/>
			<xs:element ref="strong"/>
			<xs:element ref="dfn"/>
			<xs:element ref="code"/>
			<xs:element ref="samp"/>
			<xs:element ref="kbd"/>
			<xs:element ref="var"/>
			<xs:element ref="cite"/>
			<xs:element ref="abbr"/>
			<xs:element ref="acronym"/>
			<xs:element ref="q"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--

-->
	<xs:group name="InlPres.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="tt"/>
			<xs:element ref="i"/>
			<xs:element ref="b"/>
			<xs:element ref="big"/>
			<xs:element ref="small"/>
			<xs:element ref="sub"/>
			<xs:element ref="sup"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--

-->
	<xs:group name="I18n.class">
		<xs:sequence>
			<xs:element ref="bdo"/>
		</xs:sequence>
	</xs:group>
	<!--

-->
	<xs:group name="Anchor.class">
		<xs:sequence>
			<xs:element ref="a"/>
		</xs:sequence>
	</xs:group>
	<!--

-->
	<xs:group name="InlSpecial.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="img"/>
			<xs:element ref="map"/>
			<xs:element ref="applet"/>
			<xs:element ref="object"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--

-->
	<xs:group name="InlForm.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="input"/>
			<xs:element ref="select"/>
			<xs:element ref="textarea"/>
			<xs:element ref="label"/>
			<xs:element ref="button"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--

-->
	<xs:group name="Inline.extra">
		<xs:choice/>
	</xs:group>
	<!--

-->
	<!--ruby is required in XHTML -->
	<xs:group name="Ruby.class">
		<xs:sequence>
			<xs:element ref="ruby"/>
		</xs:sequence>
	</xs:group>
	<!--
Inline.class includes all inline elements,
used as a component in mixes

MH: added sequences to wrap choices so occurrence indicators are OK
-->
	<xs:group name="Inline.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="InlStruct.class"/>
			<xs:group ref="InlPhras.class"/>
			<xs:group ref="InlPres.class"/>
			<xs:group ref="I18n.class"/>
			<xs:group ref="Anchor.class"/>
			<xs:group ref="InlSpecial.class"/>
			<xs:group ref="InlForm.class"/>
			<xs:group ref="Ruby.class"/>
			<xs:group ref="Inline.extra"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--
InlNoRuby.class includes all inline elements 
except ruby, used as a component in mixes
-->
	<xs:group name="InlNoRuby.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="InlStruct.class"/>
			<xs:group ref="InlPhras.class"/>
			<xs:group ref="InlPres.class"/>
			<xs:group ref="I18n.class"/>
			<xs:group ref="Anchor.class"/>
			<xs:group ref="InlSpecial.class"/>
			<xs:group ref="InlForm.class"/>
			<xs:group ref="Inline.extra"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--
NoRuby.content includes all inlines except ruby
-->
	<xs:complexType name="NoRuby.content" mixed="true">
		<xs:sequence>
			<xs:group ref="InlNoRuby.class"/>
			<xs:group ref="Misc.class"/>
		</xs:sequence>
	</xs:complexType>
	<!--
InlNoAnchor.class includes all non-anchor inlines,
used as a component in mixes
-->
	<xs:group name="InlNoAnchor.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="InlStruct.class"/>
			<xs:group ref="InlPhras.class"/>
			<xs:group ref="InlPres.class"/>
			<xs:group ref="I18n.class"/>
			<xs:group ref="InlSpecial.class"/>
			<xs:group ref="InlForm.class"/>
			<xs:group ref="Ruby.class"/>
			<xs:group ref="Inline.extra"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--
InlNoAnchor.mix includes all non-anchor inlines
-->
	<xs:group name="InlNoAnchor.mix">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="InlNoAnchor.class"/>
			<xs:group ref="Misc.class"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--
Inline.mix includes all inline elements, including Misc.class
-->
	<xs:group name="Inline.mix">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="Inline.class"/>
			<xs:group ref="Misc.class"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--
In the HTML 4.0 DTD, heading and list elements were included
in the block group. The Heading.class and
List.class groups must now be included explicitly
on element declarations where desired.
-->
	<xs:group name="Heading.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="h1"/>
			<xs:element ref="h2"/>
			<xs:element ref="h3"/>
			<xs:element ref="h4"/>
			<xs:element ref="h5"/>
			<xs:element ref="h6"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--

-->
	<xs:group name="List.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="ul"/>
			<xs:element ref="ol"/>
			<xs:element ref="dl"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--

-->
	<xs:group name="BlkStruct.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="p"/>
			<xs:element ref="div"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--

-->
	<xs:group name="BlkPhras.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="pre"/>
			<xs:element ref="blockquote"/>
			<xs:element ref="address"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--

-->
	<xs:group name="BlkPres.class">
		<xs:sequence>
			<xs:element ref="hr" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:group>
	<!--

-->
	<xs:group name="BlkSpecial.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="table"/>
			<xs:element ref="form"/>
			<xs:element ref="fieldset"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--
MH: Removed minOccurs/maxOccurs from choice: invalid and useless
-->
	<xs:group name="Block.extra">
		<xs:choice/>
	</xs:group>
	<!--
Block.class includes all block elements,
used as an component in mixes
-->
	<xs:group name="Block.class">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="BlkStruct.class"/>
			<xs:group ref="BlkPhras.class"/>
			<xs:group ref="BlkPres.class"/>
			<xs:group ref="BlkSpecial.class"/>
			<xs:group ref="Block.extra"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--
Block.mix includes all block elements plus %Misc.class;
-->
	<xs:group name="Block.mix">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="Heading.class"/>
			<xs:group ref="List.class"/>
			<xs:group ref="Block.class"/>
			<xs:group ref="Misc.class"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!-- 
All Content Elements 

Flow.mix includes all text content, block and inline
Note that the "any" element included here allows us
to add data from any other namespace, a necessity
for compound document creation.
Note however that it is not possible to add
to any head level element without further
modification. To add RDF metadata to the head
of a document, modify the struct module.
-->
	<xs:group name="Flow.mix">
      <xs:sequence>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="Heading.class"/>
			<xs:group ref="List.class"/>
			<xs:group ref="Block.class"/>
			<xs:group ref="Inline.class"/>
			<xs:group ref="Misc.class"/>
		</xs:choice>
      </xs:sequence>
	</xs:group>
	<!--

-->
</xs:schema>
