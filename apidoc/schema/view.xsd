<!-- Copyright 2002-2014 MarkLogic Corporation.  All Rights Reserved. -->
<xs:schema targetNamespace="http://marklogic.com/xdmp/view"
           xmlns="http://marklogic.com/xdmp/view"
           xmlns:this="http://marklogic.com/xdmp/view"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
		   xmlns:cts="http://marklogic.com/cts">

  <xs:annotation>
    <xs:documentation>
      Schema for specifying relational views.
    </xs:documentation>
    <xs:appinfo>
    </xs:appinfo>
  </xs:annotation>

  <xs:import namespace="http://marklogic.com/cts"
             schemaLocation="cts.xsd"/>

  <xs:element name="schema" type="schema">
    <xs:annotation>
      <xs:documentation>
      A relational schema definition.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="schema">
	<xs:sequence>
	  <xs:element ref="schema-id"/>
	  <xs:element ref="schema-name"/>
	  <xs:element ref="viewref" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
  </xs:complexType>

  <xs:element name="schema-name" type="name">
    <xs:annotation>
      <xs:documentation>
        The name of a relational schema. This will be the SQL schema name.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="schema-id" type="id">
    <xs:annotation>
      <xs:documentation>
      The unique ID of the schema.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="viewref" type="id">
    <xs:annotation>
      <xs:documentation>
      A reference to the unique ID of a view.
      </xs:documentation>
    </xs:annotation> 
  </xs:element>

  <xs:element name="view" type="view">
    <xs:annotation>
      <xs:documentation>
        A relational view over a collection of range indexes.      
      </xs:documentation>
    </xs:annotation>
	<xs:unique name="unique-names">
	  <xs:selector xpath="this:columns/this:column|this:fields/this:field"/>
	  <xs:field xpath="this:column-name|this:field-name"/>
	</xs:unique>
  </xs:element>

  <xs:complexType name="view">
	<xs:sequence>
	  <xs:element ref="view-id"/>
	  <xs:element ref="view-name"/>
	  <xs:element ref="view-scope" minOccurs="0"/>
	  <xs:element ref="ordered" minOccurs="0"/>
	  <xs:element ref="columns"/>
      <xs:element ref="fields" minOccurs="0"/>
	</xs:sequence>
  </xs:complexType>

  <xs:element name="view-id" type="id">
    <xs:annotation>
      <xs:documentation>
      The unique ID of the view.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="view-name" type="name">
    <xs:annotation>
      <xs:documentation>
        The name of a relational view. This will be the SQL view name.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="element-scope">
    <xs:complexContent>
      <xs:extension base="view-scope">
        <xs:sequence>
          <xs:element ref="namespace-uri"/>
          <xs:element ref="localname"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:element name="element-scope" type="element-scope" 
			  substitutionGroup="view-scope">
    <xs:annotation>
      <xs:documentation>
      A view scope defined by a root element.
      </xs:documentation>
    </xs:annotation>
  </xs:element>


  <xs:simpleType name="collection-uri">
    <xs:restriction base="xs:string">
    </xs:restriction>
  </xs:simpleType>

  <xs:element name="collection" type="collection-uri"/>

  <xs:complexType name="collection-scope">
    <xs:complexContent>
      <xs:extension base="view-scope">
        <xs:sequence>
          <xs:element ref="collection"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:element name="collection-scope" type="collection-scope" 
			  substitutionGroup="view-scope" >
    <xs:annotation>
      <xs:documentation>
      A view scope defined by a collection.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="view-scope" type="view-scope" abstract="true">
    <xs:annotation>
      <xs:documentation>
      A scope defining which documents are members of the view.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="view-scope">
    <xs:complexContent>
      <xs:restriction base="xs:anyType">
        <xs:sequence/>
        <xs:anyAttribute processContents="lax"/> 
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:element name="ordered" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>
      Whether the columns in the view must appear in order in the document.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="columns" type="columns">
    <xs:annotation>
      <xs:documentation>
      The columns in the view.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="columns">
	<xs:sequence>
	  <xs:element ref="column" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
  </xs:complexType>

  <xs:element name="column" type="column">
    <xs:annotation>
      <xs:documentation>
        A column in a relational view defined over some range index.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="column">
	<xs:sequence>
	  <xs:element ref="column-name"/>
	  <xs:element ref="cts:base-reference"/>
	</xs:sequence>
  </xs:complexType>

  <xs:element name="column-name" type="name">
    <xs:annotation>
      <xs:documentation>
        The name of the column in the relational view. This will be the SQL column name.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="fields" type="fields"/>

  <xs:complexType name="fields">
    <xs:sequence>
      <xs:element ref="field" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="field" type="field"/>

  <xs:complexType name="field">
    <xs:annotation>
      <xs:documentation>
        A field available for search with the SQL MATCH clause.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="field-name"/>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="field-name" type="name"/>

  <xs:simpleType name="name">
    <xs:annotation>
      <xs:documentation>
      A SQL name, for a schema, view, or column.
      </xs:documentation>
    </xs:annotation>
	<xs:restriction base="xs:NCName">
	  <xs:minLength value="1"/>
      <xs:pattern value="[^.\-\p{Z}]+"/>
	</xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="id">
    <xs:annotation>
      <xs:documentation>
      A unique ID.
      </xs:documentation>
    </xs:annotation>
	<xs:restriction base="xs:unsignedLong"/>
  </xs:simpleType>

  <xs:element name="localname" type="localname">
    <xs:annotation>
      <xs:documentation>
      A local name of an element.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:simpleType name="localname">
	<xs:restriction base="xs:NCName"/>
  </xs:simpleType>

  <xs:element name="namespace-uri" type="namespace-uri">
    <xs:annotation>
      <xs:documentation>
        The namespace URI of an element.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:simpleType name="namespace-uri">
	<xs:restriction base="xs:anyURI"/>
  </xs:simpleType>
</xs:schema>

