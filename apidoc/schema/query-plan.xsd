<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright 2002-2014 MarkLogic Corporation.  All Rights Reserved. -->
<xs:schema targetNamespace="http://marklogic.com/cts/query"
 xmlns="http://marklogic.com/cts/query"
 xmlns:err="http://marklogic.com/xdmp/error"
 xmlns:xs="http://www.w3.org/2001/XMLSchema"
 elementFormDefault="qualified">

  <xs:import namespace="http://marklogic.com/xdmp/error" 
             schemaLocation="error.xsd"/>

  <xs:element name="query-plan" type="query-plan"/>
  <xs:element name="relevance-info" type="relevance-info"/>

  <xs:complexType name="query-plan">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="trace"/>
        <xs:element ref="plan"/> 
        <xs:element ref="true-fact"/> 
      </xs:choice>
      <xs:element ref="result" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="plan" abstract="true" type="plan"/>

  <xs:element name="intermediate-plan" type="plan" substitutionGroup="plan"/>

  <xs:element name="partial-plan" type="plan" substitutionGroup="plan"/>

  <xs:element name="final-plan" type="plan" substitutionGroup="plan"/>
   
  <xs:complexType name="plan" mixed="false">
    <xs:sequence>
      <xs:element ref="query"/>
    </xs:sequence>
    <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
  </xs:complexType>
  
  <xs:element name="true-fact">
    <xs:complexType>
      <xs:sequence>
      <xs:element ref="node"/>
      <xs:element ref="key"/>
      <xs:element ref="annotation"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="result">
    <xs:complexType>
      <xs:sequence/>
      <xs:attribute name="estimate" type="xs:unsignedLong"/>
      <xs:attribute name="elapsed-time" type="xs:dayTimeDuration"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="query" abstract="true" type="query"/>

  <xs:complexType name="query" mixed="false">
    <xs:sequence/>
  </xs:complexType>

  <xs:element name="term-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
          <xs:sequence>
            <xs:element ref="key"/>
            <xs:element ref="annotation"/>
          </xs:sequence>
          <xs:attribute name="weight" type="xs:double"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="value-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="key"/>
             <xs:element ref="annotation"/>
           </xs:sequence>
           <xs:attribute name="weight" type="xs:double"/>
           <xs:attribute name="min-occurs" type="xs:integer" use="optional"/>
           <xs:attribute name="max-occurs" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="timestamp-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="key"/>
             <xs:element ref="annotation"/>
           </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="reverse-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
          <xs:sequence>
            <xs:any processContents="skip"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="word-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="KP" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="weight" type="xs:double"/>
           <xs:attribute name="distance-weight" type="xs:double" use="optional"/>
           <xs:attribute name="min-occurs" type="xs:integer" use="optional"/>
           <xs:attribute name="max-occurs" type="xs:integer" use="optional"/>
           <xs:attribute name="synonym" type="xs:boolean" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="KP">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="key" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="annotation"/>
      </xs:sequence>
      <xs:attribute name="pos" type="xs:integer" use="optional"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="multi-qname-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="key" minOccurs="0" maxOccurs="unbounded"/>
             <xs:element ref="annotation"/>
           </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="and-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="query" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="and-two-queries" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="query"/>
             <xs:element ref="query"/>
           </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="boost-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="query"/>
             <xs:element ref="query"/>
           </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="and-three-queries" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="query"/>
             <xs:element ref="query"/>
             <xs:element ref="query"/>
           </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="or-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="query" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="distance-weight" type="xs:double" use="optional"/>
           <xs:attribute name="synonym" type="xs:boolean" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="or-two-queries" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="query"/>
             <xs:element ref="query"/>
           </xs:sequence>
           <xs:attribute name="distance-weight" type="xs:double" use="optional"/>
           <xs:attribute name="synonym" type="xs:boolean" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="or-three-queries" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="query"/>
             <xs:element ref="query"/>
             <xs:element ref="query"/>
           </xs:sequence>
           <xs:attribute name="distance-weight" type="xs:double" use="optional"/>
           <xs:attribute name="synonym" type="xs:boolean" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="and-not-two-queries" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="query"/>
             <xs:element ref="query"/>
           </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="not-in-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="query"/>
             <xs:element ref="query"/>
           </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="and-uri-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="query"/>
             <xs:element ref="query"/>
           </xs:sequence>
           <xs:attribute name="dockind" type="dockind"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="and-not-uri-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="query"/>
             <xs:element ref="query"/>
           </xs:sequence>
           <xs:attribute name="dockind" type="dockind"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="near-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="query" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="weight" type="xs:double"/>
           <xs:attribute name="ordered" type="xs:boolean"/>
           <xs:attribute name="distance" type="xs:integer"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="near-two-queries" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="query"/>
             <xs:element ref="query"/>
           </xs:sequence>
           <xs:attribute name="weight" type="xs:double"/>
           <xs:attribute name="ordered" type="xs:boolean"/>
           <xs:attribute name="distance" type="xs:integer"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="element-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="key" minOccurs="0" maxOccurs="unbounded"/>
             <xs:element ref="annotation"/>
             <xs:element ref="query" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="registered-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="key"/>
             <xs:element ref="annotation"/>
           </xs:sequence>
           <xs:attribute name="weight" type="xs:double"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="range-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="key"/>
             <xs:element ref="annotation"/>
             <xs:element ref="lower-bound"/>
             <xs:element ref="upper-bound"/>
           </xs:sequence>
           <xs:attribute name="weight" type="xs:double"/>
           <xs:attribute name="hasPos" type="xs:boolean" use="optional"/>
           <xs:attribute name="min-occurs" type="xs:integer" use="optional"/>
           <xs:attribute name="max-occurs" type="xs:integer" use="optional"/>
           <xs:attribute name="synonym" type="xs:boolean" use="optional"/>
           <xs:attribute name="score-function" type="score-function" use="optional"/>
           <xs:attribute name="slope-factor" type="xs:double" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="scatter-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="key"/>
             <xs:element ref="annotation"/>
             <xs:element ref="value" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="weight" type="xs:double"/>
           <xs:attribute name="hasPos" type="xs:boolean" use="optional"/>
           <xs:attribute name="min-occurs" type="xs:integer" use="optional"/>
           <xs:attribute name="max-occurs" type="xs:integer" use="optional"/>
           <xs:attribute name="synonym" type="xs:boolean" use="optional"/>
           <xs:attribute name="score-function" type="score-function" use="optional"/>
           <xs:attribute name="slope-factor" type="xs:double" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="box-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="key"/>
             <xs:element ref="annotation"/>
             <xs:element ref="region" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="weight" type="xs:double"/>
           <xs:attribute name="hasPos" type="xs:boolean" use="optional"/>
           <xs:attribute name="min-occurs" type="xs:integer" use="optional"/>
           <xs:attribute name="max-occurs" type="xs:integer" use="optional"/>
           <xs:attribute name="synonym" type="xs:boolean" use="optional"/>
           <xs:attribute name="score-function" type="score-function" use="optional"/>
           <xs:attribute name="slope-factor" type="xs:double" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="circle-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="key"/>
             <xs:element ref="annotation"/>
             <xs:element ref="circle" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="weight" type="xs:double"/>
           <xs:attribute name="hasPos" type="xs:boolean" use="optional"/>
           <xs:attribute name="min-occurs" type="xs:integer" use="optional"/>
           <xs:attribute name="max-occurs" type="xs:integer" use="optional"/>
           <xs:attribute name="synonym" type="xs:boolean" use="optional"/>
           <xs:attribute name="score-function" type="score-function" use="optional"/>
           <xs:attribute name="slope-factor" type="xs:double" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="polygon-query" substitutionGroup="query">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="query">
           <xs:sequence>
             <xs:element ref="key"/>
             <xs:element ref="annotation"/>
             <xs:element ref="polygon" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="weight" type="xs:double"/>
           <xs:attribute name="hasPos" type="xs:boolean" use="optional"/>
           <xs:attribute name="min-occurs" type="xs:integer" use="optional"/>
           <xs:attribute name="max-occurs" type="xs:integer" use="optional"/>
           <xs:attribute name="synonym" type="xs:boolean" use="optional"/>
           <xs:attribute name="score-function" type="score-function" use="optional"/>
           <xs:attribute name="slope-factor" type="xs:double" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="key" type="xs:unsignedLong"/>
  <xs:element name="annotation" type="xs:string"/>
  <xs:element name="node" type="xs:string"/>
 
  <xs:simpleType name="hex">
    <xs:restriction base="xs:string">
      <xs:pattern value="[0123456789abcdefABCDEF]{16}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="dockind">
    <xs:restriction base="xs:string">
      <xs:enumeration value="any"/>
      <xs:enumeration value="document"/>
      <xs:enumeration value="lock"/>
      <xs:enumeration value="properties"/>
      <xs:enumeration value="???"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="score-function">
    <xs:restriction base="xs:string">
      <xs:enumeration value="zero"/>
      <xs:enumeration value="linear"/>
      <xs:enumeration value="reciprocal"/>
      <xs:enumeration value="???"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:element name="lower-bound" type="bound" nillable="true"/>
  <xs:element name="upper-bound" type="bound" nillable="true"/>

  <xs:element name="value" type="xs:anySimpleType" nillable="true"/>

  <xs:complexType name="bound">
    <xs:simpleContent>
      <xs:extension base="xs:anySimpleType">
        <xs:attribute name="open" type="xs:boolean" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:element name="circle">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="region"/>
        <xs:element ref="bbox" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="polygon">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="region"/>
        <xs:element ref="bbox" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="region" type="xs:string"/>
  <xs:element name="bbox" type="xs:string"/>

  <xs:element name="trace" abstract="true" type="trace"/>
 
  <xs:complexType name="trace" mixed="true">
    <xs:sequence minOccurs="0"/>
  </xs:complexType>

  <xs:complexType name="element-only-trace">
    <xs:complexContent mixed="false">
      <xs:restriction base="trace"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:element name="expansion-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="element-only-trace">
          <xs:sequence>
            <xs:element ref="interval" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="expansion" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
          <xs:attribute name="text" type="xs:string"/>
          <xs:attribute name="counts" type="xs:string"/>
          <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="info-trace">
    <xs:simpleContent>
      <xs:restriction base="trace">
        <xs:simpleType>
          <xs:restriction base="xs:anyAtomicType"/>
        </xs:simpleType>
      </xs:restriction>
    </xs:simpleContent>
  </xs:complexType>

  <xs:element name="info-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="info-trace">
          <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="error-trace" substitutionGroup="trace">
    <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="trace">
          <xs:sequence>
            <xs:element ref="err:error"/>
          </xs:sequence>
          <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="word-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="element-only-trace">
          <xs:sequence>
            <xs:element ref="key" minOccurs="1" maxOccurs="unbounded"/>
          </xs:sequence>
          <xs:attribute name="text" type="xs:string"/>
          <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="word-pair-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="element-only-trace">
           <xs:sequence>
             <xs:element ref="key" minOccurs="1" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="text" type="xs:string"/>
           <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="char-pair-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="element-only-trace">
           <xs:sequence>
             <xs:element ref="key" minOccurs="1" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="text" type="xs:string"/>
           <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="field-word-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="element-only-trace">
           <xs:sequence>
             <xs:element ref="key" minOccurs="1" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="field-name" type="xs:string"/>
           <xs:attribute name="text" type="xs:string"/>
           <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="field-value-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="element-only-trace">
           <xs:sequence>
             <xs:element ref="key" minOccurs="1" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="field-name" type="xs:string"/>
           <xs:attribute name="text" type="xs:string"/>
           <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="field-word-pair-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="element-only-trace">
           <xs:sequence>
             <xs:element ref="key" minOccurs="1" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="field-name" type="xs:string"/>
           <xs:attribute name="text" type="xs:string"/>
           <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="field-char-pair-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="element-only-trace">
           <xs:sequence>
             <xs:element ref="key" minOccurs="1" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="field-name" type="xs:string"/>
           <xs:attribute name="text" type="xs:string"/>
           <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="elem-word-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="element-only-trace">
           <xs:sequence>
             <xs:element ref="key" minOccurs="1" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="elem-name" type="xs:NCName"/>
           <xs:attribute name="elem-uri" type="xs:string"/>
           <xs:attribute name="text" type="xs:string"/>
           <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="elem-word-pair-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="element-only-trace">
           <xs:sequence>
             <xs:element ref="key" minOccurs="1" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="elem-name" type="xs:NCName"/>
           <xs:attribute name="elem-uri" type="xs:string"/>
           <xs:attribute name="text" type="xs:string"/>
           <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="elem-char-pair-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="element-only-trace">
           <xs:sequence>
             <xs:element ref="key" minOccurs="1" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="elem-name" type="xs:NCName"/>
           <xs:attribute name="elem-uri" type="xs:string"/>
           <xs:attribute name="text" type="xs:string"/>
           <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="elem-attr-word-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="element-only-trace">
           <xs:sequence>
             <xs:element ref="key" minOccurs="1" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="elem-name" type="xs:NCName"/>
           <xs:attribute name="elem-uri" type="xs:string"/>
           <xs:attribute name="attr-name" type="xs:NCName"/>
           <xs:attribute name="attr-uri" type="xs:string"/>
           <xs:attribute name="text" type="xs:string"/>
           <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="elem-attr-word-pair-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="element-only-trace">
           <xs:sequence>
             <xs:element ref="key" minOccurs="1" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="elem-name" type="xs:NCName"/>
           <xs:attribute name="elem-uri" type="xs:string"/>
           <xs:attribute name="attr-name" type="xs:NCName"/>
           <xs:attribute name="attr-uri" type="xs:string"/>
           <xs:attribute name="text" type="xs:string"/>
           <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="lexicon-word-trace" substitutionGroup="trace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="element-only-trace">
           <xs:sequence>
             <xs:element ref="key" minOccurs="1" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="field-name" type="xs:string" use="optional"/>
           <xs:attribute name="elem-name" type="xs:NCName" use="optional"/>
           <xs:attribute name="elem-uri" type="xs:string" use="optional"/>
           <xs:attribute name="attr-name" type="xs:NCName" use="optional"/>
           <xs:attribute name="attr-uri" type="xs:string" use="optional"/>
           <xs:attribute name="text" type="xs:string"/>
           <xs:attribute name="elapsed-time" type="xs:dateTime"/> 
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="expansion">
    <xs:complexType>
      <xs:attribute name="text" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="interval">
    <xs:complexType>
      <xs:attribute name="lowerbound" type="xs:string"/>
      <xs:attribute name="upperbound" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  
  <xs:complexType name="relevance-info">
    <xs:sequence>
      <xs:element ref="score"/>
      <xs:element ref="confidence"/>
      <xs:element ref="fitness"/>
      <xs:element ref="uri"/>
      <xs:element ref="path"/>
      <xs:element ref="clause"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:element name="uri" type="xs:string"/>
  
  <xs:element name="path" type="xs:string"/>
  
  <xs:element name="clause" type="clause" abstract="true"/>
  
  <xs:complexType name="clause">
    <xs:sequence/>
  </xs:complexType>

  <xs:element name="term" substitutionGroup="clause">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="clause">
          <xs:sequence>
            <xs:element ref="score"/>
            <xs:element ref="key"/>
            <xs:element ref="annotation" minOccurs="0"/>
          </xs:sequence>
          <xs:attribute name="weight" type="xs:float" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="range" substitutionGroup="clause">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="clause">
          <xs:sequence>
            <xs:element ref="score"/>
            <xs:element ref="key"/>
            <xs:element ref="annotation" minOccurs="0"/>
          </xs:sequence>
          <xs:attribute name="weight" type="xs:float" use="optional"/>
          <xs:attribute name="type" type="xs:string" use="required"/>
          <xs:attribute name="score-function" type="xs:string" use="required"/>
          <xs:attribute name="slope-factor" type="xs:double" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="and" substitutionGroup="clause">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="clause">
          <xs:sequence>
	    <xs:element ref="score"/>
	    <xs:element ref="clause" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="or" substitutionGroup="clause">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="clause">
          <xs:sequence>
	    <xs:element ref="score"/>
	    <xs:element ref="clause" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
          <xs:attribute name="synonym" type="xs:boolean" use="optional"/>
          <xs:attribute name="distance-weight" type="xs:float" use="optional"/>
          <xs:attribute name="distance" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="word" substitutionGroup="clause">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="clause">
          <xs:sequence>
	    <xs:element ref="score"/>
	    <xs:element ref="clause" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
          <xs:attribute name="synonym" type="xs:boolean" use="optional"/>
          <xs:attribute name="distance-weight" type="xs:float" use="optional"/>
          <xs:attribute name="distance" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="near" substitutionGroup="clause">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="clause">
          <xs:sequence>
	    <xs:element ref="score"/>
	    <xs:element ref="clause" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
          <xs:attribute name="distance-weight" type="xs:float" use="optional"/>
          <xs:attribute name="distance" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="score">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:integer">
          <xs:attribute name="formula" type="xs:string" use="required"/>
          <xs:attribute name="computation" type="xs:string" use="required"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="confidence">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:double">
          <xs:attribute name="formula" type="xs:string" use="required"/>
          <xs:attribute name="computation" type="xs:string" use="required"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="fitness">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:double">
          <xs:attribute name="formula" type="xs:string" use="required"/>
          <xs:attribute name="computation" type="xs:string" use="required"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  
</xs:schema>
