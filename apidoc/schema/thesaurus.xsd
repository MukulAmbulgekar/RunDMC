<!-- Copyright 2002-2014 MarkLogic Corporation.  All Rights Reserved. -->
<xs:schema targetNamespace="http://marklogic.com/xdmp/thesaurus"
 xsi:schemaLocation="http://www.w3.org/2001/XMLSchema XMLSchema.xsd"
 elementFormDefault="qualified"
 xmlns="http://marklogic.com/xdmp/thesaurus"
 xmlns:xdmp="http://marklogic.com/xdmp"
 xmlns:xs="http://www.w3.org/2001/XMLSchema"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

<xs:complexType name="qualifiers">
  <xs:annotation>
    <xs:documentation>
      [From ANSI/NISO Z39.19-2003]
      A note to allow a user to distinguish between homographic
      terms.  It may itself be a descriptor, often a broader term that
      the one being qualified.  It should be as brief as possible,
      usually one word.  Qualifiers should be standard across the
      thesaurus, e.g. 'biology' and 'bioscience' should not both be
      used as qualifiers.

      Examples:
        cranes (birds)
        cranes (lifiting equipment)
	
        mercury (metal)
        Mercury (planet)
        Mercury (Roman deity)
    </xs:documentation>
  </xs:annotation>
  <xs:sequence>
    <xs:element name="qualifier" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="scope-notes">
  <xs:annotation>
    <xs:documentation>
      [From ANSI/NISO Z39.19-2003]
      A scope note is used to restrict or expand the application of a
      descriptor, to distinguish between descriptors that have
      overlapping meanings in natural language, or to provide other advice on  
      term usage to either the indexer or the searcher. A scope note
      should state the chosen meaning of a descriptor; it may also
      indicate other meanings that are recognized in natural language, but
      which have been deliberately excluded from the controlled
      vocabulary. A scope note, unlike a parenthetical qualifier, is
      not part of a descriptor. While qualifiers are  generally added
      only to homographs, a scope note may be supplied for any
      descriptor. 

      Example: 
        illuminations 
         Includes both the ornamental decoration and the illustrations
         in manuscripts as well as in some early printed books, if
         done by hand.
    </xs:documentation>
  </xs:annotation>
  <xs:sequence>
    <xs:element name="scope-note" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
</xs:complexType>

<xs:simpleType name="part-of-speech">
  <xs:restriction base="xs:string">
    <xs:enumeration value="noun"/>
    <xs:enumeration value="verb"/>
    <xs:enumeration value="adj"/>
    <xs:enumeration value="adv"/>
  </xs:restriction>  
</xs:simpleType>

<xs:complexType name="synonym">
  <xs:all>
    <xs:element name="term" type="xs:string"/>
    <xs:element name="qualifiers" type="qualifiers" minOccurs="0"/>
    <xs:element name="scope-notes" type="scope-notes" minOccurs="0"/>
    <xs:element name="part-of-speech" type="part-of-speech" minOccurs="0"/>
  </xs:all>
</xs:complexType>

<xs:complexType name="entry">
  <xs:annotation>
    <xs:appinfo>
      <xdmp:fragment-root/>    
    </xs:appinfo>
  </xs:annotation>
  <xs:sequence>
    <xs:element name="term" type="xs:string" minOccurs="1" maxOccurs="1"/>
    <xs:element name="part-of-speech" type="part-of-speech" minOccurs="0"/>
    <xs:element name="qualifiers" type="qualifiers" minOccurs="0"/>
    <xs:element name="scope-notes" type="scope-notes" minOccurs="0"/>
    <xs:element name="synonym" type="synonym" minOccurs="1" maxOccurs="unbounded"/>
  </xs:sequence>
</xs:complexType>

<xs:element name="entry" type="entry">
  <xs:annotation>
    <xs:documentation>
      An entry in the thesaurus
    </xs:documentation>
  </xs:annotation>
  <xs:unique name="syn-term">
    <xs:selector xpath="synonym"/>
    <xs:field xpath="term"/>
  </xs:unique> 
</xs:element>

<xs:complexType name="authors">
  <xs:choice minOccurs="1" maxOccurs="unbounded">
    <xs:element name="author" type="xs:string"/>
  </xs:choice>
</xs:complexType>

<xs:complexType name="source">
  <xs:all>
    <xs:element name="date" type="xs:date" minOccurs="0"/>
    <xs:element name="version" type="xs:string" minOccurs="0"/>
    <xs:element name="author" type="xs:string" minOccurs="0"/>
    <xs:element name="copyright" type="xs:string" minOccurs="0"/>
    <xs:element name="sources" type="sources" minOccurs="0"/>
    <xs:element name="package-name" type="xs:string" minOccurs="0"/> 
  </xs:all>
</xs:complexType>

<xs:complexType name="sources">
  <xs:choice minOccurs="1" maxOccurs="unbounded">
    <xs:element name="source" type="source"/>
  </xs:choice>
</xs:complexType>

<xs:complexType name="metadata">
  <xs:annotation>
    <xs:appinfo>
      <xdmp:fragment-root/>    
    </xs:appinfo>
  </xs:annotation>
  <xs:all>
    <xs:element name="date" type="xs:date" minOccurs="0"/>
    <xs:element name="authors" type="authors" minOccurs="0"/> 
    <xs:element name="package-name" type="xs:string" minOccurs="0"/>
    <xs:element name="language" type="xs:string" minOccurs="0"/>
    <xs:element name="category" type="xs:string" minOccurs="0"/>
    <xs:element name="description" type="xs:string" minOccurs="0"/>
    <xs:element name="version" type="xs:string" minOccurs="0"/>
    <xs:element name="updates" type="xs:string" minOccurs="0"/>
    <xs:element name="copyright" type="xs:string" minOccurs="0"/>
    <xs:element name="sources" type="sources"/>
  </xs:all>
</xs:complexType>

<xs:element name="thesaurus">
  <xs:complexType>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="entry"/>
      <xs:element name="metadata" type="metadata"/>
    </xs:choice>    
  </xs:complexType>
</xs:element>

</xs:schema>
